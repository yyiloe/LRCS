mustwaitpinready waits up to 3 - second until connection is up ( pin endpoint ) .
newgatewaycommand returns the cobra command for " gateway " .
newlimitedbufferreader returns a reader that reads from the given reader but limits the amount of data returned to at most n bytes .
withabortcontext specifies the context for permanently aborting the transaction .
withprefetch is a hint to prefetch a list of keys before trying to apply .
newstm initiates a new stm instance .
first returns the store revision from the first fetc .
cmps guards the txn from updates to read se .
cmps returns a cmp list testing no writes have happened past re .
puts is the list of ops for all pending write .
newstmrepeatable is deprecated .
newstmserializable is deprecated .
newstmreadcommitted is deprecated .
newcertpool creates x509 certpool with provided ca files .
newcert generates tls cert by using the given cert .
newgrpcloggerv2 converts " * zap .
newgrpcloggerv2fromzapcore creates " grpclog .
pause pauses the peer .
resume resumes a paused peer .
pick picks a chan for sending the given message .
post posts the given request .
newtxnresp allocates a txn response for a txn request given a path .
applycompare applies the compare request .
opcompact wraps slice compactoption to create a compactop .
newpriorityqueue creates an etcd priority queue .
enqueue puts a value into a queue with a given priority .
newleaderstats generates a new leaderstats with the given id as leade .
succ updates the followerstats with a successful sen .
fail updates the followerstats with an unsuccessful sen .
delete removes a watcher and returns the number of remaining watchers .
startstreamwriter creates a streamwrite and starts a long running go - routine that accepts messages and writes to the attached outgoing connection .
checkstreamsupport checks whether the stream type is supported in the given version .
maybeupdate returns false if the given n index comes from an outdated message .
maybedecrto returns false if the given to index comes from an out of order message .
ispaused returns whether sending log entries to this node has been paused .
needsnapshotabort returns true if snapshot progress s match is equal or higher than the pendingsnapshot .
add adds an inflight into inflight .
grow the inflight buffer by doubling up to inflights .
freeto frees the inflights smaller or equal to the given to flight .
savedbfrom saves snapshot of the database from the given reader .
dbfilepath returns the file path for the snapshot of the database with given id .
set parses a command line set of strings .
newuniquestringsvalue implements string slice as " flag .
uniquestringsfromflag returns a string slice from the flag .
uniquestringsmapfromflag returns a map of strings from the flag .
percentiles returns percentile distribution of float64 slice .
verifybootstrap sanity - checks the initial config for bootstrap case and returns an error for things that should never happen .
verifyjoinexisting sanity - checks the initial config for join existing cluster case and returns an error for things that should never happen .
haslocalmember checks that the cluster at least contains the local server .
reqtimeout returns timeout for request to finish .
getstatus gets a copy of the current raft status .
marshaljson translates the raft status into json .
getdefaulthost obtains the first ip address of machine from the routing table and returns the ip address as string .
used to get an address of interface .
used to get a name of interface .
getdefaultinterfaces gets names of interfaces and returns a map [ interface ] families .
parseprefsrc returns preferred source address and output interface index ( rta oif ) .
lscommandfunc executes the " ls " command .
printls writes a response out in a manner similar to the ls command in unix .
rprint recursively prints out the nodes in the node structure .
newleaserenewercommand returns the cobra command for " lease - renewer runner " .
snapnames returns the filename of the snapshots in logical time order ( from newest to oldest ) .
gethostname returns the hostname from request host field .
dequeue returns enqueue ( ) d elements in fifo order .
getciphersuite returns the corresponding cipher suite .
post posts a data payload to a url .
xxx oneoffuncs is for the internal use of the proto package .
xxx oneoffuncs is for the internal use of the proto package .
xxx oneoffuncs is for the internal use of the proto package .
xxx oneoffuncs is for the internal use of the proto package .
send persists state to stable storage and then sends to its mailbox .
sendheartbeat sends a heartbeat rpc to the given peer .
bcastappend sends rpc .
bcastheartbeat sends rpc .
maybecommit attempts to advance the commit index .
tickelection is run by followers and candidates after r .
tickheartbeat is run by leaders to send a msgbeat after r .
stepcandidate is shared by statecandidate and stateprecandidate ; the difference is whether they respond to msgvoteresp or msgprevoteresp .
restore recovers the state machine from a snapshot .
promotable indicates whether state machine can be promoted to leader .
checkquorumactive returns true if the quorum is active from the view of the local raft state machine .
increaseuncommittedsize computes the size of the proposed entries and determines whether they would push leader over its maxuncommittedsize limit .
reduceuncommittedsize accounts for the newly committed entries by decreasing the uncommitted entry size limit .
newperiodic creates a new instance of periodic compactor that purges the log older than h duration .
if given compaction period x is < 1 - hour .
pause pauses periodic compactor .
resume resumes periodic compactor .
lock locks the mutex with a cancelable context .
newlocker creates a sync .
newfifoscheduler returns a scheduler that schedules jobs in fifo order sequentiall .
schedule schedules a job that will be ran in fifo order sequentially .
stop stops the scheduler and cancels all pending jobs .
newserver returns a new agent server .
startserve starts serving agent server .
stop stops serving grpc server .
transport communicates with etcd tester .
registerinterrupthandler registers a new interrupthandler .
handleinterrupts calls the handler functions on receiving a sigint or sigterm .
txn returns the comparison ( if ) operations .
opget returns " get " operation based on given key and operation options .
opdelete returns " delete " operation based on given key and operation options .
opput returns " put " operation based on given key - value and operation options .
optxn returns " txn " operation based on given transaction conditions .
withsort specifies the ordering in get request .
withprefix enables get .
withrange specifies the range of get .
withfromkey specifies the range of get .
withtop gets the first key over the get s prefix given a sort orde .
exist returns true if there are any files in a given directory .
searchindex returns the last array index of names whose raft index section is equal to or smaller than the given index .
names should have been sorted based on sequence number .
newlistener creates a new listner .
cafiles returns a list of ca file paths .
serverconfig generates a tls .
clientconfig generates a tls .
accept waits for and returns the next incoming tls connection .
newlistener creates a listener which accepts connections from an inner listener and wraps each connection with server .
applyv2request interprets r as a call to v2store .
newrolecommand returns the cobra command for " role " .
roleaddcommandfunc executes the " role add " command .
rolegetcommandfunc executes the " role get " command .
rolegrantpermissioncommandfunc executes the " role grant - permission " command .
rolerevokepermissioncommandfunc executes the " role revoke - permission " command .
newcluster returns an unlaunched cluster of the given size which has been set to use static bootstrap .
newclusterbyconfig returns an unlaunched cluster defined by a cluster configuratio .
waitleader waits until given members agree on the same leader .
waitnoleader waits until given members lose leader .
ismembersequal checks whether two members equal except id field .
listengrpc starts a grpc server over a unix domain socket on the membe .
newclientv3 creates a new grpc client connection to the membe .
clone returns a member with the same server configuration .
close stops the member s etcdserver and closes its connection .
stop stops the member .
checkleadertransition waits for leader transition .
restart starts the member using the preserved data dir .
terminate stops the member and removes the data dir .
metric gets the metric value for a membe .
injectpartition drops connections from m to others .
recoverpartition recovers connections from m to others .
newclusterv3 returns a launched cluster with a grpc client connection for each cluster member .
parsewithdefaults will load options from the specified map or set defaults where appropriat .
parse will load options from the specified ma .
key will parse and return the appropriately typed key for the selected signature metho .
fill populates pb .
add puts a watcher into receiving a broadcast if its revision at least meets the broadcast revision .
watch creates a new watcher in the stream and returns its watchid .
newfileencoder creates a new encoder with current file offset for the page writer .
set parses a command line set of strings .
newstringsvalue implements string slice as " flag .
stringsfromflag returns a string slice from the flag .
cluster only keeps the major .
newpagewriter creates a new pagewriter .
newwatchhub creates a watcherhub .
watch function returns a watcher .
notify function accepts an event and notify to the watchers .
clone function clones the watcherhub and return the cloned one .
ishidden checks to see if key path is considered hidden to watch path i .
newtimeoutlistener returns a listener that listens on the given address .
just archive the first fil .
start but do not wait for it to complet .
sigquit to exit with stackstrac .
stop proxy .
limitlistener returns a listener that accepts at most n simultaneous connections from the provided listener .
allowmethod verifies that the given method is one of the allowed methods .
newwatchserver returns a new watch server .
getprogressreportinterval returns the current progress report interval ( for testing ) .
setprogressreportinterval updates the current progress report interval ( for testing ) .
filtersfromrequest returns " mvcc .
newpipelinehandler returns a handler for handling raft messages from pipeline for raftprefix .
keyexists returns a comparison operation that evaluates to true iff the given key exists .
keymissing returns a comparison operation that evaluates to true iff the given key does not exist .
validatesecureendpoints scans the given endpoints against tls info .
putnewkv attempts to create the given key .
newsequentialkv allocates a new sequential key < prefix > / nnnnn with a given prefix and value .
newephemeralkv creates a new key / value pair associated with a session leas .
newuniqueephemeralkey creates a new unique valueless key associated with a session leas .
newuniqueephemeralkv creates a new unique key / value pair associated with a session leas .
newupdatedircommand returns the cli command for " updatedir " .
updatedircommandfunc executes the " updatedir " command .
newwatchcommand returns the cobra command for " watcher runner " .
newv3 returns a new snapshot manager for v3 .
newauthstore creates a new authstore .
newtokenprovider creates a new token provider .
cutpeer drops messages to the specified peer .
mendpeer recovers the message dropping behavior of the given peer .
the caller of this function must have the peers mutex .
activepeers returns a channel that closes when an initial peer connection has been established .
taken from go s resolvetcp code but uses configurable ct .
resolvetcpaddrs is a convenience wrapper for net .
urlsequal checks equality of url .
urlstringsequal returns " true " if given urls are valid and resolved to same ip addresses .
newleasecommand returns the cobra command for " lease " .
newleasegrantcommand returns the cobra command for " lease grant " .
leasegrantcommandfunc executes the " lease grant " command .
newleaserevokecommand returns the cobra command for " lease revoke " .
leaserevokecommandfunc executes the " lease grant " command .
newleasetimetolivecommand returns the cobra command for " lease timetolive " .
leasetimetolivecommandfunc executes the " lease timetolive " command .
newleaselistcommand returns the cobra command for " lease list " .
leaselistcommandfunc executes the " lease list " command .
newleasekeepalivecommand returns the cobra command for " lease keep - alive " .
leasekeepalivecommandfunc executes the " lease keep - alive " command .
newalarmcommand returns the cobra command for " alarm " .
alarmdisarmcommandfunc executes the " alarm disarm " command .
alarmlistcommandfunc executes the " alarm list " command .
flags returns etcd flags in string slice .
newclusterproxy takes optional prefix to fetch grpc - proxy member endpoints .
memberlist wraps member list api with following rules - if advaddr is not empty and prefix is not empty .
newwatcherbatch maps watchers to their matched events .
add puts a watcher in the group .
contains is whether the given key has a watcher in the group .
delete removes a watcher from the group .
choose selects watchers from the watcher group to updat .
watchersetbykey gets the set of watchers that receive events on the given key .
compare on an interval gives == if the interval overlaps .
successor is the next in - order node in the tre .
updatemax updates the maximum values for a node and its ancestor .
visit will call a node visitor on each node that overlaps the given interva .
delete removes the node with the given interval from the tree .
insert adds a node with the given interval into the tree .
rotateleft moves x so it is left of its right chil .
replaceparent replaces x s parent with .
maxheight is the expected maximum tree height given the number of node .
visit calls a visitor function on every tree node intersecting the given interval .
find the exact node for a given interva .
find gets the intervalvalue for the node matching the given interva .
intersects returns true if there is some tree node intersecting the given interval .
contains returns true if the interval tree s keys cover the entire given interval .
stab returns a slice with all elements in the tree intersecting the interval .
union merges a given interval tree into the receiver .
newexactreadcloser returns a readcloser that returns errors if the underlying reader does not read back exactly the requested number of bytes .
newelection returns a new election on a given key prefix .
resumeelection initializes an election with a known leader .
campaign puts a value as eligible for the election on the prefix key .
proclaim lets the leader announce a new value without another election .
resign lets a leader start a new election .
leader returns the leader value for the current election .
observe returns a channel that reliably observes ordered leader proposals as getresponse values on every current elected leader key .
check whether request satisfies the quota .
newexecwatchcommand returns the cli command for " exec - watch " .
newlistener returns a listener for raft message transfer between peers .
comparemajorminorversion returns an integer comparing two versions based on their major and minor version .
serverversion returns the server version from the given header .
checkversioncompatibility checks whether the given version is compatible with the local version .
setpeerurlsheader reports local urls for peer discover .
newkeysapiwithprefix acts like newkeysapi .
ttlduration returns the node s ttl as a time .
v2keysurl forms a url representing the location of a key .
setflagsfromenv parses all registered flags in the given flagset .
setpflagsfromenv is similar to setflagsfromenv .
flagtoenv converts flag string to upper - case environment variable key string .
excerpt replaces middle part with ellipsis and returns a double - quoted string safely escaped with go syntax .
the 9 pass functions below takes the raftpb .
the 4 print functions below print the entry format based on there types printinternalraftrequest is used to print entry information for irrrange .
evaluateentrytypeflag evaluates entry - type flag and choose proper filter / filters to filter entrie .
newlog returns log using the given storage and default options .
newlogwithsize returns a log using the given storage and max message size .
maybeappend returns ( 0 .
findconflict finds the index of the conflict .
nextents returns all the available entries for execution .
hasnextents returns if there is any available entries for execution .
allentries returns all entries in the log .
isuptodate determines if the given ( lastindex .
slice returns a slice of log entries from lo through hi - 1 .
newsession gets the leased session for a client .
close orphans the session and revokes the session lease .
withttl configures the session s ttl in seconds .
withlease specifies the existing leaseid to be used for the session .
withcontext assigns a context to the session instead of defaulting to using the client context .
addrequest adds a read only reuqest into readonly struct .
recvack notifies the readonly struct that the raft state machine received an acknowledgment of the heartbeat that attached with the read only request context .
advance advances the read only request queue kept by the readonly struct .
lastpendingrequestctx returns the context of the last pending read only request in readonly struct .
start performs any initialization of the server necessary for it to begin serving requests .
process takes a raft message and applies it to the server s raft state machine .
reportsnapshot reports snapshot sent status to the raft state machine .
transferleadership transfers the leader to the chosen transferee .
stop stops the server gracefully .
configure sends a configuration change through consensus and then waits for it to be applied to the server .
sync proposes a sync request and is non - blocking .
apply takes entries received from raft ( after it has been committed ) and applies them to the current state of the etcdserver .
cutpeer drops messages to the specified peer .
monitorversions checks the member s version every monitorversioninterval .
goattach creates a goroutine on a given function and tracks it using the etcdserver waitgroup .
newroundrobinbalanced returns a new roundrobin balanced picker .
pick is called for every client request .
newtlslistener handshakes tls connections and performs optional crl checking .
acceptloop launches each tls handshake in a separate goroutine to prevent a hanging tls connection from blocking other connections .
setendpoints updates the endpoints for resolvergroup .
target constructs a endpoint target using the endpoint id of the resolvergroup .
target constructs a endpoint resolver target .
build creates or reuses an etcd resolver for the etcd cluster name identified by the authority part of the target .
todo use balancer .
parsetarget parses a endpoint < id > / < endpoint > string and returns the parsed id and endpoint .
parsehostport splits a " < host > < port > " string into the host and port parts .
handle interprets r and performs an operation on s .
newelectioncommand returns the cobra command for " election runner " .
nodetomember builds member from a key value node .
newtmpbackend creates a backend implementation for testing .
newrevision creates a new instance of revisonal compactor that purges the log older than retention revisions from the current revision .
pause pauses revision - based compactor .
resume resumes revision - based compactor .
voteresponsetype maps vote and prevote message types to their corresponding responses .
describemessage returns a concise human - readable description of a message for debugging .
describeentry returns a concise human - readable description of an entry for debugging .
describeentries calls describeentry for each entry .
watchcommandfunc executes the " watch " command .
setlogger sets client - side logger .
getlogger returns the current logutil .
new creates a clientv3 client that wraps an in - process etcdserver .
maybefirstindex returns the index of the first possible entry in entries if it has a snapshot .
maybelastindex returns the last index if it has at least one unstable entry or snapshot .
maybeterm returns the term of the entry at index i .
shrinkentriesarray discards the underlying array used by the entries slice if most of it isn t being used .
handlemetrics performs a get request against etcd endpoint and returns / metrics .
savesnap saves the snapshot to disk and release the locked wal files since they will not be used .
new creates a new etcdv3 client from a given configuration .
newctxclient creates a client with a context but no underlying grpc connection .
newfromurl creates a new etcdv3 client from a url .
close shuts down the client s etcd connections .
endpoints lists the registered endpoints for the client .
setendpoints updates client s endpoints .
sync synchronizes client s endpoints with the known endpoints from the etcd membership .
dialsetupopts gives the dial opts prior to any authentication .
dial connects to a single endpoint using the client s config .
dialwithbalancer dials the client s current load balanced resolver group .
withrequireleader requires client requests to only succeed when the cluster has a leader .
roundrobinquorumbackoff retries against quorum between each backoff .
ishalterr returns true if the given error and context indicate no forward progress can be made .
newlease wraps a lease interface to filter for only keys with a prefix and remove that prefix when fetching attached keys through timetolive .
iscreate returns true if the event tells that the key is newly created .
err is the error value if this watchresponse holds an error .
isprogressnotify returns true if the watchresponse is progress notification .
requestprogress requests a progress notify response be sent in all watch channels .
nextresume chooses the next resuming to register with the grpc stream .
dispatchevent sends a watchresponse to the appropriate watcher strea .
broadcastresponse send a watch response to all watch substreams .
unicastresponse sends a watch response to a specific watch substream .
servewatchclient forwards messages from the grpc stream to run ( ) .
joinsubstreams waits for all substream goroutines to complete .
openwatchclient retries opening a watch client until success or halt .
topb converts an internal watch request structure to its protobuf watchrequest structure .
topb converts an internal progress request structure to its protobuf watchrequest structure .
contains returns whether the set contains the given valu .
containsall returns whether the set contains all given value .
equals returns whether the contents of two sets are identica .
values returns the values of the set in an unspecified order .
copy creates a new set containing the values of the firs .
sub removes all elements in other from the se .
v2membersurl add the necessary path to the provided endpoint to route requests to the default v2 members api .
newmigratecommand returns the cobra command for " migrate " .
newraftnode initiates a raft instance and returns a committed log entry channel and error channel .
publishentries writes committed log entries to commit channel and returns whether all entries could be published .
openwal returns a wal ready for reading .
replaywal replays wal entries into the raft instance .
newwatchcommand returns the cobra command for " watch " .
watchcommandfunc executes the " watch " command .
initialstate implements the storage interface .
sethardstate saves the current hardstate .
entries implements the storage interface .
term implements the storage interface .
lastindex implements the storage interface .
firstindex implements the storage interface .
snapshot implements the storage interface .
applysnapshot overwrites the contents of this storage object with those of the given snapshot .
createsnapshot makes a snapshot which can be retrieved with snapshot ( ) and can be used to reconstruct the state at that point .
compact discards all log entries prior to compactindex .
append the new entries to storage .
unreachable notices the picker that the given url is unreachable .
newendpointcommand returns the cobra command for " endpoint " .
newelectcommand returns the cobra command for " elect " .
newdefragcommand returns the cobra command for " defrag " .
registerbuilder creates and registers a builder .
build is called initially when creating " ccbalancerwrapper " .
recordtransition records state change happening in every subconn and based on that it evaluates what aggregated state should be .
doserialize handles the auth logic .
send filters out repeated events by discarding revisions older than the last one sent over the watch channel .
post puts a watch response on the watcher s proxy stream channe .
originallowed determines whether the server will allow a given cors origin .
ishostwhitelisted returns true if the host is whitelisted .
set verifies the argument to be a valid member of the allowed values before setting the underlying flag value .
valids returns the list of valid strings .
newselectivestringvalue creates a new string flag for which any one of the given strings is a valid value .
set verifies the argument to be a valid member of the allowed values before setting the underlying flag value .
newselectivestringsvalue creates a new string slice flag for which any one of the given strings is a valid value .
newkv wraps a kv instance so that all requests are prefixed with a given string .
newtimeouttransport returns a transport created using the given tls info .
string implements " flag .
newurlsvalue implements " url .
urlsfromflag returns a slices from url got from the flag .
getlogger returns the logger .
newstore returns a new store .
appendmarktombstone appends tombstone mark to normal revision bytes .
isdirwriteable checks if dir is writable by writing and removing a file to dir .
touchdirall is similar to os .
createdirall is similar to touchdirall but returns error if the deepest directory was not empty .
zerotoend zeros a file starting from seek cur to its seek end .
open returns a fresh file for writing .
newraftlogger converts " * zap .
newraftloggerfromzapcore creates " raft .
newconfig creates a new clientv3 .
updatecapability updates the enabledmap when the cluster version increases .
newlockcommand returns the cobra command for " lock " .
advanceticks advances ticks of raft node .
getids returns an ordered set of ids included in the given snapshot and the entries .
createconfigchangeents creates a series of raft entries ( i .
newauthcommand returns the cobra command for " auth " .
authenablecommandfunc executes the " auth enable " command .
authdisablecommandfunc executes the " auth disable " command .
issaferetryimmutablerpc returns " true " when an immutable request is safe for retry .
issaferetrymutablerpc returns " true " when a mutable request is safe for retry .
retrykvclient implements a kvclient .
retryleaseclient implements a leaseclient .
retryclusterclient implements a clusterclient .
retrymaintenanceclient implements a maintenance .
retryauthclient implements a authclient .
newsetdircommand returns the cli command for " setdir " .
enter waits for " count " processes to enter the barrier then return .
leave waits for " count " processes to leave the barrier then return .
handlebasic adds handlers to a mux for serving json etcd client requests that do not access the v2 store .
todo deprecate / config / local / log in v3 .
memberbyname returns a member with the given name if exists .
peerurls returns a list of all peer addresses .
addmember adds a new member into the cluster .
removemember removes a member from the store .
validateclusterandassignids validates the local cluster by matching the peerurls with the existing cluster .
rangesince returns all revisions from key ( including ) to end ( excluding ) at or after the given rev .
keep finds all revisions to be kept for a compaction at the given rev .
closerequireleader scans keepalives for ctxs that have require leader and closes the associated channels .
resetrecv opens a new lease stream and starts sending keep alive requests .
recvkeepalive updates a lease based on its leasekeepaliverespons .
deadlineloop reaps any keep alive channels that have not received a response within the lease tt .
sendkeepaliveloop sends keep alive requests for the lifetime of the given stream .
newkv wraps a kv instance so that all requests are wired through a leasing protocol .
rescind releases a lease from this client .
leasevalue compares a key s leaseid to a value of your choosing .
valuebytes returns the byte slice holding the comparison value .
withrange sets the comparison to scan the range [ key .
withprefix sets the comparison to scan all keys prefixed by the key .
mustint64 panics if val isn t an int or int64 .
mustint64orleaseid panics if val isn t a leaseid .
next gets the next set of updates from the etcd resolver .
use stderr as fallbac .
newkv creates a key - value pai .
newdir creates a director .
ishidden function checks if the node is a hidden node .
read function gets the value of the node .
write function set the value of the node to the given value .
list function return a slice of nodes under the receiver node .
getchild function returns the child node under the directory node .
add function adds a node to the receiver node .
remove function remove the node .
compare function compares node index and value with provided ones .
clone function clone the node recursively and return the new node .
recoverandclean function help to do recovery .
isconnectedtoquorumsince checks whether the local member is connected to the quorum of the cluster since the given time .
isconnectedsince checks whether the local member is connected to the remote member since the given time .
numconnectedsince counts how many members are connected to the local member since the given time .
longestconnected chooses the member with longest active - since - time .
istornentry determines whether the last entry of the wal was partially written and corrupted because of a torn write .
startmockserversonnetwork creates mock servers on either tcp or unix sockets .
startat restarts mock server at given index .
stopat stops mock server at given index .
stop stops the mock server .
newcheckcommand returns the cobra command for " check " .
newcheckperfcommand returns the cobra command for " check perf " .
newcheckdatascalecommand returns the cobra command for " check datascale " .
newgetcommand returns the cobra command for " get " .
getcommandfunc executes the " get " command .
newgetcommand returns the cli command for " get " .
getcommandfunc executes the " get " command .
newmember creates a member without an id and generates one based on the cluster name .
pickpeerurl chooses a random address from a given member s peerurls .
handlemetricshealth registers metrics and health handlers .
newhealthhandler handles / health requests .
todo server nospace .
newremovecommand returns the cli command for " rm " .
rmcommandfunc executes the " rm " command .
reporteventreceived reports that an event is received .
startetcd runs startetcd in addition to hooks needed for standalone etcd .
identifydatadirordie returns the type of the data dir .
openlast opens the last wal file for read and write .
gotleader will force update the leadership status to having a leader .
lostnotify returns a channel that is closed if there has been a leader loss not yet followed by a leader reacquire .
newgrpcproxycommand returns the cobra command for " grpc - proxy " .
newmembercommand returns the cobra command for " member " .
newmemberaddcommand returns the cobra command for " member add " .
newmemberremovecommand returns the cobra command for " member remove " .
newmemberupdatecommand returns the cobra command for " member update " .
newmemberlistcommand returns the cobra command for " member list " .
memberremovecommandfunc executes the " member remove " command .
memberupdatecommandfunc executes the " member update " command .
memberlistcommandfunc executes the " member list " command .
open opens the wal at the given snap .
openforread only opens the wal files for read .
verify reads through the given wal and verifies that it is not corrupted .
close closes the current wal file and directory .
notify function notifies the watcher .
remove removes the watcher from watcherhub the actual remove function is guaranteed to only be executed onc .
preallocate tries to allocate the space for given file .
mkpathdepth makes a path to a key that encodes its directory depth for fast directory listing .
mkv2node creates a v2 nodeextern from a v3 keyvalu .
prevkeyfromputs gets the prev key that is being put ; ignores the put action response .
newweightedreport returns a report that includes both weighted and unweighted statistics .
handlehealth registers health handler on / health .
newurlsmapfromstringmap takes a map of strings and returns a urlsmap .
string turns urlsmap into discovery - formatted name - to - urls sorted by name .
urls returns a list of all urls .
parse parses the given string and returns a map listing the values specified for each key .
writekeyevent trims the prefix of key path in a single event under storekeysprefix .
writekeyerror logs and writes the given error to the responsewriter .
getuint64 extracts a uint64 by the given key from a form .
getbool extracts a bool by the given key from a form .
trimprefix removes a given prefix and any slash following the prefix e .
waitdeletes efficiently waits until all keys matching the prefix and no greater than the create revision .
addoutputpaths adds output paths to the existing output paths .
newconfig creates a new config populated with default values .
peerurlsmapandtoken sets up an initial peer urlsmap and cluster token for bootstrap or discovery .
updatedefaultclusterfromname updates cluster advertise urls with .
checkbindurls returns an error if any url uses a domain name .
getclient looks up the client endpoints for a service and domain .
getsrvservice generates a srv service including an optional suffix .
readdir returns the filenames in the given directory in sorted order .
createmergedsnapshotmessage creates a snapshot message that contains raft status ( term .
get the process resident memory bytes from < server2379 > / metric .
compact keyspace history to a provided revisio .
defrag a given endpoin .
newusercommand returns the cobra command for " user " .
useraddcommandfunc executes the " user add " command .
usergetcommandfunc executes the " user get " command .
userchangepasswordcommandfunc executes the " user passwd " command .
addevent function adds event into the eventhistor .
scan enumerates events from the index history and stops at the first point where the key matches .
clone will be protected by a stop - world lock do not need to obtain internal loc .
opensnapshotbackend renames a snapshot db to the current etcd db and opens it .
openbackend returns a backend using the current etcd db .
recoverbackendsnapshot recovers the db from a snapshot in case etcd crashes before updating the backend db after persisting raft snapshot to disk .
newupdatecommand returns the cli command for " update " .
updatecommandfunc executes the " update " command .
frontandback gets the front and back elements in the queue we must grab front and back together with the protection of the loc .
insert function insert a requeststats into the queue and update the record .
rate function returns the package rate and byte rat .
clear function clear up the statsqueu .
uniquestrings returns a slice of randomly generated unique strings .
randomstrings returns a slice of randomly generated strings .
iskeynotfound returns true if the error code is errorcodekeynotfound .
isrolenotfound returns true if the error means role not found of v2 api .
isusernotfound returns true if the error means user not found of v2 api .
joincluster will connect to the discovery service at the given url .
getcluster will connect to the discovery service at the given url and retrieve a string describing the cluste .
newproxyfunc builds a proxy function from the given string .
streamclientinterceptor returns a new retrying stream client interceptor for server side streaming calls .
issaferetry returns " true " .
withretrypolicy sets the retry policy of this call .
withauthretry sets enables authentication retries .
withmax sets the maximum number of retries on this call .
withbackoff sets the backofffunc used to control time between retries .
backofflinearwithjitter waits a set period of time .
recvappendreq updates the serverstats in response to an appendrequest from the given leader being receive .
sendappendreq updates the serverstats in response to an appendrequest being sent by this serve .
newpackagelogger wraps " * capnslog .
merge merges data from bb into bbsrc .
deleterevkey deletes a key by revision .
ismemberbootstrapped tries to check if the given member has been bootstrapped in the given cluster .
getclusterfromremotepeers takes a set of urls representing etcd peers .
getremotepeerurls returns peer urls of remote members in the cluster .
getversions returns the versions of the members in the given cluster .
decideclusterversion decides the cluster version based on the versions map .
iscompatiblewithcluster return true if the local member has a compatible version with the current running cluster .
newtimeoutdetector creates the timeoutdetector .
reset resets the newtimeoutdetector .
observe observes an event for given id .
put puts a revision to the keyindex .
tombstone puts a revision .
get gets the modified .
since returns revisions since the given rev .
compact compacts a keyindex by removing the versions with smaller or equal revision than the given atrev except the largest one ( if the largest one is a tombstone .
keep finds the revision to be kept if compact is called at given atrev .
findgeneration finds out the generation of the keyindex that the given rev belongs to .
walk walks through the revisions in the generation in descending order .
createorupdateuser should be only used for creating the new user or when you are not sure if it is a create or update .
merge for a role works the same as user above -- atomic role application to each of the substructures .
grant adds a set of permissions to the permission object on which it is called .
revoke removes a set of permissions to the permission object on which it is called .
grant adds a set of permissions to the permission object on which it is called .
revoke removes a set of permissions to the permission object on which it is called .
cancelwatcher removes references of the watcher from the watchablestor .
syncwatchersloop syncs the watcher in the unsynced map every 100ms .
syncvictimsloop tries to write precomputed watcher responses to watchers that had a blocked watcher channe .
movevictims tries to update watches with already pending event dat .
kvstoevents gets all events for the watchers from all key - value pair .
notify notifies the fact that given event at the given rev just happened to watchers that watch on the key of the event .
check if the provided function is being called in the op options .
unsafeput must be called holding the lock on the tx .
unsafeseqput must be called holding the lock on the tx .
unsaferange must be called holding the lock on the tx .
unsafedelete must be called holding the lock on the tx .
unsafeforeach must be called holding the lock on the tx .
commit commits a previous tx and begins a new writable one .
commitandstop commits the previous tx and does not create a new one .
renew renews an existing lease .
attach attaches items to the lease with given id .
revokeexpiredleases finds all leases past their expiry and sends them to epxired channel for to be revoked .
checkpointscheduledleases finds all scheduled lease checkpoints that are due and submits them to the checkpointer to persist them to the consensus log .
expireexists returns true if expiry items exist .
findexpiredleases loops leases in the leasemap until reaching expired limit and returns the expired leases that needed to be revoked .
remainingttl returns the last checkpointed remaining ttl of the lease .
refresh refreshes the expiry of the lease .
forever sets the expiry of lease to be forever .
keys returns all the keys attached to the lease .
remaining returns the remaining time of the lease .
newcompactioncommand returns the cobra command for " compaction " .
compactioncommandfunc executes the " compaction " command .
casesensitivejsoniterator returns a jsoniterator api that s configured to be case - sensitive when unmarshalling .
newputcommand returns the cobra command for " put " .
putcommandfunc executes the " put " command .
newsetcommand returns the cli command for " set " .
setcommandfunc executes the " set " command .
waitonlowest will wait on the last key with a revision < rwm .
getdefaultinterfaces fetches the device name of default routable interface .
newsnapshotcommand returns the cobra command for " snapshot " .
newmoveleadercommand returns the cobra command for " move - leader " .
transferleadershipcommandfunc executes the " compaction " command .
opendir opens a directory in windows with write access for syncing .
newremovedircommand returns the cli command for " rmdir " .
rmdircommandfunc executes the " rmdir " command .
newdelcommand returns the cobra command for " del " .
delcommandfunc executes the " del " command .
todo support separate wal director .
newexpect creates a new process for expect testing .
newexpectwithenv creates a new process with user defined env variables for expect testing .
expectfunc returns the first line satisfying the function f .
expect returns the first line containing the given string .
linecount returns the number of recorded lines since the beginning of the process .
signal sends a signal to the expect proces .
keyfunc returns the key of a request .
add adds the response of a request to the cache if its revision is larger than the compacted revision of the cache .
get looks up the caching response for a given request .
invalidate invalidates the cache entries that intersecting with the given range from key to endkey .
compact invalidate all caching response before the given rev .
string implements " flag .
newuniqueurlswithexceptions implements " url .
uniqueurlsfromflag returns a slice from urls got from the flag .
uniqueurlsmapfromflag returns a map from url strings got from the flag .
hold creates the barrier key causing processes to block on wait .
release deletes the barrier key to unblock all waiting processes .
wait blocks on the barrier key until it is deleted .
newlockracercommand returns the cobra command for " lock - racer runner " .
electiontimeout returns an election timeout duration .
dialetcdgrpcserver creates a raw grpc connection to an etcd member .
createetcdclientconfig creates a client configuration from member .
createetcdclient creates a client from member .
checkcompact ensures that historical data before given revision has been compacted .
defrag runs defragmentation on this member .
revhash fetches current revision and hash on this member .
rev fetches current revision on this member .
compact compacts member storage with given revision .
isleader returns true if this member is the current cluster leader .
writehealthkey writes a health key to this member .
newwatcher wraps a watcher instance so that all watch requests are prefixed with a given string and all watch responses have the prefix removed .
register registers itself as a grpc - proxy server by writing prefixed - key with session of specified ttl ( in seconds ) .
newrawnode returns a new rawnode given configuration and a list of raft peers .
campaign causes this rawnode to transition to candidate state .
propose proposes data be appended to the raft log .
proposeconfchange proposes a config change .
applyconfchange applies a config change to the local node .
step advances the state machine using the given message .
ready returns the current point - in - time state of this rawnode .
hasready called when rawnode user need to check if any ready pending .
withprogress is a helper to introspect the progress for this node and its peers .
reportunreachable reports the given node is not reachable for the last send .
reportsnapshot reports the status of the sent snapshot .
transferleader tries to transfer leadership to the given transferee .
readindex requests a read state .
printcurl prints the curl equivalent request to stderr .
fsync on hfs / osx flushes the data on to the physical drive but the drive may not write it to the persistent media for quite sometime and it may be written in out - of - order sequence .
appliedcursor extracts from the ready the highest index the client has applied ( once the ready is confirmed via advance ) .
startnode returns a new node given configuration and a list of raft peers .
restartnode is similar to startnode but does not take a list of peers .
tick increments the internal logical clock for this node .
step advances the state machine using msgs .
mustsync returns true if the hard state and count of raft entries indicate that a synchronous write to persistent storage is required .
newgrpc17health returns a new health balancer with grpc v1 .
needupdate returns true if all connections are down or addresses do not include current pinned address .
dflsignal sets the given signal to sig df .
new creates a store where the given namespaces will be created as initial directories .
index retrieves the current index of the store .
get returns a get event .
create creates the node at nodepath .
set creates or replace the node at nodepath .
returns user - readable cause of failed compariso .
delete deletes the node at the given path .
walk walks all the nodepath and apply the walkfunc on each director .
internalget gets the node of the given nodepath .
deleteexpiredkeys will delete all expired key .
checkdir will check whether the component is a directory under parent node .
save saves the static state of the store system .
recovery recovers the store system from a static state it needs to recover the parent field of the nodes .
next generates a id that is unique .
newmakemirrorcommand returns the cobra command for " makemirror " .
getlogger returns the logger .
newzapcoreloggerbuilder generates a zap core logger builder .
newsyncer creates a syncer .
dropport drops all tcp packets that are received from the given port and sent to the given port .
setlatency adds latency in millisecond scale with random variations .
removelatency resets latency configurations .
newtxncommand returns the cobra command for " txn " .
txncommandfunc executes the " txn " command .
new returns a new compactor based on given " mode " .
printresponsekey only supports to print key correctly .
addcorsheader adds the correct cors headers given an origi .
wrapcors wraps existing handler with cors .
fallback computes the ops to fetch all possible conflicting leasing keys for a list of ops .
idfromstring attempts to create an id from a base - 16 string .
acquiredirectorylock gets a lock on the directory ( using flock ) .
release deletes the pid file and releases our lock on the directory .
encodedsize is the size of the valuestruct when encode .
decode uses the length of the slice to infer the length of the value field .
encode expects a slice of length at least v .
encodeto should be kept in sync with the encode function above .
newmergeiterator returns a new mergeiterator from a list of iterators .
initheap checks all iterators and initializes our heap and array of keys .
valid returns whether the mergeiterator is at a valid element .
key returns the key associated with the current iterato .
value returns the value associated with the iterator .
next returns the next element .
rewind seeks to first element ( or last element for reverse iterator ) .
seek brings us to element with key >= given key .
close implements y .
encode encodes pointer into byte buffer .
decodes h from buf .
encodes e to buf .
newwritebatch creates a new writebatch .
setentry is the equivalent of txn .
set is equivalent of txn .
setwithttl is equivalent of txn .
delete is equivalent of txn .
caller to commit must hold a write lock .
flush must be called at the end to ensure that any pending writes get committed to badger .
error returns any errors encountered so far .
getmemtables returns the current memtables and get references .
get returns the value in memtable or disk for given key .
writerequests is called serially by only one goroutine .
batchset applies a list of badger .
batchsetasync is the asynchronous version of batchset .
ensureroomforwrite is always called serially .
writelevel0table flushes memtable .
flushmemtable must keep running until we send it an empty flushtask .
this function does a filewalk .
runvalueloggc triggers a value log garbage collection .
size returns the size of lsm and value log files in bytes .
next would return the next integer in the sequence .
release the leased sequence to avoid wasted integers .
getsequence would initiate a new sequence object .
keysplits can be used to get rough key ranges to divide up iteration over the db .
dropall would drop all the data stored in badger .
dropprefix would drop all the keys with the provided prefix .
mmap uses the mmap system call to memory - map a file .
madvise uses the madvise system call to give advise about the use of memory when using a slice that is memory - mapped to a file .
any deleted or invalid versions at or below ts would be discarded during compaction to reclaim disk space in lsm tree and thence value log .
hasconflict must be called while having a lock .
set adds a key - value pair to the database .
setwithmeta adds a key - value pair to the database .
delete deletes a key .
get looks for key and returns corresponding item .
discard discards a created transaction .
commit commits the transaction .
commitwith acts like commit .
newtransaction creates a new transaction .
view executes a function creating and managing a read - only transaction for the user .
update executes a function .
seek brings us to the first block element that is >= input key .
seektolast brings us to the last element .
parsekv would allocate a new byte slice for key and for value .
newiterator returns a new iterator of the tabl .
seekfrom brings us to a key that is >= input key .
seekforprev will reset iterator and seek to <= key .
value follows the y .
seek follows the y .
newconcatiterator creates a new concatenated iterato .
rewind implements y .
valid implements y .
seek brings us to element >= key if reversed is false .
next advances our concat iterator .
close implements y .
openexistingfile opens an existing file .
createsyncedfile creates a new file ( using o excl ) .
copy copies a byte slice and returns the copied slice .
keywithts generates a new key by appending ts to key .
parsets parses the timestamp from the key bytes .
comparekeys checks the key without timestamp and checks the timestamp if keynots is same .
parsekey parses the actual key from the key bytes .
samekey checks for key equality ignoring the version timestamp suffix .
resize reuses the slice s buffer ( or makes a new one ) and returns a slice in that buffer of length sz .
fixedduration returns a string representation of the given duration with the hours .
newcloser constructs a new closer .
newthrottle creates a new throttle with a max number of workers .
do should be called by workers before they start working .
done should be called by workers when they finish working .
finish waits until all workers have finished working .
openmanaged returns a new db .
newtransactionat follows the same logic as db .
commitat commits the transaction .
setdiscardts sets a timestamp at or below which .
openreadonly assumes that we have a write lock on logfile .
acquire lock on mmap / file if you are calling thi .
sortedfids returns the file id s not pending deletion .
sync function syncs content of latest value log file to disk .
gets the logfile and acquires and rlock ( ) for the mmap .
read reads the value log at a given location .
encodeddiscardstats returns [ ] byte representation of lfdiscardstats this will be called while storing stats in badgerd .
populatediscardstats populates vlog .
backup is a wrapper function over stream .
tolist is a default implementation of keytolist .
keyrange is [ start .
orchestrate runs stream .
newstream creates a new stream .
newstreamat creates a new stream at a particular timestamp .
decrref decrements the refcount and possibly deletes the tabl .
close closes the open table .
parsefileid reads the file id out of a filename .
newfilename should be named tablefilepath -- it combines the dir with the id to make a table filepath .
printhistogram builds and displays the key - value size histogram .
newsizehistogram returns a new instance of keyvaluesizehistogram with properly initialized fields .
createhistogrambins creates bins for an histogram .
update the min and max fields if value is less than or greater than the current min / max value .
buildhistogram builds the key - value size histogram .
printhistogram prints the histogram data in a human - readable format .
init initializes a watermark struct .
begin sets the last index to the given value .
beginmany works like begin but accepts multiple indices .
done sets a single index as done .
donemany works like done but accepts multiple indices .
setdoneuntil sets the maximum index that has the property that all indices less than or equal to it are done .
waitformark waits until the given index is marked as done .
encode encodes the header .
decode decodes the header .
newtablebuilder makes a new tablebuilder .
keydiff returns a suffix of newkey that is different from b .
add adds a key - value pair to the block .
todo vvv this was the comment on reachedcapacity .
blockindex generates the block index for the table .
finish finishes the table by appending the index .
errorf logs an error log message to the logger specified in opts or to the global logger if no logger is specified in opts .
infof logs an info message to the logger specified in opts .
warningf logs a warning message to the logger specified in opts .
warningf logs a warning message to the logger specified in opts .
decrref decrements the refcount .
newskiplist makes a new empty skiplist .
returns true if key is strictly > n .
findnear finds the node near to key .
findspliceforlevel returns ( outbefore .
findlast returns the last element .
get gets the value associated with the key .
key returns the key at the current position .
value returns value .
next advances to the next position .
prev advances to the previous position .
seek advances to the first entry with a key >= target .
seekforprev finds an entry with key <= target .
seektofirst seeks position at the first entry in list .
newuniiterator returns a uniiterator .
next implements y .
rewind implements y .
seek implements y .
aschanges returns a sequence of changes that could be used to recreate the manifest in its present state .
addchanges writes a batch of changes .
must be called while appendlock is held .
this is not a " recoverable " error -- opening the kv store fails because the manifest file is just plain broken .
check does some sanity check on one level of data or in - memory index .
func ( s * kv ) debugprintmore ( ) s .
acquiredirectorylock acquires exclusive access to a directory .
release removes the directory lock .
asserttruef is asserttrue with extra info .
wrapf is wrap with extra info .
inittables replaces s .
deletetables remove tables idx0 .
replacetables will replace tables [ leftright ] with newtables .
tryaddlevel0table returns true if ok and no stalling .
gettableforkey acquires a read - lock to access s .
get returns value for a given key or the key after that .
appenditerators appends iterators to an array of iterators .
overlappingtables returns the tables that intersect with key range .
string returns a string representation of ite .
keycopy returns a copy of the key of the item .
value retrieves the value of the item from the value log .
estimatedsize returns the approximate size of the key - value pair .
valuesize returns the exact size of the value .
newiterator returns a new iterator .
newkeyiterator is just like newiterator .
item returns pointer to the current key - value pair .
valid returns false when iteration is done .
validforprefix returns false when iteration is done or when the current key is not prefixed by the specified prefix .
close would close the iterator .
next would advance the iterator by one .
seek would seek to the provided key if present .
getmergeoperator creates a new mergeoperator for a given key and returns a pointer to it .
add records a value in badger which will eventually be merged by a background routine into the values that were recorded by previous invocations to add ( ) .
get returns the latest value for the merge operator .
compareandadd will check whether we can run this compactdef .
newarena returns a new arena .
putnode allocates a node in the arena .
put will * copy * val into arena .
getnode returns a pointer to the node located at offset .
getkey returns byte slice at offset .
getval returns byte slice at offset .
getnodeoffset returns the offset of node in the arena .
these variables are global and have cumulative values for all kv stores .
reverttomanifest checks that all necessary table files exist and removes all table files not referenced by the manifest .
closes the tables .
droptree picks all tables from all levels .
returns true if level zero may be compacted .
returns true if the non - zero level may be compacted .
docompact picks some table on level l and compacts it away to the next level .
get returns the found value if any .
appenditerators appends iterators to an array of iterators .
seektotal retrives the total of all accounts by seeking for each account key .
range is [ lowts .
create replaces the stored snapshot with a new one using the given arg .
list returns the latest snapshot take .
open wraps an io .
write appends the given bytes to the snapshot content .
newfilesnapshotstorewithlogger creates a new filesnapshotstore based on a base directory .
newfilesnapshotstore creates a new filesnapshotstore based on a base directory .
snapshotname generates a name for the snapshot .
list returns available snapshots in the store .
getsnapshots returns all the known snapshots .
readmeta is used to read the meta data for a given named backu .
open takes a snapshot id and returns a readcloser for that snapshot .
reapsnapshots reaps any snapshots beyond the retain count .
write is used to append to the state file .
close is used to indicate a successful end .
cancel is used to indicate an unsuccessful end .
finalize is used to close all of our resources .
writemeta is used to write out the metadata we have .
newnetworktransportwithconfig creates a new network transport with the given config struc .
newnetworktransport creates a new network transport with the given dialer and listener .
newnetworktransportwithlogger creates a new network transport with the given logger .
setupstreamcontext is used to create a new stream context .
getstreamcontext is used retrieve the current stream context .
setheartbeathandler is used to setup a heartbeat handler as a fast - pass .
closestreams closes the current streams .
close is used to stop the network transport .
getexistingconn is used to grab a pooled connection .
getconnfromaddressprovider returns a connection from the server address provider if available .
getconn is used to get a connection from the pool .
returnconn returns a connection back to the pool .
appendentriespipeline returns an interface that can be used to pipeline appendentries requests .
appendentries implements the transport interface .
requestvote implements the transport interface .
genericrpc handles a simple request / response rpc .
installsnapshot implements the transport interface .
encodepeer implements the transport interface .
listen is used to handling incoming connections .
handleconn is used to handle an inbound connection for its lifespan .
decoderesponse is used to decode an rpc response and reports whether the connection can be reused .
sendrpc is used to encode and send the rpc .
newnetpipeline is used to construct a netpipeline from a given transport and connection .
decoderesponses is a long running routine that decodes the responses sent on the connection .
appendentries is used to pipeline a new append entries request .
closed is used to shutdown the pipeline connection .
newobserver creates a new observer that can be registered to make observations on a raft instance .
registerobserver registers a new observer .
deregisterobserver deregisters an observer .
observe sends an observation to every observer .
newinmemstore returns a new in - memory backend .
firstindex implements the logstore interface .
lastindex implements the logstore interface .
getlog implements the logstore interface .
storelog implements the logstore interface .
storelogs implements the logstore interface .
deleterange implements the logstore interface .
set implements the stablestore interface .
get implements the stablestore interface .
setuint64 implements the stablestore interface .
getuint64 implements the stablestore interface .
newlogcache is used to create a new logcache with the given capacity and backend store .
newinmemtransportwithtimeout is used to initialize a new transport and generates a random local address if none is specified .
appendentriespipeline returns an interface that can be used to pipeline appendentries requests .
appendentries implements the transport interface .
requestvote implements the transport interface .
installsnapshot implements the transport interface .
encodepeer implements the transport interface .
connect is used to connect this transport to another transport for a given peer name .
disconnect is used to remove the ability to route to a given peer .
disconnectall is used to remove all routes to peers .
respond is used to respond with a response .
open is a function you can call to access the underlying snapshot and its metadata .
vote is used to respond to a verifyfuture .
notifyall is used to notify all the waiting verify futures if the follower believes we are still the leader .
cleannotify is used to delete notify .
lastcontact returns the time of last contact .
setlastcontact sets the last contact to the current time .
replicate is a long running routine that replicates log entries to a single follower .
heartbeat is used to periodically invoke appendentries on a peer to ensure they dont time out .
pipelinereplicate is used when we have synchronized our state with the follower .
pipelinesend is used to send data over a pipeline .
pipelinedecode is used to decode the responses of pipelined requests .
setupappendentries is used to setup an append entries request .
setpreviouslog is used to setup the prevlogentry and prevlogterm for an appendentriesrequest given the next index to replicate .
setnewlogs is used to setup the logs which should be appended for a request .
appendstats is used to emit stats about an appendentries invocation .
handlestaleterm is used when a follower indicates that we have a stale term .
updatelastappended is used to update follower replication state after a successful appendentries rpc .
appendentries sends the appropriate rpc to the target node .
requestvote sends the appropriate rpc to the target node .
installsnapshot is used to push a snapshot down to a follower .
encodepeer is used to serialize a peer name .
decodepeer is used to deserialize a peer name .
appendentriespipeline returns an interface that can be used to pipeline appendentries requests .
appendentries is used to add another request to the pipeline .
readpeersjson consumes a legacy peers .
readconfigjson reads a new - style peers .
newtcptransport returns a networktransport that is built on top of a tcp streaming transport layer .
newtcptransportwithlogger returns a networktransport that is built on top of a tcp streaming transport layer .
newtcptransportwithconfig returns a networktransport that is built on top of a tcp streaming transport layer .
dial implements the streamlayer interface .
accept implements the net .
addr implements the net .
bootstrapcluster initializes a server s storage with the given cluster configuration .
hasexistingstate returns true if the server has any existing state ( logs .
restoresnapshot attempts to restore the latest snapshots .
bootstrapcluster is equivalent to non - member bootstrapcluster but can be called on an un - bootstrapped raft instance after it has been created .
leader is used to return the current leader of the cluster .
apply is used to apply a command to the fsm in a highly consistent manner .
barrier is used to issue a command that blocks until all preceeding operations have been applied to the fsm .
verifyleader is used to ensure the current node is still the leader .
getconfiguration returns the latest configuration and its associated index currently in use .
addpeer ( deprecated ) is used to add a new peer into the cluster .
removepeer ( deprecated ) is used to remove a peer from the cluster .
addvoter will add the given server to the cluster as a staging server .
removeserver will remove the given server from the cluster .
shutdown is used to stop the raft background routines .
snapshot is used to manually force raft to take a snapshot .
restore is used to manually force raft to consume an external snapshot .
string returns a string representation of this raft node .
lastcontact returns the time of last contact by a leader .
logf will record a formatted message to the contained debug lo .
leader returns the node that is currently the leader .
containsnode returns true if the slice nodes contains n .
leaderplus returns the leader + n additional nodes from the cluster the leader is always the first node in the returned slice .
waittiluptodate blocks until all nodes in the cluster have gotten their commitedindex upto the index from the last successful call to appl .
assertlogentryequal compares the 2 raft log entries and reports any differences to the supplied testing .
clone makes a deep copy of a configuration .
clone makes a deep copy of a configurations object .
hasvote returns true if the server identified by id is a voter in the provided configuration .
checkconfiguration tests a cluster membership configuration for common errors .
encodepeers is used to serialize a configuration into the old peers format .
decodepeers is used to deserialize an old list of peers into a configuration .
encodeconfiguration serializes a configuration using msgpack .
decodeconfiguration deserializes a configuration using msgpack .
start a goroutine and properly handle the race between a routine starting and incrementing .
getlastindex returns the last index in stable storage .
getlastentry returns the last index and term in stable storage .
resolvedirectory returns a full directory path based on the supplied dir path if the supplied dir path is absolute ( i .
checkrpcheader houses logic about whether this instance of raft can process the given rpc message .
setleader is used to modify the current leader of the cluste .
requestconfigchange is a helper for the above functions that make configuration change requests .
run is a long running goroutine that runs the raft fsm .
livebootstrap attempts to seed an initial configuration for the cluster .
configurationchangechifstable returns r .
verifyleader must be called from the main thread for safety .
checkleaderlease is used to check if we can contact a quorum of nodes within the last leader lease interval .
quorumsize is used to return the quorum size .
appendconfigurationentry changes the configuration and adds a new configuration entry to the log .
dispatchlog is called on the leader to push a log to disk .
processlogs is used to apply all the committed entries that haven t been applied up to the given index limit .
processlog is invoked to process the application of a single committed log entry .
processrpc is called to handle an incoming rpc request .
processheartbeat is a special handler used just for heartbeat requests so that they can be fast - pathed if a transport supports it .
processconfigurationlogentry takes a log entry and updates the latest configuration if the entry results in a new configuration .
setlastcontact is used to set the last contact time to no .
persistvote is used to persist our vote for safety .
setcurrentterm is used to set the current term in a durable manner .
setstate is used to update the current state .
newcommitment returns an commitment struct that notifies the provided channel when log entries have been committed .
called when a new cluster membership configuration is created it will be used to determine commitment from now on .
called by leader after commitch is notifie .
match is called once a server completes writing entries to disk either the leader has written the new entry or a follower has replied to an appendentries rpc .
internal helper to calculate new commitindex from matchindexes .
returns an int64 from a crypto random source can be used to seed a source for a math / rand .
randomtimeout returns a value that is between the minval and 2x minval .
generateuuid is used to generate a random uuid .
decode reverses the encode operation on a byte slice input .
encode writes an encoded object to a new bytes buffer .
backoff is used to compute an exponential backoff duration .
newapplysource will create a new source .
reset this source back to its initial state .
runs apply in chunks of n to the cluster .
defaultconfig returns a config with usable defaults .
validateconfig is used to validate a sane configuratio .
runsnapshots is a long running goroutine used to manage taking new snapshots of the fsm .
shouldsnapshot checks if we meet the conditions to take a new snapshot .
compactlogs takes the last inclusive index of a snapshot and trims the logs that are no longer needed .
webpackcheck will compare the current default buffalo webpack .
auto figures out how to render the model based information about the request and the name of the model .
auto figures out how to render the model based information about the request and the name of the model .
validate that options are usuabl .
new generator for adding vcs to an applicatio .
setaddr sets the servers address .
unixsocket returns a new listener on that addres .
get a registered errorhandler for this status code .
panichandler recovers from panics gracefully and calls the error handling code for a 500 error .
validate that options are usuabl .
partialfeeder returns template string for the name from templatebox .
template renders the named files using the specified content type and the github .
template renders the named files using the specified content type and the github .
setaddr sets the servers address .
writeto implements io .
app is where all routes and middleware for buffalo should be defined .
send a message using smtp configuration or returns an error if something goes wrong .
newsmtpsender builds a smtp mail based in passed config .
param returns a param .
set a value onto the context .
value that has previously stored on the context .
bind the interface to the request .
logfield adds the key / value pair onto the logger to be printed out as part of the request logging .
logfields adds the key / value pairs onto the logger to be printed out as part of the request logging .
redirect a request with the given status to the given url .
data contains all the values set through get / set .
file returns an uploaded file by name .
marshaljson implements json marshaling for the contex .
new generator for creating a buffalo api applicatio .
new returns a new instance of app and adds some sane .
list default implementation .
render the provided data to the provider writer using the rendererfunc provide .
func renderer allows for easily building one of renderers using just a rendererfunc and not having to build a whole implementation of the render interface .
func renderer allows for easily building one of renderers using just a rendererfunc and not having to build a whole implementation of the render interface .
validate that options are usuabl .
buildactions is the top level action builder it determines whether to build a new actions / foo .
buildnewactions builds a brand new actions / foo .
appendactions appends * only * actions that dont exist in actions / foo .
save the current session .
getonce gets a value from the current session and then deletes it .
set a value onto the current session .
clear the current sessio .
get a session using a request and response .
new generator to create a grift tas .
string renderer that will run the string through the github .
string renderer that will run the string through the github .
new generator for creating webpack asset file .
new generator to generate refresh template .
execute adds all child commands to the root command sets flags appropriately .
validate that options are usuabl .
validate that options are usuabl .
newmessage creates a new message .
reset resets the message so it can be reused .
setheader sets a value to the given header field .
setheaders sets the message headers .
setaddressheader sets an address to the given header field .
formataddress formats an address and a name as a valid rfc 5322 address .
setdateheader sets a date to the given header field .
formatdate formats a date as a valid rfc 5322 date .
setbody sets the body of the message .
setbodywriter sets the body of the message .
addalternativewriter adds an alternative part to the message .
setpartencoding sets the encoding of the part added to the message .
setheader is a file setting to set the mime header of the message part that contains the file content .
setcopyfunc is a file setting to replace the function that runs when the message is sent .
attachreader attaches a file using an io .
attach attaches the files to the email .
embedreader embeds the images to the email .
embed embeds the images to the email .
validatetemplates returns a genny .
plushvalidator validates the file is a valid plush file if the extension is .
gotemplatevalidator validates the file is a valid go text / template file if the extension is .
validate that options are usuabl .
validate options are usefu .
loadplugins will add listeners for any plugins that support " events " .
writeheader sets the status code for a respons .
write the body of the respons .
flush the respons .
run all compatible checks .
onlyrelevantfiles processes only .
gotemplateengine implements the templateengine interface for using standard go template .
redirect from one url to another url .
group creates a new * app that inherits from it s parent * app .
routehelpers returns a map of buildpathhelper ( ) for each route available in the app .
buildroutename builds a route based on the path passed .
new mailer generator .
newdialer returns a new smtp dialer .
dialandsend opens a connection to the smtp server .
requestloggerfunc is the default implementation of the requestlogger .
set allows to set a list of values into a particular key .
add adds a flash value for a flash key .
persist the flash inside the session .
newflash creates a new flash and loads the session data inside its data .
set a cookie on the response .
setwithexpirationtime sets a cookie that will expire at a specific time .
setwithpath sets a cookie path on the server in which the cookie will be available on .
delete sets a header that tells the browser to remove the cookie with the given name .
newmessage builds a new message .
newfromdata builds a new message with raw template data give .
new builds a new message with the current buffalo .
closenotify return true across the channel when the connection in the browser has been severed .
newsimplewithcontext creates a basic implementation of the worker interface that is backed using just the standard library and goroutines .
register handler with the worke .
perform a job as soon as possibly using a goroutine .
performat performs a job at a particular time using a goroutine .
performin performs a job after waiting for a specified amount using a goroutine .
string returns a json representation of the routeinf .
alias path patterns to the this route .
name allows users to set custom names for the routes .
buildpathhelper builds a routehelperfunc for a particular routeinf .
setaddr sets the servers address .
new generator for adding travis or gitla .
download renders a file attachment automatically setting following headers content - type content - length content - disposition content - type is set using mime .
download renders a file attachment automatically setting following headers content - type content - length content - disposition content - type is set using mime .
javascript renders the named files using the application / javascript content type and the github .
javascript renders the named files using the application / javascript content type and the github .
new returns a new generator for build actions on a buffalo ap .
registercustomdecoder allows to define custom type decoders .
register maps a request content - type ( application / json ) to a binder .
methodoverride is the default implementation for the options .
clear wipes out the current middleware stack for the app / group .
use the specified middleware for the app .
skip a specified piece of middleware the specified handlers .
replace a piece of middleware with another piece of middleware .
routes returns a list of all of the routes defined in this application .
lookup search a specific pathname in the routelist and return the * routeinf .
match takes an import path and replacement map .
validate that options are usuabl .
send calls f ( from .
send sends emails using the given sender .
last checks if the name is the last of the part .
stop the application and attempt to gracefully shutdow .
depensure runs dep ensure - v or go get - u depending on app tooling to make sure that any newly changed imports are added to dep or installed .
plain renders the named files using the text / html content type and the github .
plain renders the named files using the text / plain content type and the github .
string implements fmt .
addbody the message by receiving a renderer and rendering data .
addbodies allows to add multiple bodies to the message .
addattachment adds the attachment to the list of attachments the message has .
addembedded adds the attachment to the list of attachments the message has and uses inline instead of attachement property .
setheader sets the heder field and value for the messag .
new generator for creating a buffalo web applicatio .
new generator for creating basic asset file .
new returns a generator that performs buffalo related rx check .
cleanup all of the generated file .
validate that options are usuabl .
html renders the named files using the text / html content type and the github .
html renders the named files using the text / html content type and the github .
mdtemplateengine runs the input through github flavored markdown before sending it to the plush engine .
filterchanges determines which of the changes are relevant for config updating .
get labels from regexp matche .
getlabelsfromgenericmatches returns label matches with extra labels if those have been configured in the plugin config .
start will begin polling the config file at the path .
subscribe registers the channel for messages on config reload .
config returns the latest config .
set sets the config .
ismember returns true if user is in org .
listissuecomments returns comments .
listpullrequestcomments returns review comments .
listreviews returns reviews .
listissueevents returns issue event .
createcomment adds a comment to a p .
createreview adds a review to a p .
createcommentreaction adds emoji to a comment .
createissuereaction adds an emoji to an issue .
deletecomment deletes a comment .
deletestalecomments deletes comments flagged by isstale .
getpullrequest returns details about the pr .
getpullrequestchanges returns the file modifications in a pr .
getref returns the hash of a ref .
deleteref returns an error indicating if deletion of the given ref was successfu .
getsinglecommit returns a single commit .
createstatus adds a status context to a commit .
liststatuses returns individual status contexts on a commit .
getcombinedstatus returns the overall status for a commit .
getrepolabels gets labels in a repo .
getissuelabels gets labels on an issu .
addlabel adds a labe .
removelabel removes a labe .
findissues returns f .
assignissue adds assignees .
getfile returns the bytes of the file .
listteams return a list of fake teams that correspond to the fake team members returned by listteammember .
listteammembers return a fake team with a single " sig - lead " github teammembe .
iscollaborator returns true if the user is a collaborator of the repo .
listcollaborators lists the collaborators .
clearmilestone removes the mileston .
setmilestone sets the milestone .
listmilestones lists milestones .
listprcommits lists commits for a given pr .
getrepoprojects returns the list of projects under a repo .
getorgprojects returns the list of projects under an or .
getprojectcolumns returns the list of columns for a given project .
createprojectcard creates a project card under a given column .
deleteprojectcard deletes the project card of a specific issue or p .
moveprojectcard moves a specific project card to a specified column in the same projec .
teamhasmember checks if a user belongs to a tea .
addflags parses options for database configuratio .
createdatabaseclient creates and connects a new instance of an influxdb it is created based on the fields set in the configuration .
push a point to the databas .
newprowjobwithannotation initializes a prowjob out of a prowjobspec with annotations .
newprowjob initializes a prowjob out of a prowjobspec .
newpresubmit converts a config .
presubmitspec initializes a prowjobspec for a given presubmit job .
postsubmitspec initializes a prowjobspec for a given postsubmit job .
periodicspec initializes a prowjobspec for a given periodic job .
batchspec initializes a prowjobspec for a given batch job and ref spec .
partitionactive separates the provided prowjobs into pending and triggered and returns them inside channels so that they can be consumed in parallel by different goroutines .
prowjobfields extracts logrus fields from a prowjob useful for logging .
joburl returns the expected url for prowjobstatus .
clustertoctx converts the prow job s cluster to a cluster contex .
addcommand registers new help text for a bot command .
get takes name of the prowjob .
list takes label and field selectors .
watch returns a watch .
create takes the representation of a prowjob and creates it .
update takes the representation of a prowjob and updates it .
updatestatus was generated because the type contains a status member .
delete takes name of the prowjob and deletes it .
deletecollection deletes a collection of objects .
patch applies the patch and returns the patched prowjob .
mergemethod returns the merge method to use for a repo .
mergecommittemplate returns a struct with go template string ( s ) or ni .
query returns the corresponding github search string for the tide query .
forrepo indicates if the tide query applies to the specified repo .
orgexceptionsandrepos determines which orgs and repos a set of queries cover .
querymap creates a querymap from tidequerie .
forrepo returns the tide queries that apply to a repo .
validate returns an error if any contexts are listed more than once in the config .
gettidecontextpolicy parses the prow config to find context merge options .
isoptional checks whether a context can be ignored .
missingrequiredcontexts discard the optional contexts and only look of extra required contexts that are not provided .
newforconfigordie creates a new clientset for the given config and panics if there is an error in the config .
new creates a new clientset for the given restclient .
matches returns whether the provided repo intersects with repos .
helpprovider constructs the pluginhelp for this plugin that takes into account enabled repositories .
handleevent handles a github pr event to determine if the " needs - rebase " label needs to be added or removed .
takeaction adds or removes the " needs - rebase " label based on the current state of the pr ( haslabel and mergeable ) .
newdryrunprowjobclient creates a new client that uses deck as a read - only proxy for prowjob dat .
create does nothing on a dry - run clien .
update does nothing on a dry - run clien .
updatestatus does nothing on a dry - run clien .
delete does nothing on a dry - run clien .
deletecollection does nothing on a dry - run clien .
get does nothing on a dry - run clien .
list reaches out to deck to retrieve the prowjobs on the cluster via prox .
retry on transport failures .
watch does nothing on a dry - run clien .
patch does nothing on a dry - run clien .
hassynced returns true when every prowjob and pipeline informer has synced .
run starts threads workers .
runworker dequeues to reconcile .
tokey returns context / namespace / nam .
fromkey converts tokey back into its part .
enqueuekey schedules an item for reconciliatio .
finalstate returns true if the prowjob has already finishe .
description computes the prowjobstatus description for this condition or falling back to a default if none is provided .
prowjobstatus returns the desired state and description based on the pipeline statu .
pipelinemeta builds the pipeline metadata from prow job definitio .
sourceurl returns the source url from prow jobs repository referenc .
makepipelinegitresource creates a pipeline git resource from prow jo .
makepipeline creates a pipelinerun from a prow job using the pipelinerunspec defined in the prow jo .
helper to update disk metrics ( copied from greenhouse ) .
receiveissue calls plugin .
receiveissueevent calls plugin .
receivecomment calls plugin .
matchingconfigs filters irrelevant requiremtchinglabel configs from the list of all configs .
suggestcodechange returns code suggestions for a given lint .
serveexternalpluginhelp returns a handlerfunc that serves plugin help information that is provided by the specified externalpluginhelpprovider .
protect protects branches specified in the presubmit and branch - protection config sections .
updateorg updates all repos in the org with the specified default .
updaterepo updates all branches in the repo with the specified default .
updatebranch updates the branch with the specified configuratio .
validate ensures that the set of options are self - consistent and vali .
loadconfig loads options from serialized confi .
addflags binds flags to option .
loadclusterconfig loads connection configuration for the cluster we re deploying to .
run uploads artifacts with the specified options forever .
start creates goroutines to monitor the files that contain the secret value .
reloadsecret will begin polling the secret file at the path .
getsecret returns the value of a secret stored in a map .
setsecret sets a value in a map of secrets .
gettokengenerator returns a function that gets the value of a given secret .
new creates a new history struct with the specificed recordlog size limit .
record appends an entry to the recordlog specified by the poolkey .
flush writes the action history to persistent storage if configured to do so .
allrecords generates a map from pool key -> sorted records for the pool .
makecommand returns a download command .
addflags adds " comments " < comments > to the command hel .
checkflags looks for comments matching regexe .
receivecomment adds matching comments to influxd .
newcontroller constructs a new instance of the crier controller .
run is the main path of execution for the controller loop .
runworker executes the loop to process new items added to the queue .
newaggregate converts a slice of errors into an aggregate interface .
error is part of the error interface .
strings flattens the aggregate ( and any sub aggregates ) into a slice of strings .
new creates a localgit and a git .
makefakerepo creates the given repo and makes an initial commit .
addcommit adds the files to a new commit in the repo .
checkoutnewbranch does git checkout - b .
checkout does git checkout .
revparse does git rev - parse .
cleanall cleans all of the resources for all of the regions visible to the provided aws session .
optionsforrepo gets the plugins .
getchangedfiles returns all the changed files for the provided pull request .
loadreviewers returns all reviewers and approvers from all owners files that cover the provided filenames .
newcontroller returns a new gerrit controller clien .
savelastsync saves last sync time in unix to a volum .
sync looks for newly made gerrit changes and creates prowjobs according to spec .
listchangedfiles lists ( in lexicographic order ) the files changed as part of a gerrit patchse .
addflags adds " event " to the command hel .
checkflags is delegated to eventmatche .
receiveissueevent adds issue events to influxd .
upload uploads all of the data in the uploadtargets map to gcs in parallel .
fileuploadwithmetadata returns an uploadfunc which copies all data from the file on disk into gcs object and also sets the provided metadata fields on the object .
datauploadwithmetadata returns an uploadfunc which copies all data from src reader into gcs and also sets the provided metadata fields onto the object .
haslabel checks if label is in the label set " issuelabels " .
imagetoobig checks if image is bigger than github limit .
levelfrompermissions adapts a repo permissions struct to the appropriate permission level used elsewher .
permissionsfromlevel adapts a repo permission level to the appropriate permissions struct used elsewher .
newprowjobs returns a prowjob .
list takes label and field selectors .
create takes the representation of a prowjob and creates it .
update takes the representation of a prowjob and updates it .
getapplicable returns the subset of blockers applicable to the specified branch .
findall finds issues with label in the specified orgs / repos that should block tide .
newcountplugin counts events and number of issues in given state .
receiveissue is a wrapper on plugin .
receiveissueevent is a wrapper on plugin .
receivecomment creates a fake " commented " even .
helper to update disk metric .
newranch creates a new ranch object .
acquire checks out a type of resource in certain state without an owner .
release unsets owner for target resource and move it to a new state .
update updates the timestamp of a target resource .
reset unstucks a type of stale resource to a new state .
logstatus outputs current status of all resource .
syncconfig updates resource list from a fil .
metric returns a metric object with metrics filled i .
formaturl will return the gh markdown to show the image for a specific dogurl .
trusteduser returns true if user is trusted in repo .
runandskipjobs executes the config .
validatecontextoverlap ensures that there will be no overlap in contexts between a set of jobs running and a set to ski .
runrequested executes the config .
skiprequested posts skipped statuses for the config .
match is " labeled " with labe .
match is " unlabeled " .
neweventmatcher returns the correct eventmatcher based on description incoming event should have the following form eventnamelabelname .
addflags injects github options into the given flagset .
addflagswithoutdefaultgithubtokenpath injects github options into the given flagset without setting a default for for the githubtokenpath .
validate validates github options .
githubclientwithlogfields returns a github client with extra logging field .
githubclient returns a github client .
gitclient returns a git client .
tomap returns maps the file name to its coverage for faster retrieval & membership chec .
findchanges compares the newlist of coverage against the base list and returns the resul .
createdatabase for the mysqlconfi .
addflags parses options for database configuratio .
newreporter returns a reporter clien .
shouldreport returns if this prowjob should be reported by the github reporte .
report will report via reportli .
mark marks a particular resource as currently present .
markcomplete figures out which arns were in previous passes but not this one .
newjobagent is a jobagent constructor .
start will start the job and periodically update it .
jobs returns a thread - safe snapshot of the current job state .
prowjobs returns a thread - safe snapshot of the current prow jobs .
getprowjob finds the corresponding prowjob resource from the provided job name and build i .
unionstrings merges the parent and child items togethe .
apply returns a policy that merges the child into the paren .
getorg returns the org config after merging in any global policies .
getrepo returns the repo config after merging in any org policies .
getbranch returns the branch config after merging in any repo policies .
getbranchprotection returns the policy for a given branch .
getpolicy returns the protection policy for the branch .
branchrequirements partitions status contexts for a given org .
updateissueevents fetches all events until we find the most recent we have in db .
enqueuekey schedules an item for reconciliation .
prowjobstatus returns the desired state and description based on the build status .
buildenv constructs the environment map for the jo .
defaultarguments will append each arg to the template .
defaultenv adds the map of environment variables to the container .
injectenvironment will add rawenv to the build steps and / or template arguments .
injectsource adds the custom source container to call clonerefs correctly .
injectedsteps returns initial containers .
determinetimeout decides the timeout value used for buil .
makebuild creates a build from the prowjob .
newissue creates a new ( orm ) issue from a github issu .
newissueevent creates a new ( orm ) issue from a github issu .
newlabels creates a new label for each label in the issu .
newassignees creates a new label for each label in the issu .
newissuecomment creates a comment from a github .
messagefilter builds a filter for jobs based on the messagebody matching the trigger regex of the jobs .
issuccess means the job passe .
isfailure means the job completed with problems .
isaborted means something stopped the job before it could finish .
prowjobid extracts the prowjob identifier for the jenkins build in order to correlate the build with a prowjob .
buildid extracts the build identifier used for placing and discovering build artifacts .
newclient instantiates a client with provided values .
crumbrequest requests a csrf protection token from jenkins to use it in subsequent requests .
measure records metrics about the provided method .
request executes a request with the provided method and path .
dorequest executes a request with the provided method and path exactly once .
getjobname generates the correct job name for this job typ .
getbuildpath builds a path to trigger a regular build for this jo .
getjobinfo retrieves jenkins job informatio .
jobparameterized tells us if the jenkins job for this prowjob is parameterize .
launchbuild launches a regular or parameterized jenkins build .
build triggers a jenkins build for the provided prowjob .
buildfromspec triggers a jenkins build for the provided prowjobspec .
listbuilds returns a list of all jenkins builds for the provided jobs ( both scheduled and enqueued ) .
getenqueuedbuilds lists all enqueued builds for the provided jobs .
getbuilds lists all scheduled builds for the provided job .
abort aborts the provided jenkins build for job .
presubmittojobspec generates a downwardapi .
postsubmittojobspec generates a downwardapi .
periodictojobspec generates a downwardapi .
getbuildid calls out to tot in order to vend build identifier for the jo .
listgcsobjects get the slice of gcs objects under a given pat .
findbaseprofile finds the coverage profile file from the latest healthy build stored in given gcs director .
sortbuilds converts all build from str to int and sorts all builds in descending order and returns the sorted slic .
getall retrieves all regions from the aws ap .
neweventclient creates an eventclient struct .
prunecomments fetches issue comments if they have not yet been fetched for this webhook event and then deletes any bot comments indicated by the func shouldprune .
make a small svg badge that looks like [ subject | status ] .
formatresponse nicely formats a response to a generic reason .
formatsimpleresponse formats a response that does not warrant additional explanation in the details section .
formaticresponse nicely formats a response to an issue comment .
formatresponseraw nicely formats a response for one does not have an issue commen .
validate ensures that the set of options are self - consistent and valid .
addflags adds flags to the flagset that populate the gcs upload options struct given .
encode will encode the set of options in the format that is expected for the configuration environment variable .
registerissuehandler registers a plugin s github .
registerissuecommenthandler registers a plugin s github .
registerpullrequesthandler registers a plugin s github .
registerstatuseventhandler registers a plugin s github .
registerpusheventhandler registers a plugin s github .
registerrevieweventhandler registers a plugin s github .
registerreviewcommenteventhandler registers a plugin s github .
registergenericcommenthandler registers a plugin s github .
newagent bootstraps a new config .
initializecommentpruner attaches a commentpruner .
commentpruner will return the commentpruner .
load attempts to load config from the path .
config returns the agent current configuration .
set attempts to set the plugins that are enabled on repos .
start starts polling path for plugin config .
genericcommenthandlers returns a map of plugin names to handlers for the repo .
issuehandlers returns a map of plugin names to handlers for the repo .
issuecommenthandlers returns a map of plugin names to handlers for the repo .
pullrequesthandlers returns a map of plugin names to handlers for the repo .
revieweventhandlers returns a map of plugin names to handlers for the repo .
reviewcommenteventhandlers returns a map of plugin names to handlers for the repo .
statuseventhandlers returns a map of plugin names to handlers for the repo .
pusheventhandlers returns a map of plugin names to handlers for the repo .
getplugins returns a list of plugins that are enabled on a given ( org .
eventsforplugin returns the registered events for the passed plugin .
converts " [ k8s .
insertlink attempts to set metadata .
parseconfig reads data stored in given config path in configpath - path to the config file out a list of resourceconfig object on success .
validateconfig validates config with existing resources in configs - a list of resources configs resources - a list of resources out nil on success .
newmason creates and initialized a new mason object in rtypes - a list of resource types to act on cleanercount - number of cleaning threads client - boskos client waitperiod - time to wait before a new boskos operation ( acquire mostly ) syncperiod - time to wait before syncing resource information to boskos out a pointer to a mason objec .
registerconfigconverter is used to register a new masonable interface in name - identifier for masonable implementation fn - function that will parse the configuration string and return a masonable interface out nil on success .
updateconfigs updates configs from storage path in storagepath - the path to read the config file from out nil on success error otherwis .
helpprovider construct the pluginhelp .
ensureforkexists ensures a fork of org / repo exists for the bot .
getpatch gets the patch for the provided pr and creates a local copy of it .
validatepayload ensures that the request payload signature matches the key .
payloadsignature returns the signature that matches the payload .
findteam returns teams [ n ] for the first n in [ name .
validateteamnames returns an error if any current / previous names are used multiple times in the config .
updatestring will return true and set have to want iff they are set and different .
updatebool will return true and set have to want iff they are set and different .
configureorgmeta will update github to have the non - nil wanted metadata values .
configureteam patches the team name / description / privacy when values diffe .
configureteamrepos updates the list of repos that the team has permissions for when necessar .
shouldreport tells if a prowjob should be reported by this reporte .
report takes a prowjob .
run will upload files to gcs as prescribed by the options .
pathsforjob determines the following for a job - path in gcs under the bucket where job artifacts will be uploaded for - the job - this specific run of the job ( if any subdir is present ) the builder for the job is also returned for use in other path resolution .
newdefaultfieldsformatter returns a defaultfieldsformatter .
format implements logrus .
findlabels returns the list of labels matching the rege .
addflags binds flags to options .
newagent returns a new github oauth agent .
handlelogin handles github login request from front - end .
handlelogout handles github logout request from front - end .
handles server errors .
deepcopyobject implements the runtime .
fromitem implements the object interfac .
getitems implements the collection interfac .
setitems implements the collection interfac .
deepcopyobject implements the runtime .
unmarshaltext validates the text is a valid strin .
isassignee checks if a user is assigned to the issue .
isauthor checks if a user is the author of the issue .
haslabel checks if an issue has a given label .
branch returns the name of the branch to which the user pushed .
truncate converts " really long messages " into " really .
reportstatus should be called on any prowjob status change .
todo ( krzyzacy ) move this logic into github / reporter .
createcomment take a prowjob and a list of entries generated with createentry and returns a nicely formatted comment .
defaultlookingdhcpoptions this part is a little annoying .
genericcommentaction normalizes the action string to a genericcommenteventaction or returns " " if the action is unrelated to the comment text .
config returns the lens s configuration .
header renders the content of < head > from template .
callback does nothing .
formatrecord describes the record in a human - readable manner for inclusion into build log .
namespace returns a copy of the client pointing at the specified namespace .
retry on transport failures .
retry on transport failures .
newfakeclient creates a client that doesnt do anything .
newclientincluster creates a client that works from within a pod .
newclientfromfile reads a cluster object at clusterpath and returns an authenticated client using the keys within .
unmarshalclustermap reads a map [ string ] cluster in yaml bytes .
clientmapfromfile reads the file at clusterspath and attempts to load a map of cluster aliases to authenticated clients to the respective clusters .
newclient returns an authenticated client using the keys in the cluster .
getpod is analogous to kubectl get pods / name namespace=client .
listpods is analogous to kubectl get pods -- selector=selector -- namespace=client .
createprowjob creates a prowjob in the client s specified namespace .
getprowjob returns the prowjob at name in the client s specified namespace .
listprowjobs lists prowjobs using the specified labelselector in the client s specified namespace .
deleteprowjob deletes the prowjob at name in the client s specified namespace .
replaceprowjob will replace name with job in the client s specified namespace .
createpod creates a pod in the client s specified namespace .
getlog returns the log of the default container in the specified pod .
getlogtail returns the last n bytes of the log of the specified container in the specified pod .
getcontainerlog returns the log of a container in the specified pod .
createconfigmap creates a configmap .
getconfigmap gets the configmap identified .
replaceconfigmap puts the configmap into name .
getdiskusage wraps syscall .
getatime the atime for a file .
registerlens registers new viewer .
getlens returns a lens by name .
lastnlines reads the last n lines from an artifact .
lastnlineschunked reads the last n lines from an artifact by reading chunks of size chunksize from the end of the artifact .
newclient creates a slack client with an api token .
writemessage adds text to channe .
markandsweep looks at the provided set .
listall populates a set will all available natgateway resources .
restclient returns a restclient that is used to communicate with api server by this client implementation .
newclient creates a boskos client for the specified url and resource owner .
public method acquire asks boskos for a resource of certain type in certain state .
acquirewait blocks until acquire returns the specified resource or the provided context is cancelled or its deadline exceeded .
acquirebystate asks boskos for a resources of certain type .
acquirebystatewait blocks until acquirebystate returns the specified resource ( s ) or the provided context is cancelled or its deadline exceeded .
releaseall returns all resources hold by the client back to boskos and set them to dest state .
releaseone returns one of owned resources back to boskos and set it to dest state .
updateall signals update for all resources hold by the client .
syncall signals update for all resources hold by the client .
updateone signals update for one of the resources hold by the client .
reset will scan all boskos resources of type .
metric will query current metric for target resource type .
hasresource tells if current client holds any resource .
dialcontext connects to the address on the named network using the provided context .
isdialerrorretriable determines whether or not a dialer should retry a failed connection attempt by examining the connection error to see if it is one of the following error types * timeout * temporary * econnrefused * econnrese .
newdashboardagent creates a new user dashboard agent .
querypullrequests is a query function that returns a list of open pull requests owned by the user whose access token is consumed by the github client .
getheadcontexts returns the status checks contexts of the head commit of the pr .
constructsearchquery returns the github search query string for prs that are open and authored by the user passed .
loadclusterconfigs loads rest .
newbundledstates is the constructor for bundledstate .
receiveevent is called when something happens on an issue .
ages return the age of each active state .
total counts number of active state .
percentile returns given percentile for age of all active states at time .
newmetrics creates a new set of metrics for the jenkins operator .
newgroup reads the .
use load to read a .
handle is the workhorse notifying issue owner to add a sig label if there is none the algorithm ( 1 ) return if this is not an opened .
shouldprune finds comments left by this plugin .
newdiskcache creates a github cache roundtripper that is backed by a disk cache .
newmemcache creates a github cache roundtripper that is backed by a memory cache .
prowv1 retrieves the prowv1clien .
prow retrieves the prowv1clien .
newowners consturcts a new owners instance .
getapprovers returns a map from ownersfiles -> people that are approvers in the .
getleafapprovers returns a map from ownersfiles -> people that are approvers in them ( only the leaf ) .
getallpotentialapprovers returns the people from relevant owners files needed to get the pr approve .
getreversemap returns a map from people -> owners files for which they are an approve .
temporaryunapprovedfiles returns the list of files that wouldn t be approved by the given set of approvers .
keepcoveringapprovers finds who we should keep as suggested approvers given a pre - selection knownapprovers must be a subset of potentialapprovers .
getsuggestedapprovers solves the exact cover problem .
getownersset returns a set containing all the owners files necessary to get the pr approve .
getshuffledapprovers shuffles the potential approvers so that we dont always suggest the same people .
removesubdirs takes a set of directories as an input and removes all subdirectories .
string creates a link for the approval .
intersectsetscase runs the intersection between to sets .
newapprovers create a new " approvers " with no approval .
shouldnotoverrideapproval decides whether or not we should keep the original approval if someone approves a pr multiple times .
addlgtmer adds a new lgtm approve .
removeapprover removes an approver from the list .
addassignees adds assignees to the lis .
getcurrentapproversset returns the set of approvers ( login only .
getcurrentapproverssetcased returns the set of approvers logins with the original cases .
getnoissueapproversset returns the set of " no - issue " approvers ( login only ) .
getfilesapprovers returns a map from files -> list of current approvers .
noissueapprovers returns the list of people who have " no - issue " approved the pull - request .
unapprovedfiles returns owners files that still need approva .
getfiles returns owners files that still need approval .
getccs gets the list of suggested approvers for a pull - request .
requirementsmet returns a bool indicating whether the pr has met all approval requirements - all owners files associated with the pr have been approved and either \ t - the munger config is such that an issue is not required to be associated with the pr \ t - that there is an associated issue with the pr \ t - an owner has indicated that the pr is trivial enough that an issue need not be associated with the p .
isapproved returns a bool indicating whether the pr is fully approved .
listapprovals returns the list of approval .
listnoissueapprovals returns the list of " no - issue " approval .
generatetemplate takes a template .
getmessage returns the comment body that we want the approve plugin to display on prs the comment shows \ t - a list of approvers files ( and links ) needed to get the pr approved \ t - a list of approvers files with strikethroughs that already have an approver s approval \ t - a suggested list of people from each owners files that can fully approve the pr \ t - how an approver can indicate their approval \ t - how an approver can cancel their approva .
getgubernatormetadata returns a json string with machine - readable information about approvers .
writes the golang text template at templatepath to outputpath using the given dat .
validate runs checks to ensure the label inputs are valid it ensures that no two label names ( including previous names ) have the same lowercase value .
labels returns a sorted list of labels unique by nam .
todo ( spiffxp ) needs to validate labels duped across repos are identical ensures the config does not duplicate label names between default and rep .
labelsfortarget returns labels that have a given targe .
loadconfig reads the yaml config at pat .
getorg returns organization from " org " or " username " org can be organization name like " kubernetes " but we can also request all user s public repos via usergithub user nam .
loadrepos read what ( filtered ) repos exist under an or .
loadlabels returns what labels exist in githu .
rename the label ( will also update color ) .
update the label color / descriptio .
classifylabels will put labels into the required .
parsecommadelimitedlist parses values in the format org / repo .
linkify transforms a string into a markdown anchor link i could not find a proper doc .
newcache returns a new cache given the root directory that should be used on disk for cache storag .
keytopath converts a cache entry key to a path on dis .
pathtokey converts a path on disk to a key .
get provides your readhandler with the contents at ke .
getentries walks the cache dir and returns all paths that exist in the future this * may * be made smarte .
delete deletes the file at ke .
newgcsartifact returns a new gcsartifact with a given handle .
size returns the size of the artifact in gc .
readat reads len ( p ) bytes from a file in gcs at offset of .
readatmost reads at most n bytes from a file in gcs .
readall will either read the entire file or throw an error if file size is too bi .
readtail reads the last n bytes from a file in gc .
gzipped returns whether the file is gzip - encoded in gc .
optionsforrepo gets the plugins .
list lists all prowjobs in the indexer .
prowjobs returns an object that can list and get prowjobs .
list lists all prowjobs in the indexer for a given namespace .
metadatafromfilename guesses file metadata from the filename and a simplifed filename .
runsagainstallbranch returns true if there are both branches and skip branches are unse .
shouldrun returns true if the input branch matches .
intersects checks if other brancher would trigger for the same branch .
shouldrun determines if we can know for certain that the job should run .
runsagainstchanges returns true if any of the changed input paths match the run if changed regex .
couldrun determines if the postsubmit could run against a specific base re .
shouldrun determines if the postsubmit should run in response to a set of changes .
couldrun determines if the presubmit could run against a specific base re .
shouldrun determines if the presubmit should run against a specific base ref .
triggermatches returns true if the comment body should trigger this presubmit .
newgithubdeferredchangedfilesprovider uses a closure to lazily retrieve the file changes only if they are needed .
getpresubmit returns the presubmit job for the provided repo and job name .
setpresubmits updates c .
setpostsubmits updates c .
allpresubmits returns all prow presubmit jobs in repos .
allpostsubmits returns all prow postsubmit jobs in repos .
allperiodics returns all prow periodic jobs .
clearcompiledregexes removes compiled regexes from the presubmits .
empty checks if a simpleconfig could be considered empt .
newclient is the constructor for clien .
loadrepoaliases returns an up - to - date repoaliases struct for the specified repo .
expandalias returns members of an alia .
expandaliases returns members of multiple aliases .
parsefullconfig will unmarshal owners file s content into a fullconfig returns an error if the content cannot be unmarshalle .
parsesimpleconfig will unmarshal an owners file s content into a simpleconfig returns an error if the content cannot be unmarshalle .
decodeownersmdconfig will parse the yaml header if it exists and unmarshal it into a singleownersconfig .
findownersforfile returns the owners file path furthest down the tree for a specified file using ownermap to check for entrie .
findapproverownersforfile returns the owners file path furthest down the tree for a specified file that contains an approvers sectio .
findreviewersownersforfile returns the owners file path furthest down the tree for a specified file that contains a reviewers sectio .
findlabelsforfile returns a set of labels which should be applied to prs modifying files under the given path .
isnoparentowners checks if an owners file path refers to an owners file with noparentowners enabled .
entriesforfile returns a set of users who are assignees to the requested file .
leafapprovers returns a set of users who are the closest approvers to the requested file .
approvers returns all of the users who are approvers for the requested file ( including approvers in parent dirs owners ) .
leafreviewers returns a set of users who are the closest reviewers to the requested file .
reviewers returns all of the users who are reviewers for the requested file ( including reviewers in parent dirs owners ) .
requiredreviewers returns all of the users who are required reviewers for the requested file ( including required reviewers in parent dirs owners ) .
ratio returns the percentage of statements that are covere .
frompayload set the periodicprowjobevent from the pubsub message payload .
tomessage generates a pubsub message from a periodicprowjobevent .
unmarshaltext returns an error if text ! = secret or close .
compileapplicableblockades filters the specified blockades and compiles those that apply to the repo .
calculateblocks determines if a pr should be blocked and returns the summary describing the block .
mergeprofiles merges two coverage profiles .
mergemultipleprofiles merges more than two profiles together .
addflags adds " log - authors " < authors > to the command hel .
receiveissue is a wrapper on plugin .
receiveissueevent is a wrapper on plugin .
receivecomment is a wrapper on plugin .
addflags adds flags to the flagset that populate the wrapper options struct provided .
validate ensures that the set of options are self - consistent and vali .
processnextitem attempts to upload container logs to gc .
handleerr checks if an error happened and makes sure we will retry later .
commandfilter builds a filter for / test foo .
aggregatefilter builds a filter that evaluates the child filters in order and returns the first matc .
filterpresubmits determines which presubmits should run and which should be skipped by evaluating the user - provided filter .
makecommand returns a filter command .
push adds event to the hea .
pop retrieves the last added even .
newfakeopenpluginwrapper is the constructor for fakeopenpluginwrappe .
receiveissue creates a fake " opened " even .
receiveissueevent injects an extra " opened " event before calling plugin .
receivecomment is a wrapper on plugin .
validate ensures that the configuration options are vali .
complete internalizes command line argument .
addflags adds flags to the flagset that populate the gcs upload options struct given .
set parses out a prowapi .
set records the value passe .
set parses out overrides from user inpu .
ensure will ensure binary is on path or return an error with install message .
output returns the trimmed output of running args .
projects returns the list of accessible gcp project .
currentclusters returns a name cluster map .
createcluster causes gcloud to create a cluster in project .
contextconfig returns the loader and config .
applycreate will dry - run create and then pipe this to kubectl apply .
filterpresubmits determines which presubmits should run .
determineskippedpresubmits identifies the largest set of contexts we can actually post skipped contexts for .
diffprofiles returns the difference between two sets of coverage profiles .
dispatch receives channels to each type of events .
plugins constantly wait for new issues / events / comment .
addflags adds " ignore - authors " < authors > to the command hel .
receiveissue calls plugin .
receiveissueevent calls plugin .
receivecomment calls plugin .
createissue tries to create and return a new github issue .
createstatus creates or updates a status context on the indicated reference .
foreachpr iterates over all prs that fit the specified criteria .
getcollaborators returns all github users who are members or outside collaborators of the repo .
getcombinedstatus retrieves the combinedstatus for the specified reference .
getissues gets all the issues in a repo that meet the list options .
getrepolabels gets all the labels that valid in the specified repo .
getuser gets the github user with the specified login or the currently authenticated user .
check if the config provided through the flags take valid values .
create logfile for systemd service in outputdir with the given journalctl outputmode .
createfullsystemdlogfile creates logfile for full systemd journal in the outputdir .
create logfiles for systemd services in outputdir .
copy logfiles specific to this node based on the cloud - provider .
write a marker file to gcs named after this node to indicate logexporter s success .
makecommand returns a junit command .
mdyamlenabled returns a boolean denoting if the passed repo supports yaml owners config headers at the top of markdown ( * .
validate checks the following properties - org .
warndeprecated prints a deprecation warning for a particular configuration option .
describe generates a human readable description of the behavior that this configuration specifies .
triggerfor finds the trigger for a repo .
enabledreposforplugin returns the orgs and repos that have enabled the passed plugin .
enabledreposforexternalplugin returns the orgs and repos that have enabled the passed external plugin .
setdefaults sets default options for config updatin .
validateplugins will return error if there are unknown or duplicated plugins .
newreporter returns a reporter clien .
run clones the refs under the prescribed directory and optionally configures the git username and email in the repository as well .
pathforrefs determines the full path to where refs should be clone .
gitctxforrefs creates a gitctx based on the provide refs and basedir .
commandsforbaseref returns the list of commands needed to initialize and configure a local git directory .
githeadtimestamp returns the timestamp of the head commit as seconds from the unix epoch .
gittimestampenvs returns the list of environment variables needed to override git s author and commit timestamps when creating new commits .
gitrevparse returns current commit from head in a git tre .
commandsforpullrefs returns the list of commands needed to fetch and merge any pull refs as well as submodules .
producecovlist summarizes profiles and returns the resul .
poprandom randomly selects an element of set and pops it .
addflags injects kubernetes options into the given flagset .
validate validates kubernetes options .
resolve loads all of the clients we need and caches them for future calls .
prowjobclientset returns a prowjob clientset for use in informer factories .
prowjobclient returns a prowjob client .
infrastructureclusterclient returns a kubernetes client for the infrastructure cluster .
buildclusterclients returns pod clients for build clusters .
age gives the time since the state has been activated .
receiveevent checks if the event matches the exit criteria .
receiveevent checks if the event matches the entry criteria returns a new activestate or self .
active is true if all the states are active .
age returns the time since all states have been activated .
receiveevent will send the event to each individual state .
newstate creates a multistate instance based on the statesdescription string .
forresource gives generic access to a shared informer of the matching type todo extend this to unknown resources with a client poo .
prowjobs returns a prowjobinformer .
itemtoresourcesconfig casts an item object to a resourcesconfi .
copy returns a copy of the typetoresource .
makecommand returns an aggregate command .
newcontroller creates a new controller from the provided clients .
incrementnumpendingjobs increments the amount of pending prowjobs for the given job identifie .
setpreviousreportstate sets the github key for prevreportstates to current state .
syncmetrics records metrics for the cached prowjobs .
terminatedupes aborts presubmits that have a newer version .
todo dry this ou .
todo no need to return the pod name since we already have the prowjob in the call site .
dumpprofile dumps the profiles given to writer in go coverage format .
blocksequal returns true if the blocks refer to the same code .
newprowjobinformer constructs a new informer for prowjob type .
newfilteredprowjobinformer constructs a new informer for prowjob type .
new constructs a spyglass object from a jobagent .
lenses gets all views of all artifact files matching each regexp with a registered len .
runpath returns the path to the gcs directory for the job run specified in src .
extralinks fetches started .
needdemux returns whether there are any external plugins that need to get the present event .
demuxexternal dispatches the provided payload to the external plugins .
dispatch creates a new request using the provided payload and headers and dispatches the request to the provided endpoint .
addflags adds " state " and " percentiles " to the command hel .
checkflags configures which states to monito .
receiveissueevent computes age percentiles and saves them to influxd .
dirblacklist returns regular expressions matching directories to ignore when searching for owners .
load loads and parses the config at path .
yamltoconfig converts a yaml file into a config objec .
readfilemaybegzip wraps ioutil .
mergeconfig merges two jobconfig together it will try to merge \ t - presubmits \ t - postsubmits \ t - periodics \ t - podpreset .
validatecomponentconfig validates the infrastructure component configuratio .
configpath returns the value for the component s configpath if provided explicitly or default otherwise .
validatecontroller validates the provided controller config .
defaultjobbase configures common parameters .
setpresubmitregexes compiles and validates all the regular expressions for the provided presubmits .
setbrancherregexes compiles and validates all the regular expressions for the provided branch specifiers .
setpostsubmitregexes compiles and validates all the regular expressions for the provided postsubmits .
newboskoshandler constructs the boskos handler .
handledefault handler for / .
handlerelease handler for / release method post \ turl params \ t \ trequired name= [ string ] name of finished resource \ t \ trequired owner= [ string ] owner of the resource \ t \ trequired dest= [ string ] dest stat .
handlemetric handler for / metric method ge .
dumpprofile dumps the profile to the given file destination .
loadprofile loads a profile from the given filename .
newclient returns a client that talks to github .
setcredentials sets credentials in the client to be used for pushing to or pulling from remote repositories .
checkout runs git checkout .
checkoutnewbranch creates a new branch and checks it out .
merge attempts to merge commitlike into the current branch .
am tries to apply the patch in the given path into the current branch by performing a three - way merge ( similar to git cherry - pick ) .
checkoutpullrequest does exactly that .
config runs git config .
retrycmd will retry the command a few times with backoff .
mergecommitsexistbetween runs git log < target > .
labelsandannotationsforjob returns a standard set of labels to add to pod / build / etc resources .
prowjobtopod converts a prowjob to a pod that will run the tests .
clonelogpath returns the path to the clone log file in the volume mount .
cloneenv encodes clonerefs options into json and puts it into an environment variabl .
sshvolume converts a secret holding ssh keys into the corresponding volume and mount .
cookiefilevolumes converts a secret holding cookies into the corresponding volume and mount .
injectentrypoint will make the entrypoint binary in the tools volume the container s entrypoint .
placeentrypoint will copy entrypoint from the entrypoint image to the tools volum .
kubeenv transforms a mapping of environment variables into their serialized form for a podspec .
addflags injects kubernetes options into the given flagset .
validate validates kubernetes options .
client returns a kubernetes client .
handle interacts with github to drive the pull request to the proper state by adding and removing comments and labels .
sendhook sends a github event of type eventtype to the provided address .
todo ( amwat ) remove this logic when we get rid of -- project .
clean by janitor scrip .
async janitor goroutin .
new creates new cloud pub / sub clien .
subscription creates a subscription from the cloud pub / sub clien .
handlepulls pull for pub / sub subscriptions and handle them .
run will block listening to all subscriptions and return once the context is cancelled or one of the subscription has a unrecoverable error .
spectostarted translate a jobspec into a started struct optionally overwrite repoversion with provided mainrefsh .
run will start the initupload job to upload the artifacts .
processclonelog checks if clone operation successed or failed for a ref and upload clone logs as build log upon failures .
hasprchanged indicates that the code diff may have changed .
updateissues downloads new issues and saves in databas .
handlereviewevent should only handle reviews that have no approval command .
returns associated issue .
addapprovers iterates through the list of comments on a pr and identifies all of the people that have said / approve and adds them to the approvers .
optionsforrepo gets the plugins .
localonlymain contains logic used only when running locally .
handlebadge handles requests to get a badge for one or more jobs the url must look like this .
handlejobhistory handles requests to get the history of a given job the url must look like this for presubmits / job - history / < gcs - bucket - name > / pr - logs / directory / < job - name > example - / job - history / kubernetes - jenkins / pr - logs / directory / pull - test - infra - verify - gofmt for periodics or postsubmits .
handlerequestjobviews handles requests to get all available artifact views for a given job .
todo ( spxtr ) cache .
covlist constructs new ( file ) group coverag .
summarize summarizes all items in the group and stores the resul .
subset returns the subset obtained through applying filte .
listdirectories gets a list a sub - directories that contains source code .
readrequest extracts the request from the admissionreview reade .
handle reads the request and writes the respons .
writeresponse gets the response from onlyupdatestatus and writes it to w .
onlyupdatestatus returns the response to the reques .
newhealth creates a new health request multiplexer and starts serving the liveness endpoint on the given por .
serveready starts serving the readiness endpoin .
newcontroller makes a controller out of the given clients .
org / repo .
newexpectedcontext creates a context with expected state .
contextstostrings converts a list context to a list of strin .
filtersubpools filters non - pool prs out of the initially identified subpools .
filtersubpool filters prs from an initially identified subpool .
filterpr indicates if a pr should be filtered out of the subpool .
poolprmap collects all subpool prs into a map containing all pooled prs .
unsuccessfulcontexts determines which contexts from the list that we care about are failed .
trymerge attempts 1 merge and returns a bool indicating if we should try to merge the remaining prs and possibly an error .
prchanges gets the files changed by the pr .
prune removes any cached file changes that were not used since the last prune .
headcontexts gets the status contexts for the commit with oid == pr .
aggregateprofiles takes multiple coverage profiles and produces a new coverage profile that counts the number of profiles that hit a block at least once .
counttoboolean converts a profile containing hit counts to instead contain only 1s or 0s .
newstorage instantiates a new storage with a persistencelayer implementation if storage string is not empty .
addresource adds a new resourc .
deleteresource deletes a resource if it exists .
updateresource updates a resource if it exists .
getresource gets an existing resource .
getresources list all resource .
parseconfig reads in configpath and returns a list of resource objects on success .
problemsinfiles runs buildifier on the files .
newpodlogartifact creates a new podlogartifac .
canonicallink returns a link to where pod logs are streame .
readat implements reading a range of bytes from the pod logs endpoin .
readall reads all available pod logs .
readatmost reads at most n byte .
readtail reads the last n bytes of the pod lo .
size gets the size of the pod log .
modifiedgofiles returns a map from filename to patch string for all go files that are modified in the pr excluding vendor / and generated files .
newproblems compares the list of problems with the list of past comments on the pr to decide which are new .
remove merged presets from a podspe .
undo merged presets from loaded presubmit and its childre .
these are unnecessary .
difference returns a new orgrepoconfig that represents the set difference of the repos specified by the receiver and the parameter orgrepoconfigs .
union returns a new orgrepoconfig that represents the set union of the repos specified by the receiver and the parameter orgrepoconfig .
ensurevalidconfiguration enforces rules about tide and plugin config .
set records the value passe .
clearstalecomments deletes old comments that are no longer applicable .
newclient creates a new client from a boskosclient interfac .
acquire gets a resource with associated leased resource .
releaseone will release a resource as well as leased resources associated to i .
updateall updates all the acquired resources with a given stat .
getgithubclient creates a client for each toke .
getusername finds the login for each toke .
createtokenhandler parses the token and create a handle .
createtokenhandlers goes through the list of token files .
process does the main job it tries to get the value of " remaining " rate just before the token gets reset .
string returns the string representation of a prow job identifie .
terminateolderpresubmitjobs aborts all presubmit jobs from the given list that have a newer version .
pushmetrics is meant to run in a goroutine and continuously push metrics to the provided endpoint .
ratelimiter creates a ratelimiting queue for a given prow controller .
findrepo will attempt to find a repo in logical locations under path .
checkcommitmessages will perform the actual dco check by retrieving all commits contained within the pr with the given number .
checkexistingstatus will retrieve the current status of the dco context for the provided sha .
checkexistinglabels will check the provided pr for the dco sign off labels .
mardkownshalist prints the list of commits in a markdown - friendly way .
shouldprune finds comments left by this plugin .
pathforspec determines the gcs path prefix for files uploaded for a specific job spe .
aliasforspec determines the gcs path aliases for a job spe .
rootforspec determines the root gcs path for storing artifacts about the provided job .
newsingledefaultrepopathbuilder returns a builder that handles the legacy path encoding where a path will contain org and repo for all but one default rep .
newexplicitrepopathbuilder returns a builder that handles the path encoding where a path will always have an explicit " org repo " path segmen .
registersourceordie registers a source of auto - filed issues .
createandsync is the main workhorse function of issuecreator .
registerflags registers options for this munger ; returns any that require a restart when changed .
setintersect removes any elements from the first list that are not in the second .
getawscreds tries to fetch aws credentials from a resourc .
stopper returns a channel that remains open until an interrupt is received .
newpipelineconfig returns a client and informer capable of mutating and monitoring the specified config .
addflags injects kubernetes options into the given flagset .
validate validates kubernetes options .
kubeclient returns a kubernetes client .
prowjobclient returns a kubernetes client .
resolve sym links into the actual log directory for a particular test ru .
reads specified json file in to data .
lists the gcs " directory paths " immediately under prefix .
lists all gcs keys with given prefix .
gets all build ids for a job .
assumes a to be sorted in descending order returns a subslice of a along with its indices ( inclusive ) .
filterprofilepaths produces a new profile that removes either everything matching or everything not matching the provided paths .
handle drives the pull request to the desired state .
loadsecrets loads multiple paths of secrets and add them in a map .
loadsinglesecret reads and returns the value of a single file .
set the bool according to the string .
newopener returns an opener that can read gcs and local paths .
isnotexist will return true if the error is because the object does not exist .
logclose will attempt a close an log any erro .
reader will open the path for reading .
writer returns a writer that overwrites the path .
initgithuboauthconfig creates an oauthclient using githuboauth config and a cookie store to retain user credentials .
deltadisplayed converts a coverage ratio delta into a string value to be displayed by coverage robo .
maketable checks each coverage change and produce the table content for coverage bot post it also report on whether any coverage fells below the given threshol .
contentforgithubpost constructs the message covbot posts .
addflags parses options for github clien .
checkflags looks for organization and project flags to configure the clien .
getgithubclient create the github client that we use to communicate with githu .
limitscheckandwait make sure we have not reached the limit or wai .
repositoryname returns github s repository name in the form of org / projec .
fetchissues from github .
hasid look for a specific id in a list of event .
fetchissueevents from github and return the full list .
fetchissuecomments fetches comments associated to given issue ( since latest ) .
these are the only actions indicating the code diffs may have changed .
newfetcher creates a new fetcher and initializes the output channel .
fetchrecentissues retrieves issues from db .
fetch retrieves all types of events .
zoneismanaged checks if the zone should be managed ( and thus have records deleted ) by u .
resourcerecordsetismanaged checks if the resource record should be managed ( and thus deleted ) by u .
registerflags registers options for this munger ; returns any that require a restart when changed .
issues is the main work method of flakyjobreporter .
parseflakyjobs parses json generated by the flakes bigquery metric into a sorted slice of * flakyjob .
title yields the initial title text of the github issue .
labels returns the labels to apply to the issue created for this flaky job on github .
return valid json .
handlemetric handler for / method ge .
loadclusterconfig loads connection configuration for the cluster we re deploying to .
getkubernetesclient retrieves the kubernetes cluster client from within the cluste .
getkubernetesclient retrieves the kubernetes cluster client from within the cluste .
validate ensures that the set of options are self - consistent and vali .
addflags binds flags to option .
newjobspec converts a prowapi .
resolvespecfromenv will determine the refs being tested in by parsing prow environment variable content .
envforspec returns a mapping of environment variables to their values that should be available for a job spe .
envfortype returns the slice of environment variables to export for jobtyp .
getrevisionfromref returns a ref or sha from a refs objec .
getrevisionfromspec returns a main ref or sha from a spec objec .
helpprovider provides information on the plugi .
newgroup reads the .
use load to read a generated files config file .
use loadpaths to load a file of new - line delimited paths .
match determines whether a file .
createdatabase creates and connects a new instance of an influxdb it is created based on the fields set in the configuration .
mergetags merges the default tags with the exta tags .
tagstowhere creates a where query to match tags elemen .
push a point to the database .
pushbatchpoints pushes the batch points ( for real ) .
artifact constructs an artifact handle for the given job buil .
roleismanaged checks if the role should be managed ( and thus deleted ) by us in particular .
gather metrics from plank .
makerequest renders a branch protection policy into the corresponding github api request .
makeadmins returns true iff * val == true .
makechecks renders a contextpolicy into the corresponding github api object .
makerestrictions renders restrictions into the corresponding github api object .
makereviews renders review policy into the corresponding github api object .
header executes the " header " section of the template .
body returns the < body > content for a build log ( or multiple build logs ) .
callback is used to retrieve new log segment .
loglinesall reads all of an artifact and splits it into lines .
breaks lines into important / unimportant group .
logviewtemplate executes the log viewer template ready for renderin .
deepcopyobject implements runtime .
fromitem implements object interfac .
setitems implements collection interfac .
deepcopyobject implements collection interfac .
usecontext calls kubectl config use - context ct .
currentcontext returns kubectl config current - contex .
getcredentials calls gcloud container clusters get - credentials .
command creates an exec .
getaccount returns gcloud config get - value core / accoun .
setaccount calls gcloud config set core / accoun .
describecluster returns details from gcloud container clusters describe .
set appends a value onto the strslice .
splitbucketobject breaks a path into the first part ( the bucket ) .
dirname returns the logical parent directory of the path .
parsexml extracts a gcsdir object from xml .
render writes html representing this gcsdir to the provided output .
render writes html representing this record to the provided output .
render writes html representing this prefix to the provided output .
printf logs a formatted line to the logging output .
processregexmatches processes the user command regex matches and returns the proposed project name .
set populates projectsflag upon flag .
newclient returns a new gerrit clien .
querychanges queries for all changes from all projects after lastupdate time returns an instancechanges ma .
setreview writes a review comment base on the change id + revisio .
getbranchrevision returns sha of head of a branc .
private handler implementation detail .
newtypefilterwrapperplugin is the constructor of typefilterwrapperplugi .
addflags adds " no - pull - requests " and " no - issues " to the command hel .
checkflags makes sure not both pr and issues are ignore .
receiveissue calls plugin .
receiveissueevent calls plugin .
receivecomment calls plugin .
addflags adds kube client flags to existing flagset .
validate validates kubernetes client options .
client returns a clientinterface based on the flags provided .
newclientfromflags creates a crd rest client from provided flags .
createrestconfig for cluster api server .
registerresource sends a request to create crds and waits for them to initializ .
newdummyclient creates a in memory client representation for testing .
create implements clientinterfac .
update implements clientinterfac .
delete implements clientinterfac .
get implements clientinterfac .
list implements clientinterfac .
create implements clientinterfac .
delete implements clientinterfac .
get implements clientinterfac .
list implements clientinterfac .
trustedpullrequest returns whether or not the given pr should be tested .
buildall ensures that all builds that should run and will be required are buil .
run will watch for the process being wrapped to exit and then post the status of that process and any artifacts to cloud storage .
addconfig adds a new confi .
deleteconfig deletes an existing config if it exists or fail otherwis .
updateconfig updates a given if it exists or fail otherwis .
getconfig returns an existing if it exists errors out otherwis .
getconfigs returns all config .
adds the list of known types to the scheme .
newcontroller constructs a new controller to reconcile stauses on config chang .
run monitors the incoming configuration changes to determine when statuses need to be reconciled on prs in flight when blocking presubmits chang .
addedblockingpresubmits determines new blocking presubmits based on a config update .
removedblockingpresubmits determines stale blocking presubmits based on a config update .
migratedblockingpresubmits determines blocking presubmits that have had their status contexts migrated .
load loads the set of options .
newcontroller creates a new controller from the provided clients .
canexecuteconcurrently checks whether the provided prowjob can be executed concurrently .
getjenkinsjobs returns all the jenkins jobs for all active prowjobs from the provided list .
throttle client to a rate of at most hourlytokens requests per hour .
newclientwithfields creates a new fully operational github client .
newclient creates a new fully operational github client .
newdryrunclient creates a new client that will not perform mutating actions such as setting statuses or commenting .
newfakeclient creates a new client that will not perform any actions at all .
make a request with retries .
requestraw makes a request with retries and returns the response body .
not thread - safe - callers need to hold c .
haspermission returns true if getuserpermission ( ) returns any of the roles .
deletestalecomments iterates over comments on an issue / pr .
readpaginatedresults iterates over all objects in the paginated result indicated by the given url .
readpaginatedresultswithvalues is an override that allows control over the query string .
updatepullrequest modifies the title .
getlabels is a helper function that retrieves a paginated list of labels from a github uri path .
convert to a statecannotbechanged if appropriate or else return the original erro .
query runs a graphql query using shurcool / githubql s client .
ismergeable determines if a pr can be merged .
token is an implementation for oauth2 .
teamhasmember checks if a user belongs to a tea .
listartifacts gets the names of all artifacts available from the given sourc .
keytojob takes a spyglass url and returns the jobname and buildid .
prowtogcs returns the gcs key corresponding to the given prow ke .
deepcopyinto is an autogenerated deepcopy function .
deepcopy is an autogenerated deepcopy function .
deepcopy is an autogenerated deepcopy function .
deepcopy is an autogenerated deepcopy function .
deepcopyinto is an autogenerated deepcopy function .
deepcopy is an autogenerated deepcopy function .
deepcopyobject is an autogenerated deepcopy function .
deepcopyinto is an autogenerated deepcopy function .
deepcopy is an autogenerated deepcopy function .
deepcopyobject is an autogenerated deepcopy function .
deepcopy is an autogenerated deepcopy function .
deepcopyinto is an autogenerated deepcopy function .
deepcopy is an autogenerated deepcopy function .
deepcopy is an autogenerated deepcopy function .
deepcopyinto is an autogenerated deepcopy function .
deepcopy is an autogenerated deepcopy function .
deepcopy is an autogenerated deepcopy function .
upload the result downloaded from path into project .
applydefault applies the defaults for the prowjob decoration .
validate ensures all the values set in the decorationconfig are valid .
applydefault applies the defaults for the utilityimages decorations .
applydefault applies the defaults for gcsconfiguration decorations .
validate ensures all the values set in the gcsconfiguration are valid .
setcomplete marks the job as completed ( at time now ) .
clusteralias specifies the key in the clusters map to use .
newresource creates a new boskos resource .
newresourcesfromconfig parse the a resourceentry into a list of resource .
userdatafrommap returns a userdata from a ma .
set parses the flag value into a commaseparatedstring .
unmarshaljson implements json unmarshaler interfac .
extract unmarshalls a string a given struct if it exist .
user data are used to store custom information mainly by mason and masonable implementation .
update updates existing userdata with new userdata .
tomap converts a userdata to userdatama .
frommap feels updates user data from a ma .
itemtoresource casts a item back to a resourc .
addsshkeys will start the ssh - agent and add all the specified keys .
issues is the main work function of the triagefiler .
registerflags registers options for this munger ; returns any that require a restart when changed .
loadclusters parses and filters the json data .
parsetriagedata unmarshals raw json data into a triagedata struct and creates a buildindexer for every job .
topclusters gets the count most important clusters from a slice of clusters based on number of build failures .
topjobsfailed returns the top count job names sorted by number of failing builds .
title is the string to use as the github issue title .
labels returns the labels to apply to the issue created for this cluster on github .
new makes a new cron objec .
queuedjobs returns a list of jobs that need to be triggered and reset trigger in jobstatu .
syncconfig syncs current cronagent with current prow config which add / delete jobs accordingly .
hasjob returns if a job has been scheduled in cronagent or no .
addjob adds a cron entry for a job to cronagen .
removejob removes the job from cronagen .
updatecomments downloads issue and pull - request comments and save in d .
gatherprowjobmetrics gathers prometheus metrics for prowjobs .
run executes the test process then writes the exit code to the marker file .
optionordefault defaults to a value if option is the zero valu .
newgcsjobsource creates a new gcsjobsource from a given bucket and jobprefi .
artifacts lists all artifacts available for the given job sourc .
artifact constructs a gcs artifact from the given gcs bucket and key .
canonicallink gets a link to the location of job - specific artifacts in gc .
jobpath gets the prefix to all artifacts in gcs in the jo .
returns expected status state and description .
targeturl determines the url used for more details in the status context on github .
waitsync waits until the minimum status update period has elapsed then syncs .
newbuildconfig returns a client and informer capable of mutating and monitoring the specified config .
newclient makes a new client with the specified token and dry - run status .
retry handles rate limiting and retry logic for a github api call .
depaginate adds depagination on top of the retry and rate limiting logic provided by retry .
newhelpagent constructs a new helpagent .
generatepluginhelp compiles and returns the help information for all plugins .
reversepluginmaps inverts the configuration .
orgsinconfig gets all the org strings ( not org / repo ) in config .
validate ensures that the set of options are self - consistent and vali .
addflags binds flags to option .
gets the pull commit hash from metadat .
listjobbuilds concurrently lists builds for the given job prefixes that have been run on a p .
getprbuilddata concurrently fetches metadata on each build of each job run on a p .
parsepullurl parses pr history urls .
getgcsdirsforpr returns a map from bucket names -> set of " directories " containing presubmit dat .
imagecreateinpool ( ) creates a new storage volume in a given storage pool for the image .
helper to delete an image file from the local images directory .
create the network on the system .
the network structs and function .
opennode creates a new node object .
transaction creates a new nodetx object and transactionally executes the node - level database interactions invoked by the given function .
forlocalinspectionwithpreparedstmts is the same as forlocalinspection but it also prepares the statements used in auto - generated database code .
setdefaulttimeout sets the default go - dqlite driver timeout .
transaction creates a new clustertx object and transactionally executes the cluster database interactions invoked by the given function .
enterexclusive acquires a lock on the cluster db .
exitexclusive runs the given transaction and then releases the lock acquired with enterexclusive .
close the database facade .
txcommit commits the given transaction .
parseremote splits remote and objec .
initialize apparmor - specific attributes .
returns true if apparmor stacking support is available .
add a device to a containe .
add a device to a profil .
create the specified image alises .
getexistingaliases returns the intersection between a list of aliases and all the existing ones .
string returns a suitable string representation for the status cod .
imagesget returns the names of all images ( optionally only the public ones ) .
imagesgetexpired returns the names of all images that have expired since the given time .
imagesourceinsert inserts a new image source .
imagesourceget returns the image source with the given id .
imagesourcegetcachedfingerprint tries to find a source entry of a locally cached image that matches the given remote details ( server .
imageexists returns whether an image with the given fingerprint exists .
imagegetfromanyproject returns an image matching the given fingerprint .
imagelocate returns the address of an online node that has a local copy of the given image .
imageassociatenode creates a new entry in the images nodes table for tracking that the current node has the given image .
imagedelete deletes the image with the given id .
imagealiasesget returns the names of the aliases of all images .
imagealiasget returns the alias with the given name in the given project .
imagealiasrename renames the alias with the given id .
imagealiasdelete deletes the alias with the given name .
imagealiasesmove changes the image id associated with an alias .
imagealiasadd inserts an alias ento the database .
imagealiasupdate updates the alias with the given id .
imagelastaccessupdate updates the last use date field of the image with the given fingerprint .
imagelastaccessinit inits the last use date field of the image with the given fingerprint .
imageupdate updates the image with the given id .
imagegetpools get the names of all storage pools on which a given image exists .
imagegetpoolnamesfromids get the names of all storage pools on which a given image exists .
imageuploadedat updates the upload date column and an image row .
imagesgetoncurrentnode returns all images that the current lxd node instance has .
imagesgetbynodeid returns all images that the lxd node instance has with the given node id .
imagegetnodeswithimage returns the addresses of online nodes which already have the image .
imagegetnodeswithoutimage returns the addresses of online nodes which dont have the image .
add a new task to the group .
start all the tasks in the group .
stop all tasks in the group .
zfsisenabled returns whether zfs backend is supported .
zfstoolversionget returns the zfs tools versio .
zfsmoduleversionget returns the zfs module versio .
zfspoolvolumecreate creates a zfs dataset with a set of given properties .
zfspoolvolumeexists verifies if a specific zfs pool or volume exists .
networkidsnotpending returns a map associating each network name to its id .
networkconfigadd adds a new entry in the networks config tabl .
networknodejoin adds a new entry in the networks nodes table .
networkcreated sets the state of the given network to " created " .
networkerrored sets the state of the given network to " errored " .
get all networks matching the given where filter ( if given ) .
networkget returns the network with the given name .
return the names of the nodes the given network is defined on .
networkgetinterface returns the network associated with the interface with the given name .
networkconfigget returns the config map of the network with the given id .
networkcreate creates a new network .
networkupdate updates the network with the given name .
networkupdatedescription updates the description of the network with the given id .
networkconfigclear resets the config of the network with the given id associated with the node with the given id .
networkdelete deletes the network with the given name .
networkrename renames a network .
getcontainers returns a list of container .
getcontainersfull returns a list of containers including snapshots .
getcontainer returns the container entry for the provided nam .
createcontainer requests that lxd creates a new containe .
createcontainerfromimage is a convenience function to make it easier to create a container from an existing imag .
updatecontainer updates the container definitio .
renamecontainer requests that lxd renames the containe .
deletecontainerfile deletes a file in the containe .
getcontainersnapshotnames returns a list of snapshot names for the containe .
getcontainersnapshots returns a list of snapshots for the containe .
getcontainersnapshot returns a snapshot struct for the provided container and snapshot name .
createcontainersnapshot requests that lxd creates a new snapshot for the containe .
migratecontainersnapshot requests that lxd prepares for a snapshot migratio .
updatecontainersnapshot requests that lxd updates the container snapsho .
getcontainerstate returns a containerstate entry for the provided container nam .
updatecontainerstate updates the container to match the requested stat .
getcontainerlogfiles returns a list of logfiles for the containe .
getcontainermetadata returns container metadata .
setcontainermetadata sets the content of the container metadata file .
getcontainertemplatefiles returns the list of names of template files for a container .
createcontainertemplatefile creates an a template for a container .
deletecontainertemplatefile deletes a template file for a container .
getcontainerconsolelog requests that lxd attaches to the console device of a container .
deletecontainerconsolelog deletes the requested container s console lo .
getcontainerbackups returns a list of backups for the containe .
getcontainerbackup returns a backup struct for the provided container and backup name .
createcontainerbackup requests that lxd creates a new backup for the containe .
renamecontainerbackup requests that lxd renames the backu .
deletecontainerbackup requests that lxd deletes the container backu .
camel converts to camel case ( " foo bar " -> " foobar " ) .
snake converts to snake case ( " foobar " -> " foo bar " ) .
rsynccopy copies a directory using rsync ( with the -- devices option ) .
rsyncsend sets up the sending half of an rsync .
rsyncrecv sets up the receiving half of the websocket to rsync ( the other half set up by rsyncsend ) .
return the names of all available patches .
patches begin her .
getconnectioninfo returns the basic connection information used to interact with the serve .
do performs a request .
rawquery allows directly querying the lxd api this should only be used by internal lxd tools .
rawwebsocket allows directly connection to lxd api websockets this should only be used by internal lxd tools .
rawoperation allows direct querying of a lxd api endpoint returning background operations .
internal function .
profiletoapi is a convenience to convert a profile db struct into an api profile struct .
profiles returns a string list of profiles .
profileget returns the profile with the given name .
profilesget returns the profiles with the given names in the given project .
profileconfig gets the profile configuration map from the db .
profileconfigclear resets the config of the profile with the given id .
profileconfigadd adds a config to the profile with the given id .
profilecontainersget gets the names of the containers associated with the profile with the given name .
profilecleanupleftover removes unreferenced profiles .
profilesexpandconfig expands the given container config with the config values of the given profiles .
profilesexpanddevices expands the given container devices with the devices defined in the given profiles .
server handling functions getserver returns the server status as a server struc .
updateserver updates the server status to match the provided server struc .
hasextension returns true if the server supports a given api extensio .
getserverresources returns the resources available to a given lxd serve .
useproject returns a client that will use a specific project .
opens the node - level database with the correct parameters for lxd .
accept a new node and add it to the cluster .
purge removes a node entirely from the cluster database .
count is a convenience for checking the current number of nodes in the cluster .
enabled is a convenience that returns true if clustering is enabled on this node .
check that node - related preconditions are met for bootstrapping or joining a cluster .
check that cluster - related preconditions are met for bootstrapping or joining a cluster .
check that cluster - related preconditions are met for accepting a new node .
check that cluster - related preconditions are met for leaving a cluster .
check that there is no left - over cluster certificate in the lxd var dir of this node .
configload loads a new config object with the current node - local configuration values fetched from the database .
replace the current configuration with the given values .
patch changes only the configuration keys in the given map .
certificatesget returns all certificates from the db as certbaseinfo objects .
certificateget gets an certbaseinfo object from the database .
certsave stores a certbaseinfo object in the db .
certdelete deletes a certificate from the db .
certupdate updates the certificate with the given fingerprint .
create a new net .
create a raft instance and all its dependencies .
servers returns the servers that are currently part of the cluster .
shutdown raft and any raft - related resource we have instantiated .
create a base raft configuration tweaked for a network with the given latency measure .
helper to bootstrap the raft cluster if needed .
cpuresource returns the system cpu informatio .
getoperationuuids returns a list of operation uuid .
getoperations returns a list of operation struc .
getoperation returns an operation entry for the provided uui .
getoperationwebsocket returns a websocket connection for the provided operatio .
deleteoperation deletes ( cancels ) a running operatio .
useful functions for unreliable backend .
detect whether lxd already uses the given storage pool .
projecturis returns all available project uris .
projectget returns the project with the given key .
projectexists checks if a project with the given key exists .
projectcreate adds a new project to the database .
projectusedbyref returns entities used by projects .
projectrename renames the project matching the given key parameters .
projectdelete deletes the project matching the given key parameters .
passwordcheck validates the provided password against the encoded secre .
loadcert reads the lxd server certificate from the given var dir .
writecert writes the given material to the appropriate certificate files in the given lxd var directory .
newdaemon returns a new daemon object with the given configuration .
defaultdaemon returns a new .
allowprojectpermission is a wrapper to check access against the project .
convenience function around authenticat .
state creates a new state instance linked to our internal db and os .
unixsocket returns the full path to the unix .
writejson encodes the body as json and sends it back to the clien .
etaghash hashes the provided data and returns the sha25 .
etagcheck validates the hash of the current state with the hash provided by the clien .
checktruststate checks whether the given client certificate is trusted ( i .
listenaddresses returns a list of hostport combinations at which this machine can be reache .
getlisteners returns the socket - activated network listeners .
perform a database dump .
keypairandca returns a certinfo object with a reference to the key pair and ( optionally ) ca certificate located in the given directory and having the given name prefix the naming conversion for the various files is < prefix > .
publickey is a convenience to encode the underlying public key to ascii .
privatekey is a convenience to encode the underlying private key .
fingerprint returns the fingerprint of the public key .
/ * * generate a list of names for which the certificate will be valid .
gencert will create and populate a certificate file and a key fil .
printserverinfo prints out information about the server .
launchcontainers launches a set of containers .
createcontainers create the specified number of containers .
getcontainers returns containers created by the benchmark .
startcontainers starts containers created by the benchmark .
params returns a parameters expression with the given number of ? placeholders .
set the value of a query parameter in the given uri .
image handling functions getimages returns a list of available images as image struct .
getimagefingerprints returns a list of available image fingerprint .
getimage returns an image struct for the provided fingerprin .
getimagefile downloads an image from the server .
getimagesecret is a helper around createimagesecret that returns a secret for the imag .
getprivateimage is similar to getimage but allows passing a secret download toke .
getprivateimagefile is similar to getimagefile but allows passing a secret download toke .
getimagealiases returns the list of available aliases as imagealiasesentry struct .
getimagealias returns an existing alias as an imagealiasesentry struc .
copyimage copies an image from a remote server .
updateimage updates the image definitio .
deleteimage requests that lxd removes an image from the stor .
refreshimage requests that lxd issues an image refres .
createimagealias sets up a new image alia .
updateimagealias updates the image alias definitio .
renameimagealias renames an existing image alia .
deleteimagealias removes an alias from the lxd image stor .
open the node - local database object .
ensureschema applies all relevant schema updates to the node - local database .
filesystemdetect returns the filesystem on which the passed - in path sits .
schema for the local database .
architecturegetlocal returns the local hardware architectur .
newcontroller returns a new controller using the specific maas server and machin .
definedcontainer returns true if the container is defined in maa .
renamecontainer renames the maas device for the container without releasing any allocatio .
deletecontainer removes the maas device for the containe .
newfrommap creates a new schema schema with the updates specified in the given map .
add a new update to the schema .
ensure makes sure that the actual schema in the given database matches the one defined by our updates .
dump returns a text of sql commands that can be used to create this schema from scratch in one go .
trim the schema updates to the given version ( included ) .
exerciseupdate is a convenience for exercising a particular update of a schema .
ensure that the schema exists .
return the highest update version currently applied .
apply any pending update that was not yet applied .
check that the given list of update version numbers doesnt have " holes " .
check that all the given updates are applied .
format the given sql statement in a human - readable way .
filecopy copies a file .
this uses ssize t llistxattr ( const char * path .
getallxattr retrieves all extended attributes associated with a file .
detect whether err is an errno .
uname returns utsname as string .
registerstmt register a sql statement .
preparestmts prepares all registered statements and returns an index from statement code to prepared statement object .
dialfunc returns a dial function that can be used to connect to one of the dqlite nodes .
shutdown this gateway .
sync dumps the content of the database to disk .
reset the gateway .
initialize the gateway .
wait for the raft node to become leader .
return information about the lxd nodes that a currently part of the raft cluster .
return the addresses of the raft nodes as stored in the node - level database .
create a dial function that connects to the given listener .
dqlitelog redirects dqlite s logs to our own logge .
metadataasmap parses the response metadata into a ma .
metadataasoperation turns the response metadata into an operatio .
metadataasstringslice parses the response metadata into a slice of strin .
metadataasstruct parses the response metadata into a provided struc .
load reads current content of the filename and loads records .
write writes current records to file .
addrecord adds a record to the report .
loadconfig reads the configuration from the config path ; if the path does not exist .
saveconfig writes the provided configuration to the config file .
abs resolves a filename relative to the base directory .
get reads the path s content from your local filesystem .
configpath returns a joined path of the configuration directory and passed argument .
servercertpath returns the path for the remote s server certificat .
newconfig returns a config .
check if criu supports pre - dumping and number of pre - dump iteration .
the function readcriustatsdump ( ) reads the criu stats - dump file in path and returns the pages written .
getconnectioninfo returns the basic connection information used to interact with the serve .
return a new root command .
apiextensionscount returns the number of available api extensions .
dotgo writes < name > .
selecturis returns a list of lxd api uri strings for the resource yielded by the given query .
selectstrings executes a statement which must yield rows with a single string column .
insertstrings inserts a new row for each of the given strings .
execute the given query and ensure that it yields rows with a single column of the given database type .
callerstackhandler returns a handler that adds a stack trace to the context with key " stack " .
lazyhandler writes all values to the wrapped handler after evaluating any lazy functions in the record s context .
callers returns a trace for the current goroutine with element 0 identifying the calling function .
name returns the import path qualified name of the function containing the call .
format implements fmt .
trimbelow returns a slice of the trace with all entries below pc removed .
trimabove returns a slice of the trace with all entries above pc removed .
trimbelowname returns a slice of the trace with all entries below the lowest with function name name removed .
trimabovename returns a slice of the trace with all entries above the highest with function name name removed .
trimruntime returns a slice of the trace with the topmost entries from the go runtime removed .
shiftowner updates uid and gid for a file when entering / exiting a namespac .
getcaps extracts the list of capabilities effective on the fil .
setcaps applies the caps for a particular root ui .
shiftacl updates uid and gid for file acls when entering / exiting a namespac .
read in progressreader is the same as io .
supported check if the given path supports project quota .
getproject returns the project quota id for the given pat .
setproject sets the project quota id for the given pat .
deleteproject unsets the project id from the path and clears the quota for the project i .
getprojectusage returns the current consumptio .
setprojectquota sets the quota on the project i .
load a backup from the databas .
create a new backu .
rename renames a container backu .
delete removes a container backu .
count returns the number of rows in the given table .
countall returns a map associating each table name in the database with the total count of its rows .
inittlsconfig returns a tls .
copy a container on a storage pool that does use a thinpool .
copy an lvm container .
copy an lvm custom volume .
getimagefingerprints returns a list of available image fingerprint .
getimage returns an image struct for the provided fingerprin .
getprivateimage isn t relevant for the simplestreams protoco .
getprivateimagefile isn t relevant for the simplestreams protoco .
getimagealiasnames returns the list of available alias name .
getimagealias returns an existing alias as an imagealiasesentry struc .
protorecv gets a protobuf message from a websocke .
protosend sends a protobuf message over a websocke .
protosendcontrol sends a migration control message over a websocke .
insert a row in one of the nodes association tables ( storage pools nodes .
the pty has been switched to raw mode so we will only ever read a single byte .
fetch information about the containers on the given remote node .
/ * * i also dont see that golang exports an api to get at the underlying fd .
retry wraps a function that interacts with the database .
isretriableerror returns true if the given error might be transient and the interaction can be safely retried .
volumeusedby = append ( volumeusedby .
storagepoolvolumesnapshotsget returns a list of snapshots of the form < volume > / < snapshot - name > .
apparmorprofile returns the current apparmor profile .
$lxd dir / storage - pools / < pool > / containers - snapshot .
functions dealing with storage volumes .
functions dealing with container storage .
containersnapshotrename renames a snapshot of a container .
needed for live migration where an empty snapshot needs to be created before rsyncing into it .
btrfspoolvolumesdelete is the recursive variant on btrfspoolvolumedelete .
/ * * btrfssnapshot creates a snapshot of " source " to " dest " * the result will be readonly if " readonly " is true .
isbtrfssubvolume returns true if the given path is a btrfs subvolume else false .
safeload is a wrapper around load ( ) that does not error when invalid keys are found .
selectconfig executes a query statement against a " config " table .
updateconfig updates the given keys in the given table .
insert or updates the key / value rows of the given config table .
delete the given key rows from the given config table .
formatsection properly indents a text sectio .
getprojects returns a list of available project struct .
getproject returns a project entry for the provided nam .
createproject defines a new container projec .
updateproject updates the project to match the provided project struc .
renameproject renames an existing project entr .
read behaves like io .
write behaves like io .
newcanceler returns a new canceler struc .
cancelable indicates whether there are operations that support cancelatio .
cancel will attempt to cancel all ongoing operation .
return information about the cluster .
fetch information about all node - specific configuration keys set on the storage pools and networks of this cluster .
depending on the parameters passed and on local state this endpoint will either - bootstrap a new cluster ( if this node is not clustered yet ) - request to join an existing cluster - disable clustering on a node the client is required to be trusted .
disable clustering on a node .
perform a request to the / internal / cluster / accept endpoint to check if a new mode can be accepted into the cluster and obtain joining information such as the cluster private certificate .
this function is used to notify the leader that a node was removed .
used to update the cluster after a database node has been removed .
used to promote the local non - database node to be a database one .
packages returns the the ast packages in which to search for structs .
filters parses all filtering statement defined for the given entity .
parse the structure declaration with the given name found in the given go package .
find the structtype node for the structure with the given nam .
extract field information from the given structure .
profile handling functions getprofilenames returns a list of available profile name .
getprofiles returns a list of available profile struct .
getprofile returns a profile entry for the provided nam .
createprofile defines a new container profil .
updateprofile updates the profile to match the provided profile struc .
renameprofile renames an existing profile entr .
load creates a new configuration map with the given schema and initial values .
change the values of this configuration map .
dump the current configuration held by this map .
getraw returns the value of the given key .
getstring returns the value of the given key .
getbool returns the value of the given key .
getint64 returns the value of the given key .
update the current values in the map using the newly provided ones .
set or change an individual key .
doesschematableexist return whether the schema table is present in the database .
return all versions in the schema table .
return a list of sql statements that can be used to create all tables in the database .
create the schema table .
insert a new version into the schema table .
read the given file ( if it exists ) and executes all queries it contains .
newstate returns a new state object with the given database and operating system components .
unload is called by the garbage collecto .
create a container struct without initializing it .
initialize storage interface for this containe .
setupunixdevice ( ) creates the unix device and sets up the necessary low - level liblxc configuration items .
onnetworkup is called by the lxd callhook when the lxc network up script is run .
setuphostvethdevice configures a nic device s host side veth settings .
freezer function .
get lxc container state .
storage function .
kill this function as soon as zfs is fixed .
check if the unix device already exists .
network i / o limit .
various container path .
internal maas handlin .
getsystemhandler on linux writes messages to syslog .
fallback for old drivers which dont provide " device minor " .
return string for minor number of nvidia device corresponding to the given pci i .
setlogger installs the given logger as global logger .
waitrecord blocks until a log .
addcontext will return a copy of the logger with extra context adde .
newdottedversion returns a new version .
parse parses a string starting with a dotted version and returns it .
string returns version as a strin .
compare returns result of comparison between two version .
prepareloopdev ( ) detects and sets up a loop device for source .
create the default profile of a project .
common logic between put and patch .
check if a project is empty .
add the " < project > " prefix when the given project name is not " default " .
certificate handling functions getcertificatefingerprints returns a list of certificate fingerprint .
getcertificates returns a list of certificate .
getcertificate returns the certificate entry for the provided fingerprin .
createcertificate adds a new certificate to the lxd trust stor .
updatecertificate updates the certificate definitio .
deletecertificate removes a certificate from the lxd trust stor .
add a container template fil .
delete a container templat .
return the full path of a container template .
error implements the error interface .
errorlist implements the error interface .
add adds an error with given key name .
updateschema updates the schema .
like doprofileupdate but does not update the database .
profile update of a single container .
query the db for information about containers associated with the given profile .
cancelablewait waits for an operation and cancel it on sigint / sigter .
getnetworknames returns a list of network name .
getnetworks returns a list of network struc .
getnetwork returns a network entry for the provided nam .
getnetworkleases returns a list of network struc .
getnetworkstate returns metrics and information on the running networ .
createnetwork defines a new network using the provided network struc .
updatenetwork updates the network to match the provided network struc .
renamenetwork renames an existing network entr .
open the cluster database object .
urlencode encodes a path and query parameters to a url .
isunixsocket returns true if the given path is either a unix socket or a symbolic link pointing at a unix socket .
hostpath returns the host path for the provided path on a normal system .
varpath returns the provided path elements joined by a slash and appended to the end of $lxd dir .
cachepath returns the directory that lxd should its cache under .
returns a random base64 encoded string from crypto / rand .
filemove tries to move a file by using os .
filecopy copies a file .
dircopy copies a directory recursively .
stringmaphasstringkey returns true if any of the supplied keys are present in the map .
deepcopy copies src to dest by using encoding / gob so its not that fast .
removeduplicatesfromstring removes all duplicates of the string sep from the specified string s .
writetempfile creates a temp file with the specified conten .
escapepathfstab escapes a path fstab - style .
rendertemplate renders a pongo2 template .
every returns a schedule that always returns the given time interval .
only initialize the minimal information we need about a given storage type .
currently only used for loop - backed lvm storage pools .
dump returns a sql text dump of all rows across all tables .
return a map from table names to their schema definition .
projecthasprofiles is a helper to check if a project has the profiles feature enabled .
projectnames returns the names of all available projects .
projectmap returns the names and ids of all available projects .
projecthasimages is a helper to check if a project has the images feature enabled .
projectupdate updates the project matching the given key parameters .
getcluster returns information about a cluster if this client is not trusted .
updatecluster requests to bootstrap a new cluster or join an existing one .
deleteclustermember makes the given member leave the cluster ( gracefully or not .
getclustermembernames returns the urls of the current members in the cluste .
getclustermembers returns the current members of the cluste .
getclustermember returns information about the given membe .
renameclustermember changes the name of an existing membe .
getstate returns the current state of a terminal which may be useful to restore the terminal after a signal .
makeraw put the terminal connected to the given file descriptor into raw mode and returns the previous state of the terminal so that it can be restored .
restore restores the terminal connected to the given file descriptor to a previous state .
addhandler adds a function to be called whenever an event is receive .
removehandler removes a function to be called whenever an event is receive .
disconnect must be used once done listening for event .
compareversions the versions of two lxd nodes .
hasclientcertificate will return true if a client certificate has already been generate .
generateclientcertificate will generate the needed client .
loadmodule loads the kernel module with the given name .
parse runs the go parser against the given package name .
pprofaddress returns the network addresss of the pprof endpoint .
pprofupdateaddress updates the address for the pprof endpoint .
newmethod return a new method code snippet for executing a certain mapping .
generate the desired method .
storagepoolsnodeconfig returns a map associating each storage pool name to its node - specific config values ( i .
storagepoolid returns the id of the pool with the given name .
storagepooldriver returns the driver of the pool with the given id .
storagepoolidsnotpending returns a map associating each storage pool name to its id .
storagepoolnodejoin adds a new entry in the storage pools nodes table .
storagepoolnodejoinceph updates internal state to reflect that nodeid is joining a cluster where poolid is a ceph pool .
storagepoolconfigadd adds a new entry in the storage pools config tabl .
storagepoolcreated sets the state of the given pool to " created " .
storagepoolerrored sets the state of the given pool to " errored " .
storagepoolnodeconfigs returns the node - specific configuration of all nodes grouped by node name .
get all storage pools matching the given where filter ( if given ) .
storagepoolsgetdrivers returns the names of all storage volumes attached to a given storage pool .
storagepoolgetid returns the id of a single storage pool .
storagepoolget returns a single storage pool .
return the names of the nodes the given pool is defined on .
storagepoolconfigget returns the config of a storage pool .
storagepoolcreate creates new storage pool .
add new storage pool config .
storagepooldriver returns the driver of the pool with the given id .
storagepoolupdate updates a storage pool .
storagepoolconfigclear deletes the storage pool config .
storagepooldelete deletes storage pool .
storagepoolvolumesgetnames gets the names of all storage volumes attached to a given storage pool .
storagepoolvolumesget returns all storage volumes attached to a given storage pool on any node .
storagepoolnodevolumesget returns all storage volumes attached to a given storage pool on the current node .
returns all storage volumes attached to a given storage pool on the given node .
storagepoolvolumesgettype get all storage volumes attached to a given storage pool of a given volume type .
storagepoolvolumesnapshotsgettype get all snapshots of a storage volume attached to a given storage pool of a given volume type .
storagepoolnodevolumesgettype returns all storage volumes attached to a given storage pool of a given volume type .
storagepoolvolumegettype returns a single storage volume attached to a given storage pool of a given type .
storagepoolnodevolumegettype gets a single storage volume attached to a given storage pool of a given type .
storagepoolnodevolumegettypebyproject gets a single storage volume attached to a given storage pool of a given type .
storagepoolvolumeupdate updates the storage volume attached to a given storage pool .
storagepoolvolumedelete deletes the storage volume attached to a given storage pool .
storagepoolvolumerename renames the storage volume attached to a given storage pool .
this a convenience to replicate a certain volume change to all nodes if the underlying driver is ceph .
storagepoolvolumecreate creates a new storage volume attached to a given storage pool .
storagepoolvolumegettypeid returns the id of a storage volume on a given storage pool of a given storage volume type .
storagepoolnodevolumegettypeid get the id of a storage volume on a given storage pool of a given storage volume type .
storagepoolvolumetypetoname converts a volume integer type code to its human - readable name .
devicesadd adds a new device .
devices returns the devices matching the given filters .
patches returns the names of all patches currently applied on this node .
patchesmarkapplied marks the patch with the given name as applied on this node .
return go type of the given database entity .
return the name of the post struct for the given entity .
return the name of the global variable holding the registration code for the given kind of statement aganst the given entity .
return an expression evaluating if a filter should be used ( based on active criteria ) .
return the code for a " dest " function .
return an index type of the form " map [ string ] map [ string ] .
compareconfigs compares two config maps and returns an error if they differ .
copyconfig creates a new map with a copy of the given config .
events starts a task that continuously monitors the list of cluster nodes and maintains a pool of websocket connections against all of them .
establish a client connection to get events from the given node .
/ * * shift a uid from the host into the container * i .
/ * addsafe adds an entry to the idmap set .
/ * * get a uid or gid mapping from / etc / subxid * / .
/ * * get a uid or gid mapping from / proc / self / g .
/ * * create an idmap of the current allocation * / .
only initialize the minimal information we need about a given storage type .
initialize a full storage interface .
functions dealing with storage pools .
ensure that the container s policy is loaded into the kernel so the container can boot .
ensure that the container s policy namespace is unloaded to free kernel memory .
parse the profile without loading it into the kernel .
delete the policy from cache / disk .
getsystemhandler on windows does nothing .
notifyupgradecompleted sends a notification to all other nodes in the cluster that any possible pending database update has been applied .
keepupdated is a task that continuously monitor this node s version to see it it s out of date with respect to other nodes .
check this node s version and possibly run lxd cluster update .
newserver returns a new rbac server instance .
startstatuscheck starts a periodic status checker .
syncprojects updates the list of projects in rba .
addproject adds a new project resource to rbac .
deleteproject adds a new project resource to rbac .
renameproject renames an existing project resource in rbac .
isadmin returns whether or not the provided user is an admin .
haspermission returns whether or not the user has the permission to perform a certain task .
send an rsync stream of a path over a websocke .
return a tls configuration suitable for establishing inter - node network connections using the cluster certificate .
return true if the given request is presenting the given cluster certificate .
notification that a container was moved .
used after to create the appropriate mounts point after a container has been moved .
contains checks if a given device exists in the set and if it s identical to that provide .
update returns the difference between two set .
devicenames returns the name of all devices in the set .
debug logs a message ( with optional context ) at the debug log leve .
info logs a message ( with optional context ) at the info log leve .
warn logs a message ( with optional context ) at the warning log leve .
error logs a message ( with optional context ) at the error log leve .
crit logs a message ( with optional context ) at the critical log leve .
infof logs at the info log level using a standard printf format strin .
debugf logs at the debug log level using a standard printf format strin .
warnf logs at the warning log level using a standard printf format strin .
errorf logs at the error log level using a standard printf format strin .
critf logs at the critical log level using a standard printf format strin .
forward to the local events dispatcher an event received from another node .
$lxd dir / storage - pools / < pool > / containers / [ < project name > ] < container name > .
$lxd dir / storage - pools / < pool > / containers - snapshots / < snapshot name > .
$lxd dir / storage - pools / < pool > / images / < fingerprint > .
$lxd dir / storage - pools / < pool > / custom / < storage volume > .
$lxd dir / storage - pools / < pool > / custom - snapshots / < custom volume name > / < snapshot name > .
storageprogressreader reports the read progress .
storageprogresswriter reports the write progress .
getlsbrelease returns a map with linux distribution informatio .
reset an auto - generated source file .
append a code snippet to a file .
containertoargs is a convenience to convert the new container db struct into the legacy containerargs .
containernames returns the names of all containers the given project .
containernodeaddress returns the address of the node hosting the container with the given name in the given project .
containerslistbynodeaddress returns the names of all containers grouped by cluster node address .
containerlistexpanded loads all containers across all projects and expands their config and devices using the profiles they are associated to .
containersbynodename returns a map associating each container to the name of its node .
snapshotidsandnames returns a map of snapshot ids to snapshot names for the container with the given name .
containernodelist returns all container objects on the local node .
containernodeprojectlist returns all container objects on the local node within the given project .
containerconfiginsert inserts a new config for the container with the given id .
containerremove removes the container with the given name from the database .
containerprojectandname returns the project and the name of the container with the given id .
containerconfigclear removes any config associated with the container with the given id .
containerconfiginsert inserts a new config for the container with the given id .
containerconfigget returns the value of the given key in the configuration of the container with the given id .
containerconfigremove removes the given key from the config of the container with the given id .
containersetstateful toggles the stateful flag of the container with the given id .
containerprofilesinsert associates the container with the given id with the profiles with the given names in the given project .
containerprofiles returns a list of profiles for a given container id .
containerconfig gets the container configuration map from the d .
legacycontainerslist returns the names of all the containers of the given type .
containersetstate sets the the power state of the container with the given id .
containerupdate updates the description .
containerlastusedupdate updates the last use date field of the container with the given id .
containergetsnapshots returns the names of all snapshots of the container in the given project with the given name .
containergetsnapshotsfull returns all container objects for snapshots of a given containe .
containernextsnapshot returns the index the next snapshot of the container with the given name and pattern should have .
containerpool returns the storage pool of a given container .
containerpool returns the storage pool of a given container .
containergetbackup returns the backup with the given name .
containergetbackups returns the names of all backups of the container with the given name .
containerbackupcreate creates a new backu .
containerbackupremove removes the container backup with the given name from the database .
containerbackuprename renames a container backup from the given current name to the new one .
containerbackupsgetexpired returns a list of expired container backups .
defaultos returns a fresh uninitialized os instance with default values .
init our internal data structures .
addhandler adds a function to be called whenever an event is receive .
getwebsocket returns a raw websocket connection from the operatio .
removehandler removes a function to be called whenever an event is receive .
refresh pulls the current version of the operation and updates the struc .
wait lets you wait until the operation reaches a final stat .
addhandler adds a function to be called whenever an event is receive .
canceltarget attempts to cancel the target operatio .
gettarget returns the target operatio .
wait lets you wait until the operation reaches a final stat .
use the listeners associated with the file descriptors passed via socket - based activation .
candidserver returns all the candid settings needed to connect to a server .
rbacserver returns all the candid settings needed to connect to a server .
autoupdateinterval returns the configured images auto update interval .
maascontroller the configured maas url and key .
offlinethreshold returns the configured heartbeat threshold .
configgetstring is a convenience for loading the cluster configuration and returning the value of a particular key .
configgetbool is a convenience for loading the cluster configuration and returning the value of a particular boolean key .
configgetint64 is a convenience for loading the cluster configuration and returning the value of a particular key .
clusteraddress returns the cluster addresss of the cluster endpoint .
general wrappers around logger interface functions .
wrappers around logger interface functions that send a string to the logger by running it through fmt .
extract the project query parameter from the given request .
extract the given query parameter directly from the url .
return a new db command .
description return a human - readable description of the operation type .
permission returns the needed rbac permission to cancel the oepratio .
operationsuuids returns the uuids of all operations associated with this node .
operationnodes returns a list of nodes that have running operation .
operationbyuuid returns the operation with the given uuid .
operationadd adds a new operations to the table .
operationremove removes the operation with the given uuid .
operations returns all operations in the cluster .
this task function expires logs when executed .
given its relative path with respect to the lxd surce tree .
keys returns all keys defined in the schem .
defaults returns a map of all key names in the schema along with their default values .
get the key associated with the given name .
assert that the key with the given name as the given type .
tells if the given value can be assigned to this particular value instance .
getstoragepoolvolumes returns a list of storagevolume entries for the provided poo .
getstoragepoolvolume returns a storagevolume entry for the provided pool and volume nam .
createstoragepoolvolume defines a new storage volum .
createstoragepoolvolumesnapshot defines a new storage volum .
getstoragepoolvolumesnapshots returns a list of snapshots for the storage volum .
getstoragepoolvolumesnapshot returns a snapshots for the storage volum .
updatestoragepoolvolumesnapshot updates the volume to match the provided storagepoolvolume struc .
migratestoragepoolvolume requests that lxd prepares for a storage volume migratio .
movestoragepoolvolume renames or moves an existing storage volum .
updatestoragepoolvolume updates the volume to match the provided storagepoolvolume struc .
deletestoragepoolvolume deletes a storage poo .
renamestoragepoolvolume renames a storage volum .
this performs all non - db related work needed to create the pool .
helper around the low - level db api .
helper around the low - level db api .
helper functions returns the parent container name .
load all containers across all projects .
load all containers of this nodes .
load all containers of this nodes under the given project .
perform a single heartbeat request against the node with the given address .
this seems a little excessive .
only initialize the minimal information we need about a given storage type .
functions dealing with storage pools .
things we dont need to care abou .
things we do have to care abou .
askbool asks a question and expect a yes / no answer .
askchoice asks the user to select one of multiple option .
askint asks the user to enter an integer between a min and max valu .
askstring asks the user to enter a string .
askpassword asks the user to enter a password .
askpasswordonce asks the user to enter a password .
ask a question on the output stream and read the answer from the input strea .
read the user s answer from the input stream .
/ * this is used for both profiles post and profile put * / .
the handler for the delete operation .
isrootdiskdevice returns true if the given device representation is configured as root disk for a container .
getrootdiskdevice returns the container device that is configured as root dis .
configkeychecker returns a function that will check whether or not a provide value is valid for the associate config key .
forwardedresponse takes a request directed to a node and forwards it to another node .
forwardedresponseiftargetisremote redirects a request to the request has a targetnode parameter pointing to a node which is not the local one .
forwardedresponseifcontainerisremote redirects a request to the node running the container with the given name .
forwardedresponseifvolumeisremote redirects a request to the node hosting the volume with the given pool id .
forwardedoperationresponse creates a response that forwards the metadata of an operation created on another node .
/ * * smarterror returns the right error message based on err .
keyvalue extracts the key and value encoded in the given string and separated by = ( foo=bar -> foo .
done prints the final status and prevents any updat .
update changes the status message to the provided strin .
warn shows a temporary message instead of the statu .
updateprogress is a helper to update the status using an iopgress instanc .
updateop is a helper to update the status using a lxd api operatio .
create a new net .
change the file mode and ownership of the local endpoint unix socket file .
newstmt return a new statement code snippet for running the given kind of query against the given database entity .
generate plumbing and wiring code for the desired statement .
output a line of code that registers the given statement and declares the associated statement code global variable .
connectlxdunix lets you connect to a remote lxd daemon over a local unix socket .
internal function called by connectlxd and connectpubliclx .
move a container using special post / containers / < name > ?target= < member > api .
isactive checks whether the container state indicates the container is activ .
raftnodes returns information about all lxd nodes that are members of the dqlite raft cluster ( possibly including the local node ) .
raftnodeaddress returns the address of the lxd raft node with the given id .
raftnodefirst adds a the first node of the cluster .
raftnodeadd adds a node to the current list of lxd nodes that are part of the dqlite raft cluster .
raftnodedelete removes a node from the current list of lxd nodes that are part of the dqlite raft cluster .
raftnodesreplace replaces the current list of raft nodes .
detect cgroup support .
configure the sqlite connection so that it s safe to access the dqlite - managed sqlite file .
containerget returns the container with the given key .
containerid return the id of the container with the given key .
containerexists checks if a container with the given key exists .
naturalkey returns the struct fields that can be used as natural key for uniquely identifying a row in the underlying table ( == .
containsfields checks that the mapping contains fields with the same type and name of given ones .
fieldbyname returns the field with the given name .
fieldcolumnname returns the column name of the field with the given name .
filterfieldbyname returns the field with the given name if that field can be used as query filter .
columnfields returns the fields that map directly to a database column .
scalarfields returns the fields that map directly to a single database column on another table that can be joined to this one .
reffields returns the fields that are one - to - many references to other tables .
column returns the name of the database column the field maps to .
zerovalue returns the literal representing the zero value for this field .
fieldcolumns converts thegiven fields to list of column names separated by a comma .
fieldargs converts the given fields to function arguments .
fieldparams converts the given fields to function parameters .
fieldcriteria converts the given fields to and - separated where criteria .
helper to initialize lxd clustering .
terminalformat formats log records optimized for human readability on a terminal with color - coded level output and terser human friendly timestamp .
jsonformatex formats log records as json objects .
formatvalue formats a value for serializatio .
resolvetarget is a convenience for handling the value ?targetnode query parameter .
write in progresswriter is the same as io .
update the schema and api extensions columns of the row in the nodes table that matches the given id .
return a slice of binary integer tuples .
getarchitectures returns the list of supported architectures .
getidmapset reads the uid / gid allocation .
runtimeliblxcversionatleast checks if the system s liblxc matches the provided version requiremen .
getexecpath returns the path to the current binar .
connect is a convenience around lxd .
connectifcontainerisremote figures out the address of the node which is running the container with the given name .
connectifvolumeisremote figures out the address of the node on which the volume with the given name is defined .
setuptrust is a convenience around containerserver .
getstoragepools returns a list of storagepool entrie .
getstoragepool returns a storagepool entry for the provided pool nam .
createstoragepool defines a new storage pool using the provided storagepool struc .
updatestoragepool updates the pool to match the provided storagepool struc .
deletestoragepool deletes a storage poo .
getstoragepoolresources gets the resources available to a given storage poo .
make sure all our directories are available .
config fetches all lxd node - level config keys .
updateconfig updates the given lxd node - level configuration keys in the config table .
config fetches all lxd cluster config keys .
updateconfig updates the given lxd cluster configuration keys in the config table .
configvalueset is a convenience to set a cluster - level key / value config pair in a single transaction .
this helper makes sure that .
this helper deletes any node - specific values from the config object .
this helper complements a put / patch request config with node - specific value .
logfmtformat return a formatter for a text log fil .
storagevolumenodeaddresses returns the addresses of all nodes on which the volume with the given name if defined .
storagevolumenodeget returns the name of the node a storage volume is on .
storagevolumeconfigget gets the config of a storage volume .
storagevolumedescriptionget gets the description of a storage volume .
storagevolumenextsnapshot returns the index the next snapshot of the storage volume with the given name should have .
storagevolumeisavailable checks that if a custom volume available for being attached .
storagevolumedescriptionupdate updates the description of a storage volume .
storagevolumeconfigadd adds a new storage volume config into database .
storagevolumeconfigclear deletes storage volume config .
get the ids of all volumes with the given name and type associated with the given pool .
storagevolumecleanupimages removes the volumes with the given fingerprints .
storagevolumemovetolvmthinpoolnamekey upgrades the config keys of lvm volumes .
l accumulates a single line of source code .
returns the source code to add to the target file .
pretty will attempt to convert any go structure into a string suitable for loggin .
networkpublickey returns the public key of the tls certificate used by the network endpoint .
networkprivatekey returns the private key of the tls certificate used by the network endpoint .
networkcert returns the full tls certificate information for this endpoint .
networkaddress returns the network addresss of the network endpoint .
networkupdateaddress updates the address for the network endpoint .
networkupdatecert updates the tls keypair and ca used by the network endpoint .
create a new net .
accept waits for and returns the next incoming tls connection then use the current tls configuration to handle it .
config safely swaps the underlying tls configuration .
start a single task executing the given function with the given schedule .
isoffline returns true if the last successful heartbeat time of the node is older than the given threshold .
nodebyaddress returns the node with the given network address .
nodependingbyaddress returns the pending node with the given network address .
nodebyname returns the node with the given name .
nodename returns the name of the node this method is invoked on .
nodeaddress returns the address of the node this method is invoked on .
nodeisoutdated returns true if there s some cluster node having an api or schema version greater than the node this method is invoked on .
nodescount returns the number of nodes in the lxd cluster .
noderename changes the name of an existing node .
nodes returns all lxd nodes part of the cluster .
nodeadd adds a node to the current list of lxd nodes that are part of the cluster .
nodepending toggles the pending flag for the node .
nodeupdate updates the name an address of a node .
noderemove removes the node with the given id .
nodeheartbeat updates the heartbeat column of the node with the given address .
nodeclear removes any container or image associated with this node .
nodeofflinethreshold returns the amount of time that needs to elapse after which a series of unsuccessful heartbeat will make the node be considered offline .
nodewithleastcontainers returns the name of the non - offline node with with the least number of containers ( either already created or being created with an operation ) .
nodeupdateversion updates the schema and api version of the node with the given id .
transaction executes the given function within a database transaction .
rollback a transaction after the given error occurred .
profileuris returns all available profile uris .
profileget returns the profile with the given key .
profileexists checks if a profile with the given key exists .
profilerename renames the profile matching the given key parameters .
profiledelete deletes the profile matching the given key parameters .
inmemorynetwork creates a fully in - memory listener and dial function .
accept waits for and returns the next connection to the listener .
canonicalnetworkaddress parses the given network address and returns a string of the form " hostport " .
servertlsconfig returns a new server - side tls .
networkinterfaceaddress returns the first non - loopback address of any of the system network interfaces .
isaddresscovered detects if network address1 is actually covered by address2 .
selectobjects executes a statement which must yield rows with a specific columns schema .
upsertobject inserts or replaces a new row with the given column values .
deleteobject removes the row identified by the given id .
execute the our task function according to our schedule .
isterminal returns true if the given file descriptor is a terminal .
getstate returns the current state of a terminal which may be useful to restore the terminal after a signal .
makeraw put the terminal connected to the given file descriptor into raw mode and returns the previous state of the terminal so that it can be restored .
restore restores the terminal connected to the given file descriptor to a previous state .
bind to the given unix socket path .
checkalreadyrunning checks if the socket at the given path is already bound to a running lxd process .
remove any stale socket file at the given path .
change the file mode of the given unix socket file .
change the ownership of the given unix socket file .
cephosdpoolexists checks whether a given osd pool exists .
cephosdpooldestroy destroys an osd pool .
cephrbdvolumecreate creates an rbd storage volume .
cephrbdvolumeexists checks whether a given rbd storage volume exists .
cephrbdvolumemap maps a given rbd storage volume this will ensure that the rbd storage volume is accessible as a block device in the / dev directory and is therefore necessary in order to mount it .
cephrbdsnapshotprotect protects a given snapshot from being deleted this is a precondition to be able to create rbd clones from a given snapshot .
cephrbdclonecreate creates a clone from a protected rbd snapsho .
cephrbdsnapshotlistclones list all clones of an rbd snapsho .
cephrbdvolumemarkdeleted marks an rbd storage volume as being in " zombie " state an rbd storage volume that is in zombie state is not tracked in lxd s database anymore but still needs to be kept around for the sake of any dependent storage entities in the storage pool .
cephrbdvolumeunmarkdeleted unmarks an rbd storage volume as being in " zombie " state - an rbd storage volume that is in zombie is not tracked in lxd s database anymore but still needs to be kept around for the sake of any dependent storage entities in the storage pool .
cephrbdvolumegetparent will return the snapshot the rbd clone was created from - if the rbd storage volume is not a clone then this function will return db .
cephrbdsnapshotdelete deletes an rbd snapshot this requires that the snapshot does not have any clones and is unmapped and unprotected .
cephrbdvolumecopy copies an rbd storage volume this is a non - sparse copy which doesnt introduce any dependency relationship between the source rbd storage volume and the target rbd storage volume .
cephrbdvolumelistsnapshots retrieves the snapshots of an rbd storage volume the format of the snapshot names is simply the part after the @ .
getrbdsize returns the size the rbd storage volume is supposed to be created wit .
getrbdfilesystem returns the filesystem the rbd storage volume is supposed to be created wit .
copywithsnapshots creates a non - sparse copy of a container including its snapshots this does not introduce a dependency relation between the source rbd storage volume and the target rbd storage volume .
parseclone splits a strings describing an rbd storage volume for example a string like < osd - pool - name > / < lxd - specific - prefix > < rbd - storage - volume > will be split into < osd - pool - name > .
copywithsnapshots creates a non - sparse copy of a container including its snapshots this does not introduce a dependency relation between the source rbd storage volume and the target rbd storage volume .
cephrbdgenerateuuid regenerates the xfs / btrfs uuid as neede .
getconfigcmd returns a cobra command that lets the caller see the configured auth backends in pachyder .
setconfigcmd returns a cobra command that lets the caller configure auth backends in pachyder .
newsharder creates a sharder using a discovery client .
newrouter creates a router .
renewusercredentials extends the ttl of the pachyderm authentication token usertoken .
newlocalclient returns a client that stores data on the local file syste .
addspantoanyexisting checks ctx for jaeger tracing information .
installjaegertracerfromenv installs a jaeger client as then opentracing global tracer .
unaryclientinterceptor returns a grpc interceptor for non - streaming grpc rpc .
streamclientinterceptor returns a grpc interceptor for non - streaming grpc rpc .
unaryserverinterceptor returns a grpc interceptor for non - streaming grpc rpc .
streamserverinterceptor returns a grpc interceptor for non - streaming grpc rpc .
closeandreporttraces tries to close the global tracer .
newwriter creates a new writer .
rangestart specifies the start of a range within the byte stream that is meaningful to the caller .
write rolls through the data written .
/ * segment needs us to identify a user before we report any events for that user .
getelapsedtime returns the elapsed time since an exponentialbackoff instance is created and is reset when reset ( ) is called .
helper function used to log requests and responses from our grpc method implementation .
format proxies the closure in order to satisfy logrus .
pretty formats a logrus entry like so " 2019 - 02 - 11t160202z info pfs .
newgrpclogwriter creates a new grpc log writer .
write allows grpcinfowriter to implement the io .
read loads the pachyderm config on this machine .
write writes the configuration in c to this machine s pachyderm config file .
read reads val from r .
write writes val to r .
newreadwriter returns a new readwriter with rw as both its source and its sink .
rungithookserver starts the webhook serve .
newloggingpipe initializes a loggingpip .
close closes l ( no more reading / writing will be possible ) .
clientconn returns a loggingconn at the oposite end of the loggingpipe as serverconn .
serverconn returns a loggingconn at the opposite end of the loggingpipe of clientconn ( see the clientconn description for more information ) .
read implements the corresponding method of net .
write implements the corresponding method of net .
dial initializes a new connection and releases a blocked call to accept ( ) .
accept implements the corresponding method of net .
close implements the corresponding method of net .
code returns the " error code " of err if it was returned by one of the hashtree methods .
errorf is analogous to fmt .
initpachonlyenv initializes this service environment .
initserviceenv initializes this service environment .
initwithkube is like initserviceenv .
getpachclient returns a pachd client with the same authentication credentials and cancellation as ctx ( ensuring that auth credentials are propagated through downstream rpcs ) .
getetcdclient returns the already connected etcd client without modification .
getkubeclient returns the already connected kubernetes api client without modification .
newhasher creates a hasher .
hashjob computes and returns the hash of a job .
hashpipeline computes and returns the hash of a pipeline .
status returns the statuses of workers referenced by pipelinercname .
cancel cancels a set of datums running on workers .
conns returns a slice of connections to worker servers .
clients returns a slice of worker clients for a pipeline .
newclient returns a worker client for the worker at the ip address passed in .
scrubgrpc removes grpc error code information from err if it came from grpc ( and returns it unchanged otherwise ) .
runfixedargs wraps a function in a function that checks its exact argument count .
runboundedargs wraps a function in a function that checks its argument count is within a range .
run makes a new cobra run function that wraps the given function .
errorandexit errors with the given format and args .
parsecommit takes an argument of the form " repo [ @branch - or - commit ] " and returns the corresponding * pfs .
parsecommits converts all arguments to * pfs .
parsebranch takes an argument of the form " repo [ @branch ] " and returns the corresponding * pfs .
parsebranches converts all arguments to * pfs .
parsefile takes an argument of the form " repo [ @branch - or - commit [ path ] ] " .
parsefiles converts all arguments to * pfs .
set adds a string to .
createalias generates a nested command tree for the invocation specified .
mergecommands merges several command aliases ( generated by createalias above ) into a single coherent cobra command tree ( with root command root ) .
setdocsusage sets the usage string for a docs - style command .
writer implements the corresponding method in the client interfac .
reader implements the corresponding method in the client interfac .
delete implements the corresponding method in the client interfac .
walk implements the corresponding method in the client interfac .
exists implements the corresponding method in the client interfac .
fullid prints reponame / commiti .
getblock encodes a hash into a readable format in the form of a block .
health implements the health method for healthserver .
clean canonicalizes path for internal use leading slash and no trailing slash .
split is like path .
validatepath checks if a file path is lega .
matchdatum checks if a datum matches a filter .
newcacheserver creates a new cacheserver .
hardstoppipeline does essentially the same thing as stoppipeline ( deletes the pipeline s branch provenance .
sudo is a helper function that copies pachclient grants it pps s superuser token .
makepipelineinfocommit is a helper for createpipeline that creates a commit with pipelineinfo in specrepo ( in pfs ) .
incrementgcgeneration increments the gc generation number in etc .
newdebugserver creates a new server that serves the debug api over grp .
health health checks pachd .
in test mode .
watchgc watches for gc runs and invalidate all cache when gc happens .
writeinternal contains the essential implementation of writeproto ( data is a serialized proto ) .
splitkey splits a key into the format we want .
newwriter returns a new writer .
write writes a line to the tabwriter .
printrepoheader prints a repo header .
printrepoinfo pretty - prints repo info .
printdetailedrepoinfo pretty - prints detailed repo info .
printbranch pretty - prints a branch .
printcommitinfo pretty - prints commit info .
printdetailedcommitinfo pretty - prints detailed commit info .
printfileinfo pretty - prints file info .
printdetailedfileinfo pretty - prints detailed file info .
compactprintbranch renders b as a compact string .
compactprintcommit renders c as a compact string .
compactprintfile renders f as a compact string .
parse parses s for git ancestry references .
add adds an ancestry reference to the given string .
retrynotify calls notify function with the error and wait duration for each failed attempt before sleep .
newcache creates a new cache .
put puts an id / hashtree pair in the cache and reads the hashtree from the passed in io .
get does a filtered write of id s hashtree to the passed in io .
delete deletes a hashtree from the cache .
merge does a filtered merge of the hashtrees in the cache .
printpipelineinfo pretty - prints pipeline info .
printworkerstatus pretty prints a worker status .
printdetailedjobinfo pretty - prints detailed job info .
printdetailedpipelineinfo pretty - prints detailed pipeline info .
printdatuminfo pretty - prints file info .
printfile values for a pfs file .
shorthandinput renders a pps .
updatelease extracts the duration of the lease governing secret ( an aws secret ) .
retrieve returns nil if it successfully retrieved the value .
isexpired returns if the credentials are no longer valid .
newbranch creates a pfs .
newcommit creates a pfs .
newcommitprovenance creates a pfs .
newfile creates a pfs .
createrepo creates a new repo object in pfs with the given name .
inspectrepo returns info about a specific repo .
listrepo returns info about all repos .
deleterepo deletes a repo and reclaims the storage space it was using .
buildcommit builds a commit in a single call from an existing hashtree that has already been written to the object store .
startcommitparent begins the process of committing data to a repo .
finishcommit ends the process of committing data to a repo and persists the commit .
inspectcommit returns info about a specific commit .
blockcommit returns info about a specific commit .
listcommit lists commits .
listcommitf lists commits .
listcommitbyrepo lists all commits in a repo .
createbranch creates a new branc .
inspectbranch returns information on a specific pfs branc .
listbranch lists the active branches on a repo .
setbranch sets a commit and its ancestors as a branch .
deletebranch deletes a branch .
deletecommit deletes a commit .
flushcommit returns an iterator that returns commits that have the specified commits as provenance .
flushcommitf calls f with commits that have the specified commits as provenance .
flushcommitall returns commits that have the specified commits as provenance .
subscribecommit is like listcommit but it keeps listening for commits as they come in .
subscribecommitf is like listcommit but it calls a callback function with the results rather than returning an iterator .
putobjectasync puts a value into the object store asynchronously .
putobject puts a value into the object store and tags it with 0 or more tags .
putobjectsplit is the same as putobject except that the data is splitted into several smaller objects .
getobject gets an object out of the object store by hash .
getobjectreader returns a reader for an object in object store by hash .
readobject gets an object by hash and returns it directly as [ ] byte .
getobjects gets several objects out of the object store by hash .
readobjects gets several objects by hash and returns them directly as [ ] byte .
tagobject applies a tag to an existing object .
listobject lists objects stored in pfs .
inspectobject returns info about an object .
gettag gets an object out of the object store by tag .
gettagreader returns a reader for an object in object store by tag .
readtag gets an object by tag and returns it directly as [ ] byte .
listtag lists tags stored in pfs .
compact forces compaction of objects .
newputfileclient returns a new client for putting files into pfs in a single request .
putfilewriter writes a file to pfs .
putfilesplitwriter writes a multiple files to pfs by splitting up the data that is written to it .
putfile writes a file to pfs from a reader .
putfileoverwrite is like putfile but it overwrites the file rather than appending to it .
putfilesplit writes a file to pfs from a reader delimiter is used to tell pfs how to break the input into block .
putfileurl puts a file using the content found at a url .
close must be called after you re done using a putfileclient .
putfilewriter writes a file to pfs .
putfilesplitwriter writes a multiple files to pfs by splitting up the data that is written to it .
putfile writes a file to pfs from a reader .
putfilesplit writes a file to pfs from a reader delimiter is used to tell pfs how to break the input into block .
putfileurl puts a file using the content found at a url .
copyfile copys a file from one pfs location to another .
getfilereadseeker returns a reader for the contents of a file at a specific commit that permits seeking to different points in the file .
inspectfile returns info about a specific file .
listfile returns info about all files in a commit under path .
listfilehistory returns info about all files and their history in a commit under path .
listfilef returns info about all files in a commit under path .
difffile returns the difference between 2 paths .
walk walks the pfs filesystem rooted at path .
deletefile deletes a file from a commit .
write performs a write .
close closes the writer .
object gets the pfs object for this writer .
prettyprintversion returns a version string optionally tagged with metadata .
prettyprintversionnoadditional returns a version string without version .
walk the command tree .
errmissingfield returns a logical response error that prints a consistent error message for when a required field is missing .
validatefields verifies that no bad arguments were given to the request .
putconfig parses and returns the configuration data from the storage backend .
getconfig parses and returns the configuration data from the storage backend .
getstringfield extracts key from req .
newpuller creates a new puller struct .
pulltree pulls from a raw hashtree rather than a repo .
cleanup cleans up blocked syscalls for pipes that were never opened .
push puts files under root into an open commit .
pushobj pushes data from commit to an object store .
pushfile makes sure that pfsfile has the same content as osfile .
dump writes debug information from the server to w .
profile writes a pprof profile for pachd to w .
binary writes the running pachd binary to w .
registercachestats creates a new wrapper for groupcache stats that implements the prometheus .
wait until more than n bytes have been writte .
cancel indicates that an error has occurred which will prevent any further calls to write .
runworkload runs a test workload against a pachyderm cluster .
createrepo creates a new repo in the cluste .
advancecommit either starts or finishes a commit .
putfile puts a file with random contents into a random open commit ( or exits early if there are none ) .
randstring returns a random alphabetical string of size .
newreader returns a reader which generates strings of characters .
newdbhashtree creates a database ( bolt ) backed hashtree .
deserializedbhashtree deserializes a hashtree into a database ( bolt ) backed hashtree .
get gets a hashtree node .
get gets a hashtree node .
iterdir iterates through the nodes under path .
list executes a callback for each file under a directory ( or a file if the path is a file ) .
listall retrieves all the files under a directory ( or a file if the path is a file ) .
list executes a callback for each file under a directory ( or a file if the path is a file ) .
glob executes a callback for each path that matches the glob pattern .
glob executes a callback for each path that matches the glob pattern .
fssize gets the size of the hashtre .
walk executes a callback against every node in the subtree of path .
walk executes a callback against every node in the subtree of path .
diff returns the diff of two hashtrees at particular paths .
serialize serializes a binary version of the hashtree .
copy returns a copy of the hashtree .
destroy cleans up the on disk structures for the hashtree .
visit visits every ancestor of path ( excluding path itself ) .
putfile appends data to a file ( and creates the file if it doesnt exist ) .
putfileoverwrite is the same as putfile .
putdirheaderfooter implements the hashtree .
putfileheaderfooter implements the hashtree putfileheaderfooter metho .
putdir creates a directory ( or does nothing if one exists ) .
deletedir deletes a directory and all the children under i .
deletefile deletes a regular file or directory ( along with its children ) .
newreader creates a new hashtree reader .
read reads the next merge node .
newwriter creates a new hashtree writer .
write writes the next merge node .
copy copies a hashtree reader in a writer .
index returns the index for a hashtree writer .
getrangefromindex returns a subtree byte range in a serialized hashtree based on a passed in prefix .
newfilter creates a filter for a hashtree shard .
pathtotree computes the hashtree shard for a path .
merge merges a collection of hashtree readers into a hashtree writer .
hashfilenode computes the hash of node and writes the result into node .
hash updates all of the hashes and node size metadata .
isglob checks if the pattern contains a glob characte .
globliteralprefix returns the prefix before the first glob characte .
gethashtreeobject is a convenience function to deserialize a hashtree from an object in the object store .
gethashtreetag is a convenience function to deserialize a hashtree from an tagged object in the object store .
puthashtree is a convenience function for putting a hashtree to an object store .
newchildcursor creates a new child cursor .
next gets the next key .
newordered creates a new ordered hashtree .
mkdirall puts all of the parent directories of a given path into the hashtree .
putdir puts a directory in the hashtree .
putfile puts a file in the hashtree .
serialize serializes an ordered hashtree .
newunordered creates a new unordered hashtree .
putfile puts a file in the hashtree .
ordered converts an unordered hashtree into an ordered hashtree .
revoke revokes the caller s credentials ( by sending a request to pachyderm ) .
revokeusercredentials revokes the pachyderm authentication token usertoken using the vault plugin s admin credentials .
newapiserver creates a new apiserver for the given version .
getserverversion gets the server * version given the * grpc .
string returns a string representation of the version .
getpipelineinfo gets the pipelineinfo proto describing the pipeline that this worker is part of .
insertstr inserts s into ss .
removestr removes s from ss .
publiccerttopem serializes the public x509 cert in cert to a pem - formatted bloc .
keytopem serializes the private key in cert to a pem - formatted block if it s an rsa key .
activatecmd returns a cobra .
deactivatecmd returns a cobra .
logoutcmd returns a cobra .
whoamicmd returns a cobra .
checkcmd returns a cobra command that sends an " authorize " rpc to pachd .
setscopecmd returns a cobra command that lets a user set the level of access that another user has to a rep .
listadminscmd returns a cobra command that lists the current cluster admin .
modifyadminscmd returns a cobra command that modifies the set of current cluster admin .
getauthtokencmd returns a cobra command that lets a user get a pachyderm token on behalf of themselves or another use .
useauthtokencmd returns a cobra command that lets a user get a pachyderm token on behalf of themselves or another use .
cmds returns a list of cobra commands for authenticating and authorizing users in an auth - enabled pachyderm cluster .
parsescope parses the string s to a scope ( for example .
iserrnotactivated checks if an error is a errnotactivate .
iserrpartiallyactivated checks if an error is a errpartiallyactivate .
iserrnotsignedin returns true if err is a errnotsignedi .
iserrnometadata returns true if err is an errnometadata ( uses string comparison to work across rpc boundaries ) .
iserrbadtoken returns true if err is a errbadtoke .
iserrnotauthorized checks if an error is a errnotauthorize .
iserrinvalidprincipal returns true if err is an errinvalidprincipa .
iserrtooshortttl returns true if err is a errtooshorttt .
newdatumfactory creates a datumfactory for an input .
newcollection creates a new collection .
path returns the full path of a key in the etcd namespac .
see the documentation for index for details .
see the documentation for index for details .
giving a value .
giving a value .
upsert is like update but key is not required to be presen .
get is an internal wrapper around etcdclient .
listprefix returns keys ( and values ) that begin with prefix .
list returns objects sorted based on the options passed in .
watch a collection .
watchone watches a given item .
watchonef watches a given item and executes a callback function each time an event occurs .
generateusercredentials uses the vault plugin s admin credentials to generate a new pachyderm authentication token for username ( i .
newcache creates a new cache .
put puts a key / value pair in the cache and reads the value from an io .
get gets a key s value by returning an io .
keys returns the keys in sorted order .
delete deletes a key / value pair .
clear clears the cache .
newdeployserver creates a deploy serve .
export a tarball of the images needed by a deployment .
datumtagprefix hashes a pipeline salt to a string of a fixed size for use as the prefix for datum output trees .
newpfsinput returns a new pfs input .
newpfsinputopts returns a new pfs input .
newcrossinput returns an input which is the cross product of other inputs .
newunioninput returns an input which is the union of other inputs .
newcroninput returns an input which will trigger based on a timed schedule .
newjobinput creates a pps .
newpipelineinput creates a new pps .
createjob creates and runs a job in pps .
inspectjob returns info about a specific job .
inspectjoboutputcommit returns info about a job that created a commit .
listjob returns info about all jobs .
listjobf returns info about all jobs .
flushjob calls f with all the jobs which were triggered by commits .
flushjoball returns all the jobs which were triggered by commits .
deletejob deletes a job .
stopjob stops a job .
restartdatum restarts a datum that s being processed as part of a job .
listdatum returns info about all datums in a jo .
listdatumf returns info about all datums in a job .
inspectdatum returns info about a single datu .
next retrieves the next relevant log message from pach .
err retrieves any errors encountered in the course of calling next ( ) .
getlogs gets logs from a job ( logs includes stdout and stderr ) .
createpipeline creates a new pipeline .
inspectpipeline returns info about a specific pipeline .
listpipeline returns info about all pipelines .
deletepipeline deletes a pipeline along with its output repo .
startpipeline restarts a stopped pipeline .
stoppipeline prevents a pipeline from processing things .
rerunpipeline reruns a pipeline over a given set of commits .
createpipelineservice creates a new pipeline service .
garbagecollect garbage collects unused data .
getdatumtotaltime sums the timing stats from a datuminf .
mount pfs to mountpoint .
newbufpool creates a new bufpool that returns buffers of the given size .
storagerootfromenv gets the storage root based on environment variables .
blockpathfromenv gets the path to an object storage block based on environment variables .
newgoogleclient creates a google client with the given bucket name .
newgoogleclientfromsecret creates a google client by reading credentials from a mounted googlesecret .
newgoogleclientfromenv creates a google client based on environment variables .
newmicrosoftclient creates a microsoft client \ tcontainer - azure blob container name \ taccountname - azure storage account name \ taccountkey - azure storage account ke .
newmicrosoftclientfromsecret creates a microsoft client by reading credentials from a mounted microsoftsecret .
newmicrosoftclientfromenv creates a microsoft client based on environment variables .
newminioclient creates an s3 compatible client with the following credentials endpoint - s3 compatible endpoint bucket - s3 bucket name id - aws access key id secret - aws secret access key secure - set to true if connection is secure .
newamazonclient creates an amazon client with the following credentials bucket - s3 bucket name distribution - cloudfront distribution id id - aws access key id secret - aws secret access key token - aws access token region - aws regio .
newminioclientfromsecret constructs an s3 compatible client by reading credentials from a mounted amazonsecret .
newminioclientfromenv creates a minio client based on environment variables .
newamazonclientfromsecret constructs an amazon client by reading credentials from a mounted amazonsecret .
newamazonclientfromenv creates a amazon client based on environment variables .
newclientfromurlandsecret constructs a client by parsing url and then constructing the correct client for that url using secrets .
parseurl parses an url into objectstoreurl .
newclientfromenv creates a client based on environment variables .
newexponentialbackoffconfig creates an exponential back - off config with longer wait times than the default .
close closes the readercloser contained in b .
close closes the writecloser contained in b .
isretryable determines if an operation should be retried given an erro .
runstdin runs the command with the given stdin and arguments .
runiodirpath runs the command with the given io and arguments in the given directory specified by dirpath .
logreq is like log .
logresp is like log .
activationstate returns none if auth is totally inactive .
retrieve the pps master token .
githubtokentousername takes a oauth access token issued by github and uses it discover the username of the user who obtained the code ( or verify that the code belongs to githubusername ) .
expiredclusteradmincheck enforces that if the cluster s enterprise token is expired .
getonetimepassword contains the implementation of getonetimepassword .
getscope is a helper function for the getscope grpc api .
setgroupsforuserinternal is a helper function used by setgroupsforuser .
getgroups is a helper function used primarily by the grpc api getgroups .
hashtoken converts a token to a cryptographic hash .
getauthtoken extracts the auth token embedded in ctx .
canonicalizesubjects applies canonicalizesubject to a lis .
canonicalizesubject establishes the type of subject by looking for one of pachyderm s subject prefixes .
canonicalizegithubusername corrects user for case errors by looking up the corresponding user s github profile and extracting their login id from that .
matches checks that a string matches a regular - expression .
oneofmatches checks whether one element of a slice matches a regular - expression .
equal checks equality of two values .
elementsequal checks that the elements of the slice " expecteds " are exactly the elements of the slice " actuals " .
oneofequals is a helper function for equaloneof .
equaloneof checks if a value is equal to one of the elements of a slice .
noneequals checks one element of a slice equals a value .
noerror checks for no error .
noerrorwithint checks that f finishes within time t and does not emit an erro .
noerrorwithintretry checks that f finishes within time t and does not emit an error .
yeserror checks for an error .
notnil checks a value is non - nil .
nil checks a value is nil .
false checks a value is false .
newstm intiates a new stm operation .
newdryrunstm intiates a new stm operation .
newstmrepeatable initiates new repeatable read transaction ; reads within the same transaction attempt to always return the same data .
newstmserializable initiates a new serialized transaction ; reads within the same transaction attempt to return data from the revision of the first read .
newstmreadcommitted initiates a new read committed transaction .
cmps guards the txn from updates to read se .
puts is the list of ops for all pending write .
commit always goes through when read committe .
fetchttl contains the essential implementation of ttl ( ) .
pipelines returns a collection of pipeline .
jobs returns a collection of job .
newticker returns a new ticker containing a channel that will send the time at times specified by the backoff argument .
customcheckretry is a fork of etcd s defaultcheckretry .
nodetomap translates the contents of a node into a map nodetomap can be called on the same map with successive results from watch to accumulate a value nodetomap returns true if out was modifie .
filldefaultresourcerequests sets any of opts .
serviceaccount returns a kubernetes service account for use with pachyderm .
clusterrole returns a clusterrole that should be bound to the pachyderm service account .
rolebinding returns a rolebinding that binds pachyderm s role to its serviceaccount .
getbackendsecretvolumeandmount returns a properly configured volume and volumemount object given a backend .
getsecretenvvars returns the environment variable specs for the storage secret .
pachdservice returns a pachd service .
githookservice returns a k8s service that exposes a public i .
etcdstorageclass creates a storage class used for dynamic volume provisioning .
etcdvolumeclaim creates a persistent volume claim of size gb .
etcdnodeportservice returns a nodeport etcd service .
etcdheadlessservice returns a headless etcd service .
dashdeployment creates a deployment for the pachyderm dashboard .
dashservice creates a service for the pachyderm dashboard .
miniosecret creates an amazon secret with the following parameters bucket - s3 bucket name id - s3 access key id secret - s3 secret access key endpoint - s3 compatible endpoint secure - set to true for a secure connection .
writesecret writes a json - encoded k8s secret to the given writer .
amazonsecret creates an amazon secret with the following parameters region - aws region bucket - s3 bucket name id - aws access key id secret - aws secret access key token - aws access token distribution - cloudfront distributio .
amazonvaultsecret creates an amazon secret with the following parameters region - aws region bucket - s3 bucket name vaultaddress - address / hostport of vault vaultrole - pachd s role in vault vaulttoken - pachd s vault token distribution - cloudfront distributio .
amazoniamrolesecret creates an amazon secret with the following parameters region - aws region bucket - s3 bucket name distribution - cloudfront distributio .
googlesecret creates a google secret with a bucket name .
microsoftsecret creates a microsoft secret with following parameters container - azure blob container id \ t - azure storage account name secret - azure storage account ke .
writedashboardassets writes the k8s config for deploying the pachyderm dashboard to encoder .
writetlssecret creates a new tls secret in the kubernetes manifest ( equivalent to one generate by kubectl create secret tls ) .
writelocalassets writes assets to a local backend .
writecustomassets writes assets to a custom combination of object - store and persistent disk .
writeamazonassets writes assets to an amazon backend .
writegoogleassets writes assets to a google backend .
writemicrosoftassets writes assets to a microsoft backen .
images returns a list of all the images that are used by a pachyderm deployment .
addregistry switches the registry that an image is targeting .
withcanonicalrandomizationfactor is a utility function used by all newxyzbackoff functions to clamp b .
new10sbackoff returns a backoff that s slightly more aggressive than newexponentialbackoff .
reset the interval back to the initial retry interval and restarts the timer .
nextbackoff calculates the next backoff interval using the formula \ trandomized interval = retryinterval + / - ( randomizationfactor * retryinterval ) .
getelapsedtime returns the elapsed time since an exponentialbackoff instance is created and is reset when reset ( ) is called .
increments the current interval by multiplying it with the multiplier .
returns a random value from the following interval \ t [ randomizationfactor * currentinterval .
factory is the function that the pachyderm vault plugin exports to let vault create / refresh / revoke pachyderm token .
newapiserver creates an apiserver .
newblockapiserver creates a blockapiserver using the credentials it finds in the environmen .
localstorage creates a local chunk storage instance .
deletejob is identical to updatejobstate .
writexml serializes a struct to a response as xm .
clean canonicalizes path for a pachyderm 1 .
newfromaddress constructs a new apiclient for the server at addr .
withmaxconcurrentstreams instructs the new * functions to create client that can have at most streams concurrent streams open with pachd at a tim .
withrootcas instructs the new * functions to create client that uses the given signed x509 certificates as the trusted root certificates ( instead of the system certs ) .
withadditionalrootcas instructs the new * functions to additionally trust the given base64 - encoded .
withdialtimeout instructs the new * functions to use t as the deadline to connect to pach .
withadditionalpachdcert instructs the new * functions to additionally trust the signed cert mounted in pachd s cert volume .
getusermachineaddrandopts is a helper for newonusermachine that uses environment variables .
newincluster constructs a new apiclient using env vars that kubernetes creates .
close the connection to grp .
deleteall deletes everything in the cluster .
setmaxconcurrentstreams sets the maximum number of concurrent streams the client can have .
defaultdialoptions is a helper returning a slice of grpc .
addmetadata adds necessary metadata ( including authentication credentials ) to the context ctx .
ctx is a convenience function that returns adds pachyderm authn metadata to context .
withctx returns a new apiclient that uses ctx for requests it sends .
newdlock attempts to acquire a distributed lock that locks a given prefix in the data store .
datumid computes the id for a datum .
logf logs the line sprintf ( formatstring .
hashdatum computes and returns the hash of datum + pipeline .
hashdatum15 computes and returns the hash of datum + pipeline for version <= 1 .
status returns the status of the current worker .
cancel cancels the currently running datu .
getchunk returns the merged datum hashtrees of a particular chunk ( if available ) .
cancelctxifjobfails watches jobid s jobptr .
mergestats merges y into .
mergechunk merges the datum hashtrees into a chunk hashtree and stores it .
lookupdockeruser looks up users given the argument to a dockerfile user directive .
iscommitnotfounderr returns true if err has an error message that matches errcommitnotfoun .
iscommitdeletederr returns true if err has an error message that matches errcommitdelete .
iscommitfinishederr returns true of err has an error message that matches errcommitfinishe .
isreponotfounderr returns true if err is an error message about a repo not being foun .
isbranchnotfounderr returns true if err is an error message about a branch not being foun .
isfilenotfounderr returns true if err is an error message about a pfs file not being foun .
version returns the version of pachd as a string .
validatereponame determines if a repo name is vali .
newdriver is used to create a new driver instanc .
checkisauthorized returns an error if the current user ( in pachclient ) has authorization scope s for repo r .
writefinishedcommit writes these changes to etcd 1 ) it closes the input commit ( i .
scratchcommitprefix returns an etcd prefix that s used to temporarily store the state of a file in an open commit .
scratchfileprefix returns an etcd prefix that s used to temporarily store the state of a file in an open commit .
headerdirtoputfilerecords is a helper for copyfile that handles copying header / footer directories .
gettreeforfile is like gettreeforcommit except that it can handle open commits .
this is a helper function to check if the given provenance has provenance on an input branc .
if full is false .
filehistory calls f with fileinfos for the file .
put the tree into the blob store only write the records to etcd if the commit does exist and is open .
readrow parses the pgdump file and populates the header and the footer it returns eof when done .
newreporter creates a new reporter and kicks off the loop to report cluster metric .
reportuseraction pushes the action into a queue for reporting .
helper method called by ( start | finish ) reportandflushuseraction .
finishreportandflushuseraction immediately reports the metric but does not block execution .
read reads from the byte stream produced by the set of datarefs .
unfortunately .
getstatecmd returns a cobra .
cmds returns pachctl commands related to pachyderm enterpris .
newconfiguration creates a generic configuration from a specific type of configuration .
repos returns a collection of repo .
putfilerecords returns a collection of putfilerecord .
commits returns a collection of commit .
branches returns a collection of branche .
opencommits returns a collection of open commit .
newdag creates a dag and populates it with the given nodes .
newnode adds a node to d .
sorted returns all nodes in a topologically sorted orde .
leaves returns a slice containing all leaves in d .
ancestors returns a slice containing all ancestors of a node .
descendants returns a slice containing all descendants of a node .
ghosts returns nodes that were referenced as parents but never created .
newportforwarder creates a new port forwarde .
runfordaemon creates a port forwarder for the pachd daemon .
runforsamlacs creates a port forwarder for saml acs .
runfordashui creates a port forwarder for the dash ui .
runfordashwebsocket creates a port forwarder for the dash websocket .
runfors3gateway creates a port forwarder for the s3gateway .
lock uses pidfiles to ensure that only one port forwarder is running across one or more pachctl instance .
close shuts down port forwarding .
unmarshal unmarshals the item in an event into a protobuf message .
unmarshalprev unmarshals the prev item in an event into a protobuf message .
makewatcher returns a watcher that uses the given event channel and done channel internally to deliver events and signal closure .
checktype checks to make sure val has the same type as template .
newpool creates a new connection pool with connections to pods in the given service .
do allows you to do something with a grpc .
close closes all connections stored in the pool .
buildimage builds a new docker image .
pushimage pushes a docker image .
creates a new minioclient structure and return .
creates a new minioclient s3v2 structure and return .
creates a new minio writer and a go routine to upload objects to minio serve .
this will block till upload is don .
pipelinerepo creates a pfs repo for a given pipeline .
pipelinercname generates the name of the k8s replication controller that manages a pipeline s worker .
getrequestsresourcelistfrompipeline returns a list of resources that the pipeline .
getlimitsresourcelistfrompipeline returns a list of resources that the pipeline .
getnumnodes attempts to retrieve the number of nodes in the current k8s cluste .
getexpectednumworkers computes the expected number of workers that pachyderm will start given the parallelismspec spec .
getexpectednumhashtrees computes the expected number of hashtrees that pachyderm will create given the hashtreespec spec .
getpipelineinfo retrieves and returns a valid pipelineinfo from pfs .
failpipeline updates the pipeline s state to failed and sets the failure reaso .
jobinput fills in the commits for a jobinf .
pipelinereqfrominfo converts a pipelineinfo into a createpipelinerequest .
newpipelinemanifestreader creates a new manifest reader from a path .
nextcreatepipelinerequest gets the next request from the manifest reader .
describesyntaxerror describes a syntax error encountered parsing json .
isterminal returns true if state indicates that the job is done ( i .
updatejobstate performs the operations involved with a job state transition .
fetchrawidpmetadata is a helper of validateconfig .
updateconfig validates config .
new returns a new uuid .
prettyprintcode renders h as " < error code > < description > " .
newstorage creates a new storage .
newreader creates an io .
newwriter creates an io .
deleteall deletes all of the chunks in object storage .
chunk splits a piece of data up .
chunkreader splits a reader into reasonably sized chunks for the purpose of transmitting the chunks over grpc .
newstreamingbytesreader returns an io .
writetostreamingbytesserver writes the data from the io .
writefromstreamingbytesclient writes from the streamingbytesclient to the io .
newapiserver creates an apiserver .
newsidecarapiserver creates an apiserver that has limited functionalities and is meant to be run as a worker sidecar .
newenterpriseserver returns an implementation of ec .
getstate returns the current state of the cluster s pachyderm enterprise key ( active .
deactivate deletes the current cluster s enterprise token .
command returns the cmd struct to execute the named program with the given arguments .
commandcontext is like command but includes a context .
run starts the specified command and waits for it to complete .
lookextensions finds windows executable by its dir and path .
wait waits for the command to exit and waits for any copying to stdin or copying from stdout or stderr to complete .
waitio is a helper function and the reason we forked this package from stdlib .
output runs the command and returns its standard output .
combinedoutput runs the command and returns its combined standard output and standard error .
stdinpipe returns a pipe that will be connected to the command s standard input when the command starts .
safeclose closes c being careful not to race with any calls to c .
stdoutpipe returns a pipe that will be connected to the command s standard output when the command starts .
dedupenvcase is dedupenv with a case option for testing .
visitinput visits each input recursively in ascending order ( root last ) .
inputname computes the name of an input .
sortinput sorts an input .
inputbranches returns the branches in an input .
validategitcloneurl returns an error if the provided url is invali .
containsempty is a helper function used for validation ( particularly for validating that creds arguments aren t empt .
main runs the common functionality needed in a go main function .
newapiserver returns a new admin .
unescapehtml returns s with < and > unescaped .
ago pretty - prints the amount of time that has passed since timestamp as a human - readable string .
timedifference pretty - prints the duration of time between from and to as a human - reabable string .
duration pretty prints a duration in a human readable way .
inspectcluster retrieves cluster stat .
extract all cluster state .
extractall cluster state as a slice of operations .
extractwriter extracts all cluster state and marshals it to w .
extracturl extracts all cluster state and marshalls it to object storage .
extractpipeline extracts a single pipeline .
restore cluster state from an extract series of operations .
restorereader restores cluster state from a reader containing marshaled ops .
restorefrom restores state from another cluster which can be access through otherc .
restoreurl restures cluster state from object storage .
/ * \ tparses a new evaluableexpression from the given [ expression ] string .
/ * \ tsimilar to [ newevaluableexpression ] .
/ * \ tsimilar to [ newevaluableexpression ] .
/ * \ tsame as eval .
/ * \ truns the entire expression using the given [ parameters ] .
/ * \ treturns an array representing the variables contained in this evaluableexpression .
/ * \ treturns true if this operator is contained by the given array of candidate symbols .
/ * \ tgenerally used when formatting type check errors .
/ * \ treturns a string representing this expression as if it were written in sql .
/ * \ tgettokenkindstring returns a string that describes the given tokenkind .
/ * \ treturns the string that was read until the given [ condition ] was false .
/ * \ tchecks to see if any optimizations can be performed on the given [ tokens ] .
/ * \ tchecks the balance of tokens which have multiple parts .
/ * \ tattempts to parse the [ candidate ] as a time .
/ * \ tgiven a planner .
/ * \ tcreates a evaluationstagelist object which represents an execution plan ( or tree ) \ twhich is used to completely evaluate a set of tokens at evaluation - time .
/ * \ tthe most usual method of parsing an evaluation stage for a given precedence .
/ * \ ta special case where functions need to be of higher precedence than values .
/ * \ ta truly special precedence function .
/ * \ tmaps a given [ symbol ] to a set of typechecks to be used during runtime .
/ * \ tduring stage planning .
/ * \ tperforms a " mirror " on a subtree of stages .
/ * \ trecurses through all operators in the entire tree .
/ * \ telides a specific stage .
/ * \ taddition usually means between numbers .
/ * \ tcomparison can either be between numbers .
ignorefields returns an option that ignores exported fields of the given names on a single struct type .
ignoretypes returns an option that ignores all values assignable to certain types .
ignoreinterfaces returns an option that ignores all values or references of values assignable to certain interface types .
ignoreunexported returns an option that only ignores the immediate unexported fields of a struct .
ignoresliceelements returns an option that ignores elements of [ ] v .
ignoremapentries returns an option that ignores entries of map [ k ] v .
appendellipsis appends a new ellipsis node to the list if none already exists at the end .
string prints a humanly - readable summary of coalesced records .
istype reports whether the reflect .
nameof returns the name of the function value .
pointerof returns a pointer from v .
sortslices returns a transformer option that sorts all [ ] v .
sortmaps returns a transformer option that flattens map [ k ] v types to be a sorted [ ] structk .
string returns a human - readable string representing the edit - script where identity .
stats returns a histogram of the number of each type of edit operation .
connect appends any necessary identity .
equateapprox returns a comparer option that determines float32 or float64 values to be equal if they are within a relative fraction or absolute margin .
equatenans returns a comparer option that determines float32 and float64 nan values to be equal .
index returns the ith step in the path and supports negative indexing .
string returns the simplified path to a node .
gostring returns the path to a specific node using go syntax .
key is the index key ; it may return - 1 if in a split stat .
string provides a full report of the differences detected as a structured literal in pseudo - go syntax .
formattype prints the type as if it were wrapping s .
formatmapkey formats v as if it were a map key .
formatstring prints s as a double - quoted or backtick - quoted string .
formathex prints u as a hexadecimal integer in go notation .
formatpointer prints the address of the pointer .
visit inserts pointer v into the visited map and reports whether it had already been visited before .
acyclictransformer returns a transformer with a filter applied that ensures that the transformer cannot be recursively applied upon its own output .
retrieveunexportedfield uses unsafe to forcibly retrieve any field from a struct such that the value has read - write permissions .
filterfield returns a new option where opt is only evaluated on paths that include a specific exported field on a single struct type .
insert inserts a sequence of field accesses into the tree .
matchprefix reports whether any selector in the fieldtree matches the start of path p .
canonicalname returns a list of identifiers where any struct field access through an embedded field is expanded to include the names of the embedded types themselves .
filterpath returns a new option where opt is only evaluated if filter f returns true for the current path in the value tree .
filtervalues returns a new option where opt is only evaluated if filter f .
transformer returns an option that applies a transformation function that converts values of a certain type into that of another .
comparer returns an option that determines whether two values are equal to each other .
allowunexported returns an option that forcibly allows operations on unexported fields in certain structs .
reporter is an option that can be passed to equal .
normalizeoption normalizes the input options such that all options groups are flattened and groups with a single element are reduced to that element .
flattenoptions copies all options in src to dst as a flat list .
canformatdiffslice reports whether we support custom formatting for nodes that are slices of primitive kinds or strings .
formatascii formats s as an ascii string .
coalesceadjacentedits coalesces the list of edits into groups of adjacent equal or unequal counts .
coalesceinterveningidentical coalesces sufficiently short ( <= windowsize ) equal groups into adjacent unequal groups that currently result in a dual inserted / removed printout .
sortkeys sorts a list of map keys .
coalesceadjacentrecords coalesces the list of records into groups of adjacent equal .
diff returns a human - readable report of the differences between two values .
statelesscompare compares two values and returns the result .
sanitizevalue converts nil interfaces of type t to those of type r .
check scans the path for any recursive transformers and panics when any recursive transformers are detected .
makeaddressable returns a value that is always addressable .
string adds a string - valued keyvalue pair to a span .
bool adds a bool - valued keyvalue pair to a span .
int adds an int - valued keyvalue pair to a span .
int32 adds an int32 - valued keyvalue pair to a span .
int64 adds an int64 - valued keyvalue pair to a span .
uint32 adds a uint32 - valued keyvalue pair to a span .
uint64 adds a uint64 - valued keyvalue pair to a span .
float32 adds a float32 - valued keyvalue pair to a span .
float64 adds a float64 - valued keyvalue pair to a span .
error adds an error with the key " error " to a span .
object adds an object - valued keyvalue pair to a span .
marshal passes a field instance through to the appropriate field - type - specific method of an encoder .
value returns the field s value as interface .
string returns a string representation of the key and value .
apply satisfies the startspanoption interface .
apply satisfies the startspanoption interface .
apply satisfies the startspanoption interface .
apply satisfies the startspanoption interface .
set applies the tag to an existing span .
inject implements the injector interfac .
extract implements the extractor interfac .
tologrecord converts a deprecated logdata to a non - deprecated logrecor .
new returns a mocktracer opentracing .
finishedspans returns all spans that have been finish ( ) ed since the mocktracer was constructed or since the last call to its reset ( ) method .
reset clears the internally accumulated finished spans .
startspan belongs to the tracer interface .
registerinjector registers injector for given forma .
registerextractor registers extractor for given forma .
inject belongs to the tracer interface .
extract belongs to the tracer interface .
contextwithspan returns a new context .
spanfromcontext returns the span previously associated with ctx .
startspanfromcontext starts and returns a span with operationname .
set adds a string tag to the span .
set adds a string tag to the span .
set adds a uint32 tag to the span .
set adds a uint16 tag to the span .
add adds a bool tag to the span .
setstring records ip v4 host address of the peer as a .
startspan defers to tracer .
foreachkey conforms to the textmapreader interface .
emitstring belongs to the log .
emitlazylogger belongs to the log .
runapichecks runs a test suite to check a tracer against the opentracing api .
checkbaggagevalues returns an option that sets whether to check for propagation of baggage values .
checkextract returns an option that sets whether to check if extracting contexts from carriers works .
checkinject returns an option that sets whether to check if injecting contexts works .
checkeverything returns an option that enables all api checks .
useprobe returns an option that specifies an apicheckprobe implementation to use .
withbaggageitem creates a new context with an extra baggage item .
tags returns a copy of tags accumulated by the span so fa .
tag returns a single ta .
logs returns a copy of logs accumulated in the span so fa .
context belongs to the span interfac .
settag belongs to the span interfac .
setbaggageitem belongs to the span interfac .
baggageitem belongs to the span interfac .
finish belongs to the span interfac .
finishwithoptions belongs to the span interfac .
string allows printing span for debuggin .
logfields belongs to the span interfac .
the caller must not hold s .
logkv belongs to the span interface .
logevent belongs to the span interfac .
logeventwithpayload belongs to the span interfac .
setoperationname belongs to the span interfac .
newopenshiftclientconfigloadingrules is a modified copy of openshift / origin / pkg / cmd / cli / config .
clientconfig is a modified copy of k8s .
clientconfig is a modified copy of k8s .
getserveridentificationpartialconfig is a modified copy of k8s .
getuseridentificationpartialconfig is a modified copy of k8s .
canidentifyuser is a modified copy of k8s .
confirmusable is a modified copy of k8s .
getcontext is a modified copy of k8s .
validateclusterinfo is a modified copy of k8s .
getauthinfo is a modified copy of k8s .
getcluster is a modified copy of k8s .
newaggregate is a modified copy of k8s .
load is a modified copy of k8s .
loadfromfile is a modified copy of k8s .
load is a modified copy of k8s .
resolvelocalpaths is a modified copy of k8s .
resolvepaths is a modified copy of k8s .
restclientfor is a modified copy of k8s .
defaultserverurl is a modified copy of k8s .
defaultserverurlfor is a modified copy of k8s .
isconfigtransporttls is a modified copy of k8s .
newproxierwithnoproxycidr is a modified copy of k8s .
tlscacheget is a modified copy of k8s .
loadtlsfiles is a modified copy of k8s .
hasca is a modified copy of k8s .
hascertauth is a modified copy of k8s .
clientcmdnewconfig is a modified copy of k8s .
newimagesource returns a types .
manifestschema2fromcomponents builds a new manifestschema2 from the supplied dat .
ociconfig returns the image configuration as per oci v1 image - spec .
configblob returns the blob described by configinfo .
inspect returns various information for ( skopeo inspect ) parsed from the manifest and configuration .
updatedimage returns a types .
registriesdirpath returns a path to registries .
loadandmergeconfig loads configuration files in dirpat .
signaturestorageurl returns an url usable for acessing signature index in base with known manifestdigest .
parsereference converts a string .
validatepolicyconfigurationscope checks that scope is a valid name for a signature .
parsereference converts a string .
newreference returns an openshift reference for a reference .
newimage returns a types .
this is cloned from docker / go - connections because upstream docker has changed it and make deps here fails otherwise .
dockercertdir returns a path to a directory to be consumed by tlsclientconfig .
detectproperties detects various properties of the registry .
getextensionssignatures returns signatures from the x - registry - supports - signatures api extension .
newtransport creates a default transpor .
normalizeregistries removes trailing slashes from registries .
reads the global registry file from the filesystem .
loads the registry configuration file from the filesystem and then unmarshals it .
getregistries returns an array of strings that contain the names of the registries as defined in the system - wide registries file .
getinsecureregistries returns an array of strings that contain the names of the insecure registries as defined in the system - wide registries file .
registriesconfpath is the path to the system - wide registry configuration fil .
newoptionalbool converts the input bool into either optionalbooltrue or optionalboolfalse .
changecontextstate changes pc .
newpolicycontext sets up and initializes a context for the specified policy .
destroy should be called when the user of the context is done with it .
policyidentitylogname returns a string description of the image identity for policy purposes .
requirementsforimageref selects the appropriate requirements for ref .
isrunningimageallowed returns true iff the policy allows running the image .
parseimagename converts a url - like image name to a types .
blobinfofromoci1descriptor returns a types .
oci1frommanifest creates an oci1 manifest instance from a manifest blob .
oci1fromcomponents creates an oci1 manifest instance from the supplied data .
layerinfos returns a list of layerinfos of layers referenced by this image .
updatelayerinfos replaces the original layers with the specified blobinfos ( size+digest+urls ) .
inspect returns various information for ( skopeo inspect ) parsed from the manifest and configuration .
imageid computes an id which can uniquely identify this image by its contents .
parsereference converts a string .
parsereference converts a string .
newreference returns a dockerreference for a named reference .
policyconfigurationidentity returns a string representation of the reference .
newimage returns a types .
deleteimage deletes the named image from the registry .
tagordigest returns a tag or digest from the reference .
newdigestingreader returns an io .
printf writes a formatted string to c .
updateembeddeddockerreference handles the docker reference embedded in docker schema1 manifests .
istty returns true if the io .
layerdigestsdiffer return true iff the digests in a and b differ ( ignoring sizes and possible other fields ) .
copyupdatedconfigandmanifest updates the image per ic .
newprogresspool creates a * mpb .
createprogressbar creates a mpb .
copyconfig copies config .
diffidcomputationgoroutine reads all input from layerstream .
computediffid reads all input from layerstream .
compressgoroutine reads all input from src and writes its compressed equivalent to dest .
newdockerclient initializes a new api client based on the passed systemcontext .
defaultpolicypath returns a path to the default policy of the system .
newpolicyfromfile returns a policy configured in the specified file .
newpolicyfrombytes returns a policy parsed from the specified blob .
unmarshaljson implements the json .
unmarshaljson implements the json .
unmarshaljson implements the json .
unmarshaljson implements the json .
newpolicyrequirementfromjson parses json data into a policyrequirement implementation .
unmarshaljson implements the json .
unmarshaljson implements the json .
newprsignedby returns a new prsignedby if parameters are valid .
newprsignedbykeypath is newprsignedbykeypath .
newprsignedbykeypath returns a new " signedby " policyrequirement using a keypat .
newprsignedbykeydata is newprsignedbykeydata .
newprsignedbykeydata returns a new " signedby " policyrequirement using a keydat .
unmarshaljson implements the json .
isvalid returns true iff kt is a recognized valu .
unmarshaljson implements the json .
newprsignedbaselayer is newprsignedbaselayer .
unmarshaljson implements the json .
newpolicyreferencematchfromjson parses json data into a policyreferencematch implementation .
unmarshaljson implements the json .
unmarshaljson implements the json .
unmarshaljson implements the json .
newprmexactreference is newprmexactreference .
unmarshaljson implements the json .
newprmexactrepository is newprmexactrepository .
unmarshaljson implements the json .
newimagesource sets up an image for reading .
getmanifest ( ) reads the image s manifest .
getsignatures ( ) parses the image s signatures blob into a slice of byte slices .
newimagedestination sets us up to write a new image .
computeid computes a recommended image id based on information we have so far .
getconfigblob exists only to let us retrieve the configuration blob so that the manifest package can dig information out of it for inspect ( ) .
putmanifest writes the manifest to the destination .
putsignatures records the image s signatures for committing as a single data blob .
getsize ( ) adds up the sizes of the image s data blobs ( which includes the configuration blob ) .
newimage creates an image that also knows its siz .
newimagesource returns a types .
candidatelocations returns a prioritized .
newgpgsigningmechanismindirectory returns a new gpg / openpgp signing mechanism .
newephemeralgpgsigningmechanism returns a new gpg / openpgp signing mechanism which recognizes only public keys from the supplied blob .
importkeysfrombytes imports public keys from the supplied blob and returns their identities .
sign creates a ( non - detached ) signature of input using keyidentity .
verify parses unverifiedsignature and returns the content and the signer s identit .
untrustedsignaturecontents returns untrusted contents of the signature without any verification .
newimagesource returns an imagesource for reading from an existing directory .
loadmanifestdescriptor loads the manifes .
close removes resources associated with an initialized imagesource .
getmanifest returns the image s manifest along with its mime type ( which may be empty when it can t be determined but the manifest is available ) .
getsignatures returns the image s signatures .
append adds s to the end of os .
ismultiimage returns true if img is a list of image .
lockpath obtains the pathlock for path .
unlockpath releases the pathlock for path .
view returns runs the specified fn within a read - only transaction on the database .
update returns runs the specified fn within a read - write transaction on the database .
uncompresseddigest implements blobinfocache .
uncompresseddigest returns an uncompressed digest corresponding to anydigest .
recorddigestuncompressedpair records that the uncompressed version of anydigest is uncompressed .
recordknownlocation records that a blob with the specified digest exists within the specified ( transport .
appendreplacementcandiates creates prioritize .
temporarydirectoryforbigfiles returns a directory for temporary ( big ) files .
gpguntrustedsignaturecontents returns untrusted contents of the signature without any verification .
newimagedestination returns an imagedestination for writing to an existing directory .
tryreusingblob checks whether the transport already contains .
putmanifest writes manifest to the destination .
commit marks the process of storing the image as successful and asks for the image to be persisted .
indexexists checks whether the index location specified in the oci reference exists .
createsignature creates a new signature of manifest using keyidentity .
manifestinstancefromblob returns a genericmanifest implementation for ( manblob .
manifestlayerinfostoblobinfos extracts a [ ] types .
commit marks the process of storing the image as successful and asks for the image to be persisted .
parsereference converts a string .
parsereference converts a string .
newreference returns an oci reference for a directory and a image .
stringwithintransport returns a string representation of the reference .
policyconfigurationnamespaces returns a list of other policy configuration namespaces to search for if explicit configuration for policyconfigurationidentity ( ) is not set .
newimage returns a types .
getindex returns a pointer to the index references by this ocireference .
loadmanifestdescriptor loads the manifest descriptor to be used to retrieve the image name when pulling an imag .
blobpath returns a path for a blob within a directory using oci image - layout conventions .
signdockermanifest returns a signature for manifest as the specified dockerreference .
verifydockermanifestsignature checks that unverifiedsignature uses expectedkeyidentity to sign unverifiedmanifest as expecteddockerreference .
newopenshiftclient creates a new openshiftclient for the specified reference .
getimage loads the specified image object .
convertdockerimagereference takes an image api dockerimagereference value and returns a reference we can actually use ; currently openshift stores the cluster - internal service ips here .
newimagesource creates a new imagesource for the specified reference .
close removes resources associated with an initialized imagesource .
getmanifest returns the image s manifest along with its mime type ( which may be empty when it can t be determined but the manifest is available ) .
getsignatures returns the image s signatures .
ensureimageisresolved sets up s .
newimagedestination creates a new imagedestination for the specified reference .
tryreusingblob checks whether the transport already contains .
putmanifest writes manifest to the destination .
commit marks the process of storing the image as successful and asks for the image to be persisted .
newuntrustedsignature returns an untrustedsignature object with the specified primary contents and appropriate metadata .
marshaljson implements the json .
unmarshaljson implements the json .
verifyandextractsignature verifies that unverifiedsignature has been signed .
getuntrustedsignatureinformationwithoutverifying extracts information available in an untrusted signature .
parsereference converts a string .
validatepolicyconfigurationscope checks that scope is a valid name for a signature .
parsereference converts a string .
newreference returns a docker - daemon reference for either the supplied image id ( config digest ) or the supplied reference ( which must satisfy ! reference .
stringwithintransport returns a string representation of the reference .
policyconfigurationidentity returns a string representation of the reference .
policyconfigurationnamespaces returns a list of other policy configuration namespaces to search for if explicit configuration for policyconfigurationidentity ( ) is not set .
rewritereference will substitute the provided reference prefix to the endpoints location from the ref and creates a new named reference from it .
getv1registries transforms v1 registries in the config into an array of v2 registries of type registry .
postprocessregistries checks the consistency of all registries ( e .
getconfigpath returns the system - registries config path if specified .
getregistries loads and returns the registries specified in the config .
findunqualifiedsearchregistries returns all registries that are configured for unqualified image search ( i .
reads the global registry file from the filesystem .
loads the registry configuration file from the filesystem and then unmarshals it .
parsereference converts a string .
fromsource returns a types .
fromunparsedimage returns a types .
manifest overrides the unparsedimage .
configupdate updates the image s default configuration and adds annotations which will be visible in source images created using this reference .
newimage returns a types .
newimagesource returns an imagesource for reading from an existing directory .
getmanifest returns the image s manifest along with its mime type ( which may be empty when it can t be determined but the manifest is available ) .
getsignatures returns the image s signatures .
manifestoci1fromcomponents builds a new manifestoci1 from the supplied dat .
ociconfig returns the image configuration as per oci v1 image - spec .
updatedimage returns a types .
parseimageanddockerreference converts an image and a reference string into two parsed entities .
parsedockerreferences converts two reference strings into parsed entities .
imagename converts a types .
listnames returns a list of non deprecated transport names .
validatepolicyconfigurationscope checks that scope is a valid name for a signature .
newreference returns an ostree reference for a specified repo and image .
stringwithintransport returns a string representation of the reference .
policyconfigurationnamespaces returns a list of other policy configuration namespaces to search for if explicit configuration for policyconfigurationidentity ( ) is not set .
newimage returns a types .
newimagesource returns a types .
newimagedestination returns a types .
signaturepath returns a path for a signature within a ostree using our conventions .
paranoidunmarshaljsonobject unmarshals data as a json object .
paranoidunmarshaljsonobject unmarshals data as a json object .
validateimagename returns nil if the image name is empty or matches the open - containers image name specs .
splitpathandimage tries to split the provided oci reference into the oci path and image .
validateocipath takes the oci path and validates it .
validatescope validates a policy configuration scope for an oci transport .
blobinfofromschema2descriptor returns a types .
schema2frommanifest creates a schema2 manifest instance from a manifest blob .
schema2fromcomponents creates an schema2 manifest instance from the supplied data .
layerinfos returns a list of layerinfos of layers referenced by this image .
updatelayerinfos replaces the original layers with the specified blobinfos ( size+digest+urls ) .
inspect returns various information for ( skopeo inspect ) parsed from the manifest and configuration .
imageid computes an id which can uniquely identify this image by its contents .
setauthentication stores the username and password in the auth .
getauthentication returns the registry credentials stored in either auth .
removeauthentication deletes the credentials stored in auth .
removeallauthentication deletes all the credentials stored in auth .
getpath gets the path of the auth .
readjsonfile unmarshals the authentications stored in the auth .
modifyjson writes to auth .
findauthentication looks for auth of registry in pat .
getmanifest returns the image s manifest along with its mime type ( which may be empty when it can t be determined but the manifest is available ) .
getsignatures returns the image s signatures .
layerinfosforcopy ( ) returns updated layer info that should be used when reading .
newdestination returns a tarfile .
addrepotags adds the specified tags to the destination s repotags .
tryreusingblob checks whether the transport already contains .
putmanifest writes manifest to the destination .
sendsymlink sends a symlink into the tar stream .
sendbytes sends a path into the tar stream .
sendfile sends a file into the tar stream .
putsignatures adds the given signatures to the docker tarfile ( currently not supported ) .
commit finishes writing data to the underlying io .
imagematchesrepo returns true iff image .
return a transport object that defaults to using the same store that we used to build this reference object .
return a name with a tag .
also accept policy that s tied to the combination of the graph root and driver name .
newimage returns a types .
dockerreferenceidentity returns a string representation of the reference .
dockerreferencenamespaces returns a list of other policy configuration namespaces to search .
gzipdecompressor is a decompressorfunc for the gzip compression algorithm .
bzip2decompressor is a decompressorfunc for the bzip2 compression algorithm .
xzdecompressor is a decompressorfunc for the xz compression algorithm .
detectcompression returns a decompressorfunc if the input is recognized as a compressed format .
autodecompress takes a stream and returns an uncompressed version of the same stream .
newimagedestination creates a new imagedestination for the specified image reference .
supportssignatures returns an error ( to be displayed to the user ) if the destination certainly can t store signatures .
blobexists returns true iff repo contains a blob with digest .
putmanifest writes manifest to the destination .
ismanifestinvaliderror returns true iff err from client .
putsignaturestolookaside implements putsignatures ( ) from the lookaside location configured in s .
putonesignature stores one signature to url .
deleteonesignature deletes a signature from url .
bictransportscope returns a bictransportscope appropriate for ref .
newbiclocationreference returns a biclocationreference appropriate for ref .
parsebiclocationreference returns a repository for encoded lr .
todo we could add support for multiple images in a single archive .
newsourcefromstream returns a tarfile .
opentarcomponent returns a readcloser for the specific file within the archive .
findtarcomponent returns a header and a reader matching path within inputfile .
readtarcomponent returns full contents of componentpath .
ensurecacheddataispresent loads data necessary for any of the public accessors .
loadtarmanifest loads and decodes the manifest .
close removes resources associated with an initialized source .
getmanifest returns the image s manifest along with its mime type ( which may be empty when it can t be determined but the manifest is available ) .
getsignatures returns the image s signatures .
newimagedestination returns a types .
imageloadgoroutine accepts tar stream on reader .
close removes resources associated with an initialized imagedestination .
commit marks the process of storing the image as successful and asks for the image to be persisted .
parsereference converts a string .
newreference returns an oci reference for a file and a image .
stringwithintransport returns a string representation of the reference .
policyconfigurationnamespaces returns a list of other policy configuration namespaces to search for if explicit configuration for policyconfigurationidentity ( ) is not se .
deleteimage deletes the named image from the registry .
createociref creates the oci reference of the imag .
creates the temporary directory and copies the tarred content to i .
destructivelyprioritizereplacementcandidateswithmax is destructivelyprioritizereplacementcandidates with a parameter for the number of entries to limit .
destructivelyprioritizereplacementcandidates consumes and destroys an array of possible replacement candidates with their last known existence times .
newimagedestination returns an imagedestination for writing to an existing ostree .
close removes resources associated with an initialized imagedestination .
putblob writes contents of stream and returns data representing the result .
tryreusingblob checks whether the transport already contains .
putmanifest writes manifest to the destination .
resolvepathtofullyexplicit returns the input path converted to an absolute .
resolveexistingpathtofullyexplicit is the same as resolvepathtofullyexplicit .
putmanifest writes manifest to the destination .
returns true if directory is empt .
deletes the contents of a director .
newimage returns a new image interface type after setting up a client to the registry hosting the given image .
getrepositorytags list all tags available in the repository .
blobinfocachedir returns a path to a blob info cache appropripate for sys and euid .
defaultcache returns the default blobinfocache implementation appropriate for sys .
parsereference converts a string .
parsereference converts a string .
stringwithintransport returns a string representation of the reference .
newimage returns a types .
newimagesource returns a types .
newimagedestination returns a types .
deleteimage deletes the named image from the registry .
new returns a blobinfocache implementation which is in - memory only .
uncompresseddigest returns an uncompressed digest corresponding to anydigest .
uncompresseddigestlocked implements types .
recorddigestuncompressedpair records that the uncompressed version of anydigest is uncompressed .
recordknownlocation records that a blob with the specified digest exists within the specified ( transport .
appendreplacementcandiates creates prioritize .
candidatelocations returns a prioritized .
unparsedinstance returns a types .
manifest is like imagesource .
expectedmanifestdigest returns a the expected value of the manifest digest .
signatures is like imagesource .
newgpgsigningmechanismindirectory returns a new gpg / openpgp signing mechanism .
newephemeralgpgsigningmechanism returns a new gpg / openpgp signing mechanism which recognizes only public keys from the supplied blob .
newgpgmecontext returns a new * gpgme .
importkeysfrombytes imports public keys from the supplied blob and returns their identities .
sign creates a ( non - detached ) signature of input using keyidentity .
verify parses unverifiedsignature and returns the content and the signer s identit .
newimagedestination returns an imagedestination for writing to an existing directory .
close removes resources associated with an initialized imagedestination .
supportssignatures returns an error ( to be displayed to the user ) if the destination certainly can t store signature .
putblob writes contents of stream and returns data representing the result .
tryreusingblob checks whether the transport already contains .
putmanifest writes manifest to the destinatio .
commit marks the process of storing the image as successful and asks for the image to be persisted after the directory is made .
tar converts the directory at src and saves it to ds .
choosedigestfrommanifestlist parses blob as a schema2 manifest list .
choosemanifestinstancefrommanifestlist returns a digest of a manifest appropriate for the current system from the manifest available from src .
getmanifest returns the image s manifest along with its mime type ( which may be empty when it can t be determined but the manifest is available ) .
getsignatures returns the image s signatures .
layerinfosforcopy ( ) returns updated layer info that should be used when copying .
manifestschema1fromcomponents builds a new manifestschema1 from the supplied data .
ociconfig returns the image configuration as per oci v1 image - spec .
embeddeddockerreferenceconflicts whether a docker reference embedded in the manifest .
inspect returns various information for ( skopeo inspect ) parsed from the manifest and configuration .
updatedimageneedslayerdiffids returns true iff updatedimage ( options ) needs informationonly .
updatedimage returns a types .
newimagesource creates a new imagesource for the specified image reference ref .
getmanifest returns the image s manifest along with its mime type ( which may be empty when it can t be determined but the manifest is available ) .
ensuremanifestisloaded sets s .
getsignatures returns the image s signatures .
manifestdigest returns a digest of the manifest .
getsignaturesfromlookaside implements getsignatures ( ) from the lookaside location configured in s .
getonesignature downloads one signature from url .
getsignaturesfromapiextension implements getsignatures ( ) using the x - registry - supports - signatures api extension .
manifest is like imagesource .
signatures is like imagesource .
layerinfosforcopy returns an updated set of layer blob information which may not match the manifest .
schema1frommanifest creates a schema1 manifest instance from a manifest blob .
schema1fromcomponents creates an schema1 manifest instance from the supplied data .
initialize initializes extractedv1compatibility and verifies invariants .
layerinfos returns a list of layerinfos of layers referenced by this image .
updatelayerinfos replaces the original layers with the specified blobinfos ( size+digest+urls ) .
serialize returns the manifest in a blob format .
inspect returns various information for ( skopeo inspect ) parsed from the manifest and configuration .
imageid computes an id which can uniquely identify this image by its contents .
guessmimetype guesses mime type of a manifest and returns it if it is recognized .
digest returns the a digest of a docker manifest .
matchesdigest returns true iff the manifest matches expecteddigest .
adddummyv2s1signature adds an jws signature with a temporary key ( i .
normalizedmimetype returns the effective mime type of a manifest mime type returned by a server .
fromblob returns a manifest instance for the specified manifest blob and the corresponding mime typ .
layerinfostostrings converts a list of layer infos .
parsereference converts a string .
validatepolicyconfigurationscope checks that scope is a valid name for a signature .
there is no directory .
policyconfigurationnamespaces returns a list of other policy configuration namespaces to search for if explicit configuration for policyconfigurationidentity ( ) is not set .
newimage returns a types .
newimagesource returns a types .
newimagedestination returns a types .
layerpath returns a path for a layer tarball within a directory using our conventions .
signaturepath returns a path for a signature within a directory using our conventions .
newimagesource returns an imagesource for reading from an existing directory .
close removes resources associated with an initialized imagesource .
getmanifest returns the image s manifest along with its mime type ( which may be empty when it can t be determined but the manifest is available ) .
layerinfosforcopy ( ) returns the list of layer blobs that make up the root filesystem of the image .
new creates a new pool of workers that starts with n workers .
newfunc creates a new pool of workers where each worker will process using the provided func .
processtimed will use the pool to process a payload and synchronously return the result .
setsize changes the total number of workers in the pool .
getsize returns the current size of the pool .
getperspectivetransform calculates a perspective transform from four pairs of the corresponding points .
warpperspective applies a perspective transformation to an image .
/ * returns a seq of countours in an image .
cvdrawcontours ( cvarr * img .
cvseq * cvapproxpoly ( const void * src seq .
cvarclength ( const void * curve .
double cvcontourarea ( const cvarr * contour .
/ * points can be either cvseq * or cvmat * * / .
finds a rotated rectangle of the minimum area enclosing the input 2d point set points can be either cvseq * or cvmat * .
calculates up - right bounding rectangle of point set points can be either cvseq * or cvmat * .
/ * kmeans finds centers of k clusters in data and groups input samples around the clusters .
/ * decodeimagemem decodes an image from an in memory byte buffer .
/ * fromimage converts a go image .
/ * fromimageunsafe create an opencv .
/ * toimage converts a opencv .
convert mat .
convert * mat64 .
returns the top - left point of the rectangl .
returns the bottom - right point of the rectangl .
returns a new cvpoin .
returns a new cvpoin .
returns a cvbox2 .
finds box vertice .
/ * equivalent to the c constant cv whole seq * / .
/ * val returns an array with the scalars values .
/ * wait for key event infinitely ( delay <=0 ) or for " delay " milliseconds * / .
/ * create window * / .
/ * set and get property of the window * / .
/ * display image within window ( highgui windows remember their content ) * / .
/ * resize / move window * / .
/ * get native window handle ( hwnd in case of win32 and widget in case of x window ) * / .
export gotrackbarcallbac .
/ * retrieve or set trackbar position * / .
/ * assign callback for mouse events * / .
export gomousecallbac .
/ * load image from file iscolor can be a combination of above flags where cv load image unchanged overrides the other flags using cv load image anycolor alone is equivalent to cv load image unchanged unless cv load image anydepth is specified images are converted to 8bit * / .
/ * save image to file * / .
/ * decode image stored in the buffer * / .
/ * encode image and store the result as a byte vector ( single - row 8uc1 matrix ) * / .
/ * utility function convert one image to another with optional vertical flip * / .
/ * start capturing frames from video file * / .
/ * start capturing frames from camera index = camera index + domain offset ( cv cap * ) * / .
/ * grab a frame .
/ * get the frame grabbed with cvgrabframe ( .
/ * just a combination of cvgrabframe and cvretrieveframe ! ! ! do not release or modify the retrieved frame ! ! ! * / .
/ * stop capturing / reading and free resources * / .
/ * retrieve or set capture properties * / .
return the type of the capturer ( eg .
prototype for cv fourcc so that swig can generate wrapper without mixing up the defin .
/ * initialize video file writer * / .
/ * write frame to video file * / .
/ * close video file writer * / .
gcvinitcameramatrix2d takes one 3 - by - n matrix and one 2 - by - n matrix as input .
gcvrodrigues takes a 3d column vector .
/ * allocates and initializes iplimage header * / .
/ * inializes iplimage header * / .
/ * creates ipl image ( header and data ) * / .
merge creates one multichannel array out of several single - channel ones .
split divides a multi - channel array into several single - channel arrays .
addweighted calculates the weighted sum of two images .
/ * setdata assigns user data to the image header * / .
/ * releases ipl image header and data * / .
/ * creates a copy of ipl image ( widthstep may differ ) * / .
/ * sets a channel of interest ( only a few functions support coi ) - use cvcopy to extract the selected channel and / or put it back * / .
/ * retrieves image channel of interest * / .
/ * sets image roi ( region of interest ) ( coi is not changed ) * / .
/ * retrieves image roi * / .
/ * reshape changes shape of the image without copying data .
/ * get1d return a specific element from a 1 - dimensional matrix .
/ * get2d return a specific element from a 2 - dimensional matrix .
/ * get3d return a specific element from a 3 - dimensional matrix .
/ * sets every element of an array to a given value .
/ * set1d sets a particular element in the image * / .
/ * set2d sets a particular element in the image * / .
/ * set3d sets a particular element in the image * / .
/ * getmat returns the matrix header for an image .
/ * allocates and initalizes cvmat header * / .
/ * allocates and initializes cvmat header and allocates data * / .
/ * initializes cvmat header * / .
/ * setdata assigns user data to the matrix header .
/ * releases cvmat header and deallocates matrix data ( reference counting is used for data ) * / .
/ * creates an exact copy of the input matrix ( except .
/ * reshape changes shape of the matrix without copying data .
/ * makes a new matrix from < rect > subrectangle of input array .
/ * selects column span of the input array arr ( .
/ * select a diagonal of the input array .
/ * get1d return a specific element from a 1 - dimensional matrix .
/ * get2d return a specific element from a 2 - dimensional matrix .
/ * get3d return a specific element from a 3 - dimensional matrix .
/ * set1d sets a particular element in them matrix * / .
/ * set2d sets a particular element in them matrix * / .
/ * set3d sets a particular element in them matrix * / .
/ * getimage returns the image header for the matrix .
/ * low - level scalar < -> raw data conversion functions * / .
/ * allocates and initializes cvmatnd header * / .
/ * allocates and initializes cvmatnd header and allocates data * / .
/ * initializes preallocated cvmatnd header * / .
/ * releases cvmatnd * / .
/ * creates a copy of cvmatnd ( except .
/ * allocates and initializes cvsparsemat header and allocates data * / .
/ * releases cvsparsemat * / .
/ * creates a copy of cvsparsemat ( except .
/ * initializes sparse array iterator ( returns the first node or null if the array is empty ) * / .
returns next sparse array node ( or null if there is no more nodes ) .
/ * copies source array to destination array * / .
calculates the per - element bit - wise conjunction of two arrays .
calculates the per - element bit - wise conjunction of two arrays with a mask .
calculates the per - element bit - wise conjunction of an array and a scalar .
calculates the per - element bit - wise conjunction of an array and a scalar with a mask .
calculates the per - element bit - wise disjunction of two arrays .
calculates the per - element bit - wise disjunction of two arrays with a mask .
calculates the per - element bit - wise disjunction of an array and a scalar .
calculates the per - element bit - wise disjunction of an array and a scalar with a mask .
calculates the per - element sum of two arrays with a mask .
calculates the per - element sum of an array and a scalar .
calculates the per - element sum of an array and a scalar with a mask .
calculates the per - element difference between two arrays .
calculates the per - element difference between two arrays with a mask .
calculates the per - element difference between an array and a scalar .
calculates the per - element difference between an array and a scalar with a mask .
calculates the per - element difference between a scalar and an array .
calculates the per - element difference between a scalar and an array with a mask .
calculates the per - element absolute difference between two arrays .
calculates the per - element absolute difference between an array and a scalar .
cvequalizehist ( const cvarr * src .
meanstddevwithmask calculates mean and standard deviation of pixel values with mas .
creates a new sequence .
adds an element to the sequence end .
removes element from the sequence end .
adds an element to the sequence beginning .
removes element from the sequence beginning .
gets a pointer to the element at the inde .
removes an element from the middle of a sequence .
void cvinitfont ( cvfont * font .
void cvputtext ( cvarr * img .
/ * smoothes array ( removes noise ) * / .
cvapi ( void ) cvsmooth ( const cvarr * src .
cvapi ( void ) cvlaplace ( const cvarr * src .
cvapi ( void ) cvconvertscale ( const cvarr * src .
cvapi ( void ) cvcvtcolor ( const cvarr * src .
cvapi ( void ) cvcanny ( const cvarr * image .
/ * inpaints the selected region in the image * / .
/ * applies a fixed - level threshold to each array element .
/ * applies an adaptive threshold to an array .
/ * returns a structuring element of the specified size and shape for morphological operations .
cvapi ( iplconvkernel * ) cvcreatestructuringelementex ( int cols .
cvapi ( void ) cvreleasestructuringelement ( iplconvkernel * * element ) ; / * dilates an image by using a specific structuring element .
cvapi ( void ) cvdilate ( const cvarr * src .
/ * performs advanced morphological transformations .
delay set delay between retry default is 100m .
backoffdelay is a delaytype which increases delay between consecutive retrie .
error method return string representation of error it is an implementation of error interfac .
arguments adds the arguments to the args .
bodystring sets the request body to the given string .
bodybytes sets the request body to the given buffer .
body sets the request body to the given reader .
option sets the given option .
header sets the given header .
send sends the request and return the response .
exec sends the request a request and decodes the response .
next waits for the next record and returns that .
cancel cancels the given subscription .
filelist entries at the given path using the unixfs command .
id gets information about a given peer .
cat the content at the given path .
list entries at the given pat .
pin the given pat .
pins returns a map of the pin hashes to their info ( currently just the pin type .
returns ipfs version and commit sh .
objectstat gets stats for the dag object named by key .
objectstat gets stats for the dag object named by key .
swarmpeers gets all the swarm peer .
swarmconnect opens a swarm connection to a specific address .
dagputoptions applies the given options to a dagputsettings instance .
pin is an option for dag .
inputenc is an option for dag .
kind is an option for dag .
hash is an option for dag .
addnopin adds a file to ipfs without pinning it deprecated use add ( ) with option functions instea .
addwithopts adds a file to ipfs with some additional options deprecated use add ( ) with option functions instea .
adddir adds a directory recursively with all of the files under i .
publish updates a mutable name to point to a given valu .
publishwithdetails is used for fine grained control over record publishin .
resolve gets resolves the string provided to an / ipns / [ name ] .
resolvevalue resolves a planvalue as a single value based on the supplied bindvars .
resolverows resolves a [ ] planvalue as rows based on the supplied bindvars .
generatequery generates a query by substituting the specified bindvariables .
encodevalue encodes one bind variable value into the query .
lex returns the next token form the tokenizer .
skipstatement scans until the eof .
reset clears any internal state .
preview analyzes the beginning of the query using a simpler and faster textual comparison to identify the statement type .
stringin is a convenience function that returns true if str matches any of the values .
newtrackedbuffer creates a new trackedbuffer .
newstringarena creates an arena of the specified size .
newstring copies a byte slice into the arena and returns it as a string .
spaceleft returns the amount of space left in the arena .
string force casts a [ ] byte to a string .
instructions for creating new types if a type needs to satisfy an interface .
parsestrictddl is the same as parse except it errors on partially parsed ddl statements .
parsenext parses a single sql statement from the tokenizer returning a statement which is the ast representation of the query .
append appends the sqlnode to the buffer .
format formats the node .
format formats the node .
format formats the node .
exprfromvalue converts the given value into an expr or returns an error .
format formats the node .
format formats the node .
backtick produces a backticked literal given an input string .
newvalue builds a value using typ and val .
string returns a printable version of the value .
encodesql encodes the value into an sql statement .
encodesql performs the sql encoding for insertvalues .
encodesql generates the where clause constraints for the tuple equality .
walkstatement is the top level walk function .
walkselect normalizes the ast in select mode .
getbindvars returns a map of the bind vars referenced in the statement .
bindvariablesequal compares two maps of bind variables .
new constructs a new secure instance with supplied options .
special implementation for negroni .
fromauthheader is a " tokenextractor " that takes a give request and extracts the jwt token from the authorization header .
fromparameter returns a function that extracts the token from the specified query string paramete .
fromfirst returns a function that runs multiple token extractors and takes the first token it find .
get the initial rpc containing all of our subscriptions to send to new peer .
newfloodsubwithprotocols returns a new floodsub - enabled pubsub objecting using the protocols specified in ps .
newfloodsub returns a new pubsub object using the floodsubrouter .
newlrublacklist creates a new lrublacklist with capacity ca .
newrandomsub returns a new pubsub object using randomsubrouter as the router .
newgossipsub returns a new pubsub object using gossipsubrouter as the router .
withvalidatethrottle sets the upper bound on the number of active validation goroutines .
withmessagesigning enables or disables message signing ( enabled by default ) .
withmessageauthor sets the author for outbound messages to the given peer id ( defaults to the host s id ) .
withstrictsignatureverification is an option to enable or disable strict message signing .
withblacklist provides an implementation of the blacklist ; the default is a mapblacklis .
handleremovesubscription removes subscription sub from bookeeping .
handleaddsubscription adds a subscription for a particular topic .
announce announces whether or not this node is interested in a given topic only called from processloop .
notifysubs sends a given message to all corresponding subscribers .
seenmessage returns whether we already saw this message befor .
subscribedtomessage returns whether we are subscribed to one of the topics of a given messag .
msgid returns a unique id of the passed messag .
pushmsg pushes a message performing validation as necessar .
validate performs validation and only sends the message if all validators succee .
fast path for single topic validation that avoids the extra goroutin .
getvalidators returns all validators that apply to a given messag .
subscribe returns a new subscription for the given topic .
subscribebytopicdescriptor lets you subscribe a topic using a pb .
gettopics returns the topics this node is subscribed to .
publish publishes data to the given topic .
listpeers returns a list of peers we are connected to in the given topic .
withvalidatortimeout is an option that sets the topic validator timeout .
withvalidatorconcurrency is an option that sets topic validator throttle .
registertopicvalidator registers a validator for topic .
unregistertopicvalidator removes a validator from a topic .
defaultmetricprefix is the default mapping for metrics to statsd keys .
metricwithprefix is the default mapping for metrics to statsd keys .
writeclean writes v .
newclient returns a json .
call makes a json call .
todo ( prashantv ) clean up json .
callpeer makes a json call using the given peer .
callsc makes a json call using the given subchannel .
writeheaders writes the given key - value pairs using the following encoding len~2 ( k~4 v~4 ) ~le .
readheaders reads key - value pairs encoded using writeheaders .
newtcprawrelay creates a relay that just pipes data from one connection to another directly .
unmarshaltext implements encoding / text .
newclient creates a new hyperbahn client using the given channel .
parseconfig parses the configuration options ( e .
addpeer adds a peer to the hyperbahn subchannel .
advertise advertises the service with hyperbahn .
verifyhandler ensures that the given t is a function with the following signature func ( json .
register registers the specified methods specified as a map from method name to the json handler function .
start starts the test server called by the client and other upstream servers .
port returns the actual port the server listens t .
setstrategy sets customized peer selection strategy .
add adds a peer to the list if it does not exist .
getnew returns a new .
get returns a peer from the peer list .
remove removes a peer from the peer list .
getoradd returns a peer for the given hostport .
copy returns a copy of the peerlist as a map from hostport to peer .
len returns the length of the peerlist .
exists checks if a hostport exists in the peer list .
getpeerscore is called to find the peer and its score from a host port key .
onpeerchange is called when there is a change that may cause the peer s score to change .
updatepeer is called to update the score of the peer given the existing score .
getconn treats inbound and outbound connections as a single virtual list that can be indexed .
getactiveconn will randomly select an active connection .
getconnection returns an active connection to this peer .
getconnectionrelay gets a connection .
canremove returns whether this peer can be safely removed from the root peer list .
addconnection adds an active connection to the peer s connection list .
removeconnection will check remove the connection if it exists on connsptr and returns whether it removed the connection .
connectionstatechanged is called when one of the peers connections states changes .
connect adds a new outbound connection to the peer .
begincall starts a new call to this specific peer .
numconnections returns the number of inbound and outbound connections for this peer .
numpendingoutbound returns the number of pending outbound calls .
isephemeralhostport returns if hostport is the default ephemeral hostport .
get returns the value stored for the given key .
set sets the value for a given key .
clearall clears all the keys .
tracer returns the opentracing tracer for this channel .
serve serves incoming requests using the provided listener .
listenandserve listens on the given address and serves incoming requests .
register registers a handler for a method .
peerinfo returns the current peer info for the channe .
getsubchannel returns a subchannel for the given service name .
begincall starts a new call to a remote peer .
serve runs the listener to accept and manage new incoming connections .
ping sends a ping message to the given hostport and waits for a response .
statstags returns the common tags that should be used when reporting stats .
exchangeupdated updates the peer heap .
updatepeer updates the score of the peer and update it s position in heap as well .
addconnection adds the connection to the channel s list of connection if the channel is in a valid state to accept this connection .
removeclosedconn removes a connection if it s closed .
connectionclosestatechange is called when a connection s close state changes .
state returns the current channel state .
close starts a graceful close for the channel .
newreader returns a reader that reads typed values from the reader .
readuint16 reads a uint16 .
readstring reads a string of length n .
readlen16string reads a uint16 - length prefixed string .
register function adds json and thrift handlers to the server channel c .
get returns a relay timer that has not started .
put returns a relaytimer back to the pool .
start starts a timer with the given duration for the specified id .
release releases a timer back to the timer pool .
newlogger returns a logger that writes to the given writer .
newtcpframerelay relays frames from one connection to another .
create a sub - scope for this set of known tags .
isolated is a subchanneloption that creates an isolated subchannel .
begincall starts a new call to a remote peer .
isolated returns whether this subchannel is an isolated subchannel .
register registers a handler on the subchannel for the given method .
gethandlers returns all handlers registered on this subchannel by method name .
statstags returns the stats tags for this subchannel .
register a new subchannel for the given servicenam .
get subchannel if .
getoradd a subchannel for the given servicename on the ma .
discover queries hyperbahn for a list of peers that are currently advertised with the specified service name .
start begins a crossdock client in the background .
listen initializes the serve .
newreadbufferwithsize returns a readbuffer with a given capacit .
readbyte returns the next byte from the buffer .
readbytes returns the next n bytes from the buffe .
readstring returns a string of size n from the buffe .
readuint16 returns the next value in the buffer as a uint1 .
readuint32 returns the next value in the buffer as a uint3 .
readuint64 returns the next value in the buffer as a uint6 .
readuvarint reads an unsigned varint from the buffer .
readlen8string reads an 8 - bit length preceded string valu .
readlen16string reads a 16 - bit length preceded string valu .
fillfrom fills the buffer from a reade .
wrap initializes the buffer to read from the given byte slic .
writesinglebyte writes a single byte to the buffe .
writebytes writes a slice of bytes to the buffe .
writeuint16 writes a big endian encoded uint16 value to the buffe .
writeuint32 writes a big endian uint32 value to the buffe .
writeuint64 writes a big endian uint64 to the buffe .
writeuvarint writes an unsigned varint to the buffe .
writestring writes a string to the buffe .
writelen8string writes an 8 - bit length preceded strin .
writelen16string writes a 16 - bit length preceded strin .
deferbyte reserves space in the buffer for a single byte .
deferbytes reserves space in the buffer for a fixed sequence of bytes .
flushto flushes the written buffer to the given write .
reset resets the buffer to an empty state .
wrap initializes the buffer to wrap the given byte slic .
update updates the uint16 in the buffe .
update updates the uint32 in the buffe .
update updates the uint64 in the buffe .
update updates the bytes in the buffe .
updatestring updates the bytes in the buffer from a strin .
the argreader will handle fragmentation as needed .
finish finishes the fragment .
newwritablechunk creates a new writable chunk around a checksum and a buffer to hold dat .
writeasfits writes as many bytes from the given slice as fits into the chun .
newfragmentingwriter creates a new fragmenting write .
argwriter returns an argwriter to write an argument .
beginargument tells the writer that the caller is starting a new argument .
write writes argument data .
flush flushes the current fragment .
close ends the current argument .
handlecallres handles an incoming call req message .
createstatstags creates the common stats tags .
writemethod writes the method ( arg1 ) to the cal .
arg2reader returns an argreader to read the second argument .
handleerror handles an error coming back from the peer .
donereading shuts down the message exchange for this call .
gogenerate stringer - type=reqresreaderstat .
newfragment creates a new fragment for marshaling int .
flushfragment sends a fragment to the peer over the connectio .
failed marks the writer as having faile .
arg1reader returns an argreader to read arg1 .
arg2reader returns an argreader to read arg2 .
arg3reader returns an argreader to read arg3 .
argreader returns an argreader that can be used to read an argument .
recvnextfragment receives the next fragment from the underlying message exchange .
releasepreviousframent releases the last fragment returned by the reader if it s still around .
failed indicates the reader faile .
parseinboundfragment parses an incoming fragment based on the given messag .
newcontext returns a context that can be used to make thrift calls .
withheaders returns a context that can be used to make a call with request headers .
healthcheck will do periodic pings on the connection to check the state of the connection .
settimeout sets the timeout for the context .
addheader adds a single application header to the context .
setheaders sets the application headers for this context .
setshardkey sets the shardkey call option ( " sk " transport header ) .
setformat sets the format call option ( " as " transport header ) .
setroutingkey sets the routingkey call options ( " rk " transport header ) .
setroutingdelegate sets the routingdelegate call options ( " rd " transport header ) .
setconnecttimeout sets the connectiontimeout for this context .
setretryoptions sets retryoptions in the context .
settimeoutperattempt sets timeoutperattempt in retryoptions .
setparentcontext sets the parent for the context .
build returns a contextwithheaders that can be used to make calls .
overrideheaders sets headers if the call options contains non - default values .
read reads from the reader into the byte slice .
readjson deserializes json from the underlying reader into data .
newargwriter wraps the result of calling argxwriter to provider a simpler interface for writing arguments .
write writes the given bytes to the underlying writer .
writejson writes the given object as json .
count returns the number of non - tombstone items in the relay .
get checks for a relay item by id .
add adds a relay item .
delete removes a relayitem completely ( without leaving a tombstone ) .
entomb sets the tomb bit on a relayitem and schedules a garbage collection .
newrelayer constructs a relayer .
relay is called for each frame that is read on the connection .
receive receives frames intended for this connection .
handle all frames except messagetypecallreq .
addrelayitem adds a relay item to either outbound or inbound .
failrelayitem tombs the relay item so that future frames for this call are not forwarded .
writestruct writes the given thrift struct to a writer .
readstruct reads the given thrift struct .
ensureempty ensures that the specified reader is empty .
newserver returns a new server that can recieve thrift calls or raw calls .
advertise advertises with hyperbahn .
handlecallreqcontinue handles the continuation of a call request .
createstatstags creates the common stats tags .
dispatchinbound ispatches an inbound call to the appropriate handle .
calloptions returns a calloptions struct suitable for forwarding a request .
reads the entire method name ( arg1 ) from the request stream .
response provides access to the inboundcallresponse object which can be used to write back to the calling pee .
sendsystemerror returns a system error response to the peer .
setapplicationerror marks the response as being an application error .
arg2writer returns a writecloser that can be used to write the second argument .
donesending shuts down the message exchange for this call .
newstate parses the type information for a parsed thrift file and returns the state .
roottype recurses through typedefs and returns the underlying type .
checkinclude will check if the type is an included type .
isresultpointer returns whether the result for this method is a pointer .
gotype returns the go type name for the given thrift type .
gotypeprefix returns the go type name for the given thrift type with the prefix .
newcontext returns a new root context used to make tchannel requests .
newincomingcontext creates a new context for an incoming call with the given span .
currentcall returns the current incoming call .
parameters - ke .
parameters - key - valu .
new returns a rand .
health returns true as default health endpoint .
parameters - h .
headers gets application headers out of the context .
responseheaders returns the response headers .
setresponseheaders sets the response headers .
child creates a child context with a separate container for headers .
wrap wraps an existing context .
wrapwithheaders returns a context that can be used to make a call with request headers .
withoutheaders hides any tchannel headers from the given context .
notify will store the error and notify all waiters on c that there s an error .
checkerror is called before waiting on the mex channels .
forwardpeerframe forwards a frame from a peer to the message exchange .
recvpeerframe waits for a new frame from the peer .
recvpeerframeoftype waits for a new frame of a given type from the peer .
shutdown shuts down the message exchange .
newmessageexchangeset creates a new messageexchangeset with a given name .
addexchange adds an exchange .
newexchange creates and adds a new message exchange to this se .
deleteexchange will delete msgid .
removeexchange removes a message exchange from the set .
expireexchange is similar to removeexchange .
forwardpeerframe forwards a frame from the peer to the appropriate message exchang .
copyexchanges returns a copy of the exchanges if the exchange is active .
stopexchanges stops all message exchanges to unblock all waiters on the mex .
marshaljson returns a " id " nnn .
newframe allocates a new frame with the given payload capacit .
readbody takes in a previously read frame header .
readin reads the frame from the given io .
writeout writes the frame to the given io .
canretry returns whether an error can be retried for the given retry option .
hasretries will return true if there are more retries left .
sincestart returns the time since the start of the request .
addselectedpeer adds a given peer to the set of selected peers .
runwithretry will take a function that makes the tchannel call .
gethost returns the host part of a hostport .
checksumsize returns the size in bytes of the checksum calculatio .
new creates a new checksum of the given typ .
parsetemplates returns a list of templates that must be rendered given the template files .
newstringsliceflag creates a new string slice flag .
withstatefuncs adds functions to the template that are dependent upon state .
introspectstate returns the runtimestate for this channel .
introspectothers returns the channelinfo for all other channels in this process .
reportinfo returns channelinfo for a channel .
introspectstate returns the runtime state of th .
introspectstate returns the runtime state of the subchannels .
introspectstate returns the runtime state for this peer .
introspectstate returns the runtime state for this connection .
introspectstate returns the runtime state for this relayer .
introspectstate returns the runtime state for this relayitems .
introspectstate returns the runtime state for this messsage exchange set .
introspectlist returns the list of peers ( hostport .
introspectnumconnections returns the number of connections returns the number of connections .
registerinternal registers the following internal handlers which return runtime state gometa introspect tchannel internal state .
newcontext returns a context that can be used to make json calls .
readargs reads the * args from the given call .
writeresponse writes the given res to the inboundcallresponse .
wrap wraps a handler as a tchannel .
initfromopentracing initializes injectablespan fields from an opentracing span .
currentspan extracts opentracing span from the context .
startoutboundspan creates a new tracing span to represent the outbound rpc call .
injectoutboundspan retrieves opentracing span from response .
extractinboundspan attempts to create a new opentracing span for inbound request using only trace ids stored in the frame s tracing field .
extractinboundspan is a higher level version of extractinboundspan ( ) .
tracerfromregistrar returns an opentracing tracer embedded in the registrar .
inttoip4 converts an integer ip representation into a 4 - byte net .
servicepeertohostport converts a hyperbahn servicepeer into a hostport string .
newstatsdreporter returns a statsreporter that reports to statsd on the given addr .
unmarshaltext implements textunmarshaler from encodin .
push implements heap push interfac .
pop implements heap pop interfac .
updatepeer updates the score for the given peer .
removepeer remove peer at specific index .
pushpeer pushes the new peer into the heap .
addpeer adds a peer to the peer heap .
newclient returns a client that makes calls over the given tchannel to the given hyperbahn service .
readresponse reads the response struct into resp .
add adds a peer to the root peer list if it does not exist .
getoradd returns a peer for the given hostport .
get returns a peer for the given hostport if it exists .
this is based on the standard library s fnv32a implementation .
withtimeout sets the timeout to use for each call .
extendsserviceprefix returns a package selector ( if any ) for the extended service .
methods returns the methods on this service .
inheritedmethods returns names for inherited methods on this service .
arguments returns the argument declarations for this method .
arglist returns the argument list for the function .
calllist creates the call to a function satisfying interface from an args struct .
rettype returns the go return type of the method .
wrapresult wraps the result variable before being used in the result struct .
returnwith takes the result name and the error name .
declaration returns the declaration for this field .
camelcase takes a name with underscores such as my arg and returns camelcase ( e .
startidlesweep starts a poller that checks for idle connections at given intervals .
start runs the goroutine responsible for checking idle connections .
stop kills the poller checking for idle connections .
resolvewithgopath will resolve the filename relative to gopath and returns the first file that exists .
setextends will set the extendsservice for all services .
handle calls f ( ctx .
registers a handle .
set implements set ( ) of opentracing .
foreachkey conforms to the textmapreader interface .
newclient returns a new client that can make calls to a benchmark server .
scoreaddr scores how likely the given addr is to be a remote address and returns the ip to use when listening .
listenip returns the ip to bind to in listen .
parameters - ms .
accept waits for and returns the next connection to the listener .
close closes the listener .
readargsv2 reads arg2 and arg3 from a reader .
writeargs writes the given arguments to the call .
call makes a call to the given hostport with the given arguments and returns the response args .
callsc makes a call using the given subcahnne .
callv2 makes a call and does not attempt any retries .
newrealrelay creates a tchannel relay .
newserver returns a server that can serve thrift services over tchannel .
register registers the given tchanserver to be called on any incoming call for its services .
registerhealthhandler uses the user - specified function f for the health endpoint .
setcontextfn sets the function used to convert a context .
handle handles an incoming tchannel call and forwards it to the correct handler .
metricskey is a string representation of the error code that s suitable for inclusion in metrics tags .
newsystemerror defines a new systemerror with a code and messag .
newwrappedsystemerror defines a new systemerror wrapping an existing erro .
error returns the code and message .
getcontexterror converts the context error to a tchannel error .
getsystemerrorcode returns the code to report for the given error .
getsystemerrormessage returns the message to report for the given error .
gogenerate stringer - type=connectionstat .
ping sends a ping message and waits for a ping response .
handlepingres calls registered ping handlers .
handlepingreq responds to the pingreq message with a pingres .
sendmessage sends a standalone message ( typically a control message ) .
recvmessage blocks waiting for a standalone response message ( typically a control message ) .
sendsystemerror sends an error frame for the given system error .
connectionerror handles a connection level erro .
withstatelock performs an action with the connection state mutex locke .
withstaterlock performs an action with the connection state mutex rlocked .
readframes is the loop that reads frames from the network connection and dispatches to the appropriate handler .
writeframes is the main loop that pulls frames from the send channel and writes them to the connection .
updatelastactivity marks when the last message was received / sent on the channel .
haspendingcalls returns whether there s any pending inbound or outbound calls on this connection .
checkexchanges is called whenever an exchange is removed .
closenetwork closes the network connection and all network - related channels .
getlastactivitytime returns the timestamp of the last frame read or written .
validate validates that the given spec is supported by thrift - gen .
logfailedregistrationretry logs either a warning or info depending on the number of consecutivefailures .
advertiseloop readvertises the service approximately every minute ( with some fuzzing ) .
initialadvertise will do the initial advertise call to hyperbahn with additional retries on top of the built - in tchannel retries .
parameters - quer .
todo consider pooling lazycallreq and using pointers to the struct .
service returns the name of the destination service for this callreq .
ttl returns the time to live for this callreq .
setttl overwrites the frame s ttl .
finishescall checks whether this frame is the last one we should expect for this rpc req - res .
flat returns all the strings in the set .
map applies a function that processes individual strings to the strings in " ps " and returns a new platformstrings with the result .
mapslice applies a function that processes slices of strings to the strings in " ps " and returns a new platformstrings with the results .
getprotoconfig returns the proto language configuration .
inferprotomode sets protoconfig .
flattenexpr takes an expression that may have been generated from platformstrings and returns its values in a flat .
makeplatformstringsexpr constructs a single expression from the sub - expressions in ps .
string returns os .
find searches from the given dir and up for the workspace file returning the directory containing it .
movelocations fixes labels within $ ( location ) and $ ( locations ) expansions .
rungazelle invokes gazelle with " bazel run " .
restorebuildfilesinrepo copies build .
fixload updates a load statement with the given symbols .
newloadindex returns the index in stmts where a new load statement should be inserted .
checkgazelleloaded searches the given workspace file for a repository named " bazel gazelle " .
removelegacygorepository removes loads of go repository from @io bazel rules go .
compare returns an integer comparing two versions lexicographically .
parseversion parses a version of the form " 12 .
emptyfile creates a file wrapped around an empty syntax tree .
loadfile loads a build file from disk .
loadworkspacefile is similar to loadfile but parses the file as a workspace file .
loadmacrofile loads a bzl file from disk .
emptymacrofile creates a bzl file at the given path and within the file creates a starlark function with the provided name .
loaddata parses a build file from a byte slice and scans it for rules and load statements .
loadworkspacedata is similar to loaddata but parses the data as a workspace file .
loadmacrodata parses a bzl file from a byte slice and scans for the load statements and the rules called from the given starlark function .
scanast creates a file wrapped around the given syntax tree .
scanastbody creates a file wrapped around the given syntax tree .
matchbuildfilename looks for a file in files that has a name from names .
syncmacrofile syncs the file s syntax tree with another file s .
macroname returns the name of the macro function that this file is editing .
format formats the build file in a form that can be written to disk .
save writes the build file to disk .
hasdefaultvisibility returns whether the file contains a " package " rule with a " default visibility " attribute .
newload creates a new .
symbols returns a list of symbols this statement loads .
has returns true if sym is loaded by this statement .
add inserts a new symbol into the load statement .
remove deletes a symbol from the load statement .
insert marks this statement for insertion at the given index .
newrule creates a new .
setkind changes the kind of rule this is .
attrkeys returns a sorted list of attribute keys used in this rule .
attr returns the value of the named attribute .
attrstring returns the value of the named attribute if it is a scalar string .
attrstrings returns the string values of an attribute if it is a list .
delattr removes the named attribute from the rule .
setattr adds or replaces the named attribute with an expression produced by exprfromvalue .
privateattrkeys returns a sorted list of private attribute names .
setprivateattr associates a value with a key .
insert marks this statement for insertion at the end of the file .
isempty returns true when the rule contains none of the attributes in attrs for its kind .
shouldkeep returns whether e is marked with a " .
checkinternalvisibility overrides the given visibility if the package is internal .
new constructs a new label from components .
abs computes an absolute label ( one with a repository and package name ) from this label .
rel attempts to compute a relative label from this label .
equal returns whether two labels are exactly the same .
contains returns whether other is contained by the package of l or a sub - package .
issemverprefix reports whether v is a semantic version prefix v1 or v1 .
process - go googleapis case .
buildupdaterelmap builds a table of prefixes .
shouldcall returns true if walk should call the callback in the directory rel .
shouldupdate returns true if walk should pass true to the callback s update parameter in the directory rel .
shouldvisit returns true if walk should visit the subdirectory rel .
decide if symlink dir / base should be followed .
mergerules copies information from src into dst .
mergeexprs combines information from src and dst and returns a merged expression .
squashrules copies information from src into dst without discarding information in dst .
substituterule replaces local labels ( those beginning with " " .
runclient performs the main work of the client .
todo ( jayconrod ) annotation directives will apply to an individual rule .
updaterepo returns an object describing a repository at the most recent commit or version tag .
newremotecache creates a new remotecache with a set of known repositories .
remote returns the vcs name and the remote url for a repository with the given root import path .
head returns the most recent commit id on the default branch and latest version tag for the given remote repository .
mod returns the module path for the module that contains the package named by importpath .
get retrieves a value associated with the given key from the cache .
ensure retreives a value associated with the given key from the cache .
hasprefix returns whether the slash - separated path p has the given prefix .
trimprefix returns p without the provided prefix .
relbasename returns the base name for rel .
clone creates a copy of the configuration for use in a subdirectory .
isvalidbuildfilename returns true if a file with the given base name should be treated as a build file .
check returns true if at least one of the tag groups is satisfied .
check returns true if all of the tags are true .
otherfileinfo returns information about a non - .
splitquoted splits the string s around each instance of one or more consecutive white space characters while taking into account quotes and escaping .
expandsrcdir expands any occurrence of $srcdir .
copied from go / build .
readtags reads and extracts build tags from the block of comments and blank lines at the start of a file which is separated from the rest of the file by a blank line .
checkconstraints determines whether build constraints are satisfied on a given platform .
isignoredtag returns whether the tag is " cgo " or is a release tag .
protofileinfo extracts metadata from a proto file .
findrulewithoverride searches the current configuration for user - specified dependency resolution overrides .
newruleindex creates a new index .
addrule adds a rule r to the index .
finish constructs the import index and performs any other necessary indexing actions after all rules have been added .
buildimportindex constructs the map used by findrulesbyimport .
findrulesbyimport attempts to resolve an import string to a rule record .
isselfimport returns true if the result s label matches the given label or the result s rule transitively embeds the rule with the given label .
applykindmappings returns a copy of loadinfo that includes c .
appendormergekindmapping adds loadinfo for the given replacement .
rulename returns a name for a proto library derived from the given strings .
buildpackage extracts metadata from the .
selectpackage chooses a package to generate rules for .
gopackagename guesses the identifier in package declarations at the top of the .
generateproto creates a new proto library rule for a package .
generateempty generates a list of proto library rules that may be deleted .
importreporules reads the lock file of a vendoring tool and returns a list of equivalent repository rules that can be merged into a workspace file .
generaterule returns a repository rule for the given repository that can be written in a workspace file .
findexternalrepo attempts to locate the directory where bazel has fetched the external repository with the given name .
listrepositories extracts metadata about repositories declared in a file .
migratelibraryembed converts " library " attributes to " embed " attributes .
migrategrpccompilers converts " go grpc library " rules into " go proto library " rules with a " compilers " attribute .
squashcgolibrary removes cgo library rules with the default name and merges their attributes with go library with the default name .
flattensrcs transforms srcs attributes structured as concatenations of lists and selects ( generated from platformstrings ; see extractplatformstringsexprs for matching details ) into a sorted .
removelegacyproto removes uses of the old proto rules .
removelegacygazelle removes loads of the " gazelle " macro from @io bazel rules go godef .
selectpackages selects one go packages out of the buildable packages found in a directory .
options transforms package - relative paths in cgo options into repository - root - relative paths that bazel can understand .
addbuiltin registers a builtin kind with its info .
mappedkind records the fact that the given mapping was applied while processing the given package .
resolver returns a resolver for the given rule and package .
sortexprlabels sorts lists of strings using the same order as buildifier .
checkrulesgoversion checks whether a compatible version of rules go is being used in the workspace .
preprocesstags adds some tags which are on by default before they are used to match files .
setbuildtags sets generictags by parsing as a comma separated list .
checkprefix checks that a string may be used as a prefix .
splitdirective splits a comma - separated directive value into its component parts .
copygomodtotemp copies to given go .
findgotool attempts to locate the go executable .
addfile adds the file described by " info " to a target in the package " p " if the file is buildable .
isbuildable returns true if anything in the package is buildable .
firstgofile returns the name of a .
startserver starts a new server process .
listdirs returns a slice containing all the subdirectories under dir .
shouldignore returns whether a write to the given file should be ignored because they were caused by gazelle or autogazelle or something unrelated to the build .
recordwrite records that a directory has been modified and that its build file should be updated the next time gazelle runs .
getandclearwrittendirs retrieves a list of directories that have been modified since the last time getandclearwrittendirs was called .
/ * start starts the passed - in * exec .
/ * wait waits until the wrapped command exits .
/ * signal sends the running command the passed in signal .
/ * kill sends a sigkill signal to all the processes started by run .
/ * kill sends a sigterm signal to all the processes started by run .
/ * kill sends a sigkill signal to all the processes started by run .
/ * terminate sends a sigterm signal to all the processes started by run .
/ * signal sends the passed in signal to all the processes started by run .
/ * interrupt sends the sigint signal to all the processes started by run .
combinehandler takes variadic list of handlers and produces one handler that calls each handler in order .
verifyrequest returns a handler that verifies that a request uses the specified method to connect to the specified path you may also pass in an optional rawquery string which is tested against the request s req .
verifycontenttype returns a handler that verifies that a request has a content - type header set to the specified valu .
verifymimetype returns a handler that verifies that a request has a specified mime type set in content - type heade .
verifybasicauth returns a handler that verifies the request contains a basicauth authorization header matching the passed in username and passwor .
verifybody returns a handler that verifies that the body of the request matches the passed in byte array .
verifyjson returns a handler that verifies that the body of the request is a valid json representation matching the passed in json string .
verifyjsonrepresenting is similar to verifyjson .
verifyform returns a handler that verifies a request contains the specified form values .
verifyformkv returns a handler that verifies a request contains a form key with the specified values .
verifyprotorepresenting returns a handler that verifies that the body of the request is a valid protobuf representation of the passed message .
registerfailhandlerwitht ensures that the given types .
interceptgomegafailures runs a given callback and returns an array of failure messages generated by any gomega assertions within the callback .
expectwithoffset wraps an actual value allowing assertions to be made on it expectwithoffset ( 1 .
eventuallywithoffset operates like eventually but takes an additional initial argument to indicate an offset in the call stack .
consistentlywithoffset operates like consistnetly but takes an additional initial argument to indicate an offset in the call stack .
expect is used to make assertions .
eventually is used to make asynchronous assertions .
consistently is used to make asynchronous assertions .
/ * generates a formatted matcher success / failure message of the form \ texpected \ t \ t < pretty printed actual > \ t < message > \ t \ t < pretty printed expected > if expected is omited .
/ * generates a nicely formatted matcher success / failure message much like message ( .
/ * pretty prints the passed in object at the passed in indentation level .
/ * indentstring takes a string and indents each line by the specified amount .
/ * returns true when the string is entirely made of printable runes .
/ * the exit matcher operates on a session \ texpect ( session ) .
matchfields succeeds if each element of a struct matches the field matcher associated with it .
/ * say is a gomega matcher that operates on gbytes .
receive succeeds if there is a value to be received on actual .
matchregexp succeeds if actual is a string or stringer that matches the passed - in regexp .
containsubstring succeeds if actual is a string or stringer that contains the passed - in substring .
haveprefix succeeds if actual is a string or stringer that contains the passed - in string as a prefix .
havesuffix succeeds if actual is a string or stringer that contains the passed - in string as a suffix .
havekeywithvalue succeeds if actual is a map with the passed in key and value .
benumerically performs numerical assertions in a type - agnostic way .
betemporally compares time .
and succeeds only if all of the given matchers succeed .
or succeeds if any of the given matchers succeed .
not negates the given matcher ; it succeeds if the given matcher fails .
withtransform applies the transform to the actual value and matches it against matcher .
/ * build uses go build to compile the package at packagepath .
/ * buildwithenvironment is identical to build but allows you to specify env vars to be set at build time .
/ * buildin is identical to build but allows you to specify a custom $gopath ( the first argument ) .
/ * you should call cleanupbuildartifacts before your test ends to clean up any temporary artifacts generated by gexec .
timeoutcloser returns an io .
timeoutreader returns an io .
timeoutwriter returns an io .
/ * bufferwithbytes returns a new gbytes .
/ * bufferreader returns a new gbytes .
/ * write implements the io .
/ * read implements the io .
/ * close signifies that the buffer will no longer be written to * / .
/ * closed returns true if the buffer has been closed * / .
/ * contents returns all data ever written to the buffer .
/ * canceldetects cancels any pending detects and cleans up their goroutines .
create a nestederror with the given path .
error is part of the error interface .
matchallelements succeeds if every element of a slice matches the element matcher it maps to through the id function .
matchelements succeeds if each element of a slice matches the element matcher it maps to through the id function .
setmockservice return a new mockservice and set as a servicemanage .
open dials to the mongodb database .
uses id or address .
write writes and flushes the data .
hijack will hijack the underlying tcp connection .
listdeploys returns the list of deploy that match a given filter .
title event list path / events method get produce application / json responses 200 ok 204 no conten .
title kind list path / events / kinds method get produce application / json responses 200 ok 204 no conten .
title event info path / events / uuid method get produce application / json responses 200 ok 400 invalid uuid 401 unauthorized 404 not foun .
title event cancel path / events / uuid / cancel method post produce application / json responses 204 ok 400 invalid uuid or empty reason 401 unauthorized 404 not foun .
title event block list path / events / blocks method get produce application / json responses 200 ok 204 no content 401 unauthorize .
title add event block path / events / blocks method post consume application / x - www - form - urlencoded responses 200 ok 400 invalid data or empty reason 401 unauthorize .
title remove event block path / events / blocks / uuid method delete responses 200 ok 400 invalid uuid 401 unauthorized 404 active block with provided uuid not foun .
title user quota path / users / email / quota method get produce application / json responses 200 ok 401 unauthorized 404 user not foun .
title update application quota path / apps / appname / quota method put consume application / x - www - form - urlencoded responses 200 quota updated 400 invalid data 401 unauthorized 403 limit lower than allocated 404 application not foun .
addall binds a path to get .
return timeout in second .
registerhandler inserts a handler on a list of handlers for version 1 .
registerhandlerversion inserts a handler on a list of handler .
validatetlscertificate checks if c is ready for use in a production env .
check check the status of registered checkers matching names and return a list of results .
title profile index handler path / debug / pprof method get responses 200 ok 401 unauthorize .
title profile cmdline handler path / debug / pprof / cmdline method get responses 200 ok 401 unauthorize .
title profile handler path / debug / pprof / profile method get responses 200 ok 401 unauthorize .
title profile symbol handler path / debug / pprof / symbol method get responses 200 ok 401 unauthorize .
title profile trace handler path / debug / pprof / trace method get responses 200 ok 401 unauthorize .
discoverrepositorypath finds the path of the repository from a given directory .
openrepository opens a repository by its filepath .
remoteurl returns the url of a remote by its name .
title token list path / tokens method get produce application / json responses 200 list tokens 204 no content 401 unauthorize .
title token info path / tokens / token id method get produce application / json responses 200 get token 401 unauthorize .
title token create path / tokens method post produce application / json responses 201 token created 401 unauthorized 409 token already exist .
title token delete path / tokens / token id method delete produce application / json responses 200 token created 401 unauthorized 404 token not foun .
title role create path / roles method post consume application / x - www - form - urlencoded responses 201 role created 400 invalid data 401 unauthorized 409 role already exist .
title remove role path / roles / name method delete responses 200 role removed 401 unauthorized 404 role not found 412 role with user .
title role list path / roles method get produce application / json responses 200 ok 401 unauthorize .
title role info path / roles / name method get produce application / json responses 200 ok 401 unauthorized 404 role not foun .
title remove permission path / roles / name / permissions / permission method delete responses 200 permission removed 401 unauthorized 404 not foun .
title assign role to user path / roles / name / user method post consume application / x - www - form - urlencoded responses 200 ok 400 invalid data 401 unauthorized 404 role not foun .
title list permissions path / permissions method get produce application / json responses 200 ok 401 unauthorize .
title list default roles path / role / default method get produce application / json responses 200 ok 401 unauthorize .
title assign role to token path / roles / name / token method post consume application / x - www - form - urlencoded responses 200 ok 400 invalid data 401 unauthorized 404 role or team token not foun .
list lists all apps in the indexer .
apps returns an object that can list and get apps .
list lists all apps in the indexer for a given namespace .
streamjsonresponse supports the json streaming format from the tsuru api .
dropdatabase drop database of any given nam .
collection returns a collection by its name .
this method loads basic config and returns a copy of the config object .
setlogger defines a new logger for the current target .
error writes the given values to the target logger .
errorf writes the formatted string to the target logger .
fatal writes the given values to the target logger .
debugf writes the formatted string to the target logger .
getstdlogger returns a standard logger instance useful for configuring log in external packages .
namespace returns the namespace to be used by custom resource .
recreatecontainers relaunch all node containers in the cluster for the given dockerprovisioner .
check provisioner config .
check docker config .
check schedulers it verifies your scheduler configuration and validates related confs .
check router it verifies your router configuration and validates related confs .
title plan list path / plans method get produce application / json responses 200 ok 204 no conten .
title remove plan path / plans / name method delete responses 200 plan removed 401 unauthorized 404 plan not foun .
getbuildimage returns the image name from app or plaftorm .
title pool create path / pools method post consume application / x - www - form - urlencoded responses 201 pool created 400 invalid data 401 unauthorized 409 pool already exist .
title remove pool path / pools / name method delete responses 200 pool removed 401 unauthorized 403 pool still has apps 404 pool not foun .
title add team too pool path / pools / name / team method post consume application / x - www - form - urlencoded responses 200 pool updated 401 unauthorized 400 invalid data 404 pool not foun .
title pool update path / pools / name method put consume application / x - www - form - urlencoded responses 200 pool updated 401 unauthorized 404 pool not found 409 default pool already define .
title pool constraints list path / constraints method get produce application / json responses 200 ok 204 no content 401 unauthorize .
title set a pool constraint path / constraints method put consume application / x - www - form - urlencoded responses 200 ok 401 unauthorize .
available returns true if the unit is available .
get gets the named provisioner from the registry .
registry returns the list of registered provisioners .
error is the string representation of a provisioning error .
title user create path / users method post consume application / x - www - form - urlencoded responses 201 user created 400 invalid data 401 unauthorized 403 forbidden 409 user already exist .
title login path / auth / login method post consume application / x - www - form - urlencoded produce application / json responses 200 ok 400 invalid data 401 unauthorized 403 forbidden 404 not foun .
title logout path / users / tokens method delete responses 200 o .
title change password path / users / password method put consume application / x - www - form - urlencoded responses 200 ok 400 invalid data 401 unauthorized 403 forbidden 404 not foun .
title reset password path / users / email / password method post responses 200 ok 400 invalid data 401 unauthorized 403 forbidden 404 not foun .
title team create path / teams method post consume application / x - www - form - urlencoded responses 201 team created 400 invalid data 401 unauthorized 409 team already exist .
title remove team path / teams / name method delete responses 200 team removed 401 unauthorized 403 forbidden 404 not foun .
title team list path / teams method get produce application / json responses 200 list teams 204 no content 401 unauthorize .
title remove key path / users / keys / key method delete responses 200 ok 400 invalid data 401 unauthorized 404 not foun .
title list keys path / users / keys method get produce application / json responses 200 ok 400 invalid data 401 unauthorize .
title remove user path / users method delete responses 200 user removed 401 unauthorized 404 not foun .
title get auth scheme path / auth / scheme method get produce application / json responses 200 o .
title regenerate token path / users / api - key method post produce application / json responses 200 ok 401 unauthorized 404 user not foun .
title show token path / users / api - key method get produce application / json responses 200 ok 401 unauthorized 404 user not foun .
title user info path / users / info method get produce application / json responses 200 ok 401 unauthorize .
title remove platform path / platforms / name method delete responses 200 platform removed 401 unauthorized 404 not foun .
title platform list path / platforms method get produce application / json responses 200 list platforms 204 no content 401 unauthorize .
title platform info path / platforms / name method get produce application / json responses 200 platform info 401 unauthorized 404 notfoun .
title logs config path / docker / logs method get produce application / json responses 200 ok 401 unauthorize .
validateversion checks whether current version is greater or equal to supported version .
readtarget returns the current target .
writetarget writes the given endpoint to the target file .
writeontargetlist writes the given target in the target list file .
buildhealthcheck creates a healthcheck function for the given routername .
conn reads the tsuru config and calls storage .
apps returns the apps collection from mongodb .
poolsconstraints return the pool constraints collection .
users returns the users collection from mongodb .
samlrequests returns the saml requests from mongodb .
applogcollection returns the logs collection for one app from mongodb .
createapplogcollection creates a new capped collection to store logs for an app .
logscollections returns logs collections for all apps from mongodb .
archivebuildcmds build a image using the archive method .
archivedeploycmds is a legacy command to deploys an unit using the archive method .
deploycmds deploys an unit builded by tsuru .
runwithagentcmds returns the list of commands that should be passed when the provisioner will run a unit using tsuru unit agent to start .
newapps returns a app .
get takes name of the app .
list takes label and field selectors .
create takes the representation of a app and creates it .
update takes the representation of a app and updates it .
delete takes name of the app and deletes it .
parsetoken extracts token from a header type token or token .
processtags removes duplicates and trims spaces from each ta .
aggregatecontainersby aggregates and counts how many containers exist each node that matches received filter .
choosenodetoadd finds which is the node with the minimum number of containers and returns i .
choosecontainertoremove finds a container from the the node with maximum number of containers and returns i .
title router list path / routers method get produce application / json responses 200 ok 204 no conten .
title delete app router path / app / app / routers / router method delete produce application / json responses 200 ok 404 app or router not foun .
title list app routers path / app / app / routers method get produce application / json responses 200 ok 204 no content 404 app not foun .
get gets the named router from the registry .
default returns the default route .
store stores the app name related with the router name .
title service list path / services method get produce application / json responses 200 list services 204 no content 401 unauthorize .
title service update path / services / name method put consume application / x - www - form - urlencoded responses 200 service updated 400 invalid data 401 unauthorized 403 forbidden ( team is not the owner ) 404 service not foun .
title service delete path / services / name method delete responses 200 service removed 401 unauthorized 403 forbidden ( team is not the owner or service with instances ) 404 service not foun .
title service proxy path / services / proxy / service / service method " * " responses 401 unauthorized 404 service not foun .
title grant access to a service path / services / service / team / team method put responses 200 service updated 400 team not found 401 unauthorized 404 service not found 409 team already has access to this servic .
title change service documentation path / services / name / doc consume application / x - www - form - urlencoded method put responses 200 documentation updated 401 unauthorized 403 forbidden ( team is not the owner or service with instances ) .
newsimpleclientset returns a clientset that will respond with the provided objects .
tsuruv1 retrieves the tsuruv1clien .
tsuru retrieves the tsuruv1clien .
title healthcheck path / healthcheck method get responses 200 ok 500 internal server erro .
newappinformer constructs a new informer for app type .
newfilteredappinformer constructs a new informer for app type .
get takes name of the app .
list takes label and field selectors .
watch returns a watch .
create takes the representation of a app and creates it .
update takes the representation of a app and updates it .
delete takes name of the app and deletes it .
deletecollection deletes a collection of objects .
patch applies the patch and returns the patched app .
newsharedinformerfactory constructs a new instance of sharedinformerfactor .
newfilteredsharedinformerfactory constructs a new instance of sharedinformerfactory .
title webhook list path / events / webhooks method get produce application / json responses 200 list webhooks 204 no conten .
title webhook info path / events / webhooks / name method get produce application / json responses 200 get webhook 404 not found 401 unauthorize .
title webhook create path / events / webhooks method post responses 200 webhook created 401 unauthorized 400 invalid webhook 409 webhook already exist .
title webhook update path / events / webhooks / name method put responses 200 webhook updated 401 unauthorized 400 invalid webhook 404 webhook not foun .
proxy is not implemented for osb api implementation .
unbindunit is a no - op for osb api implementation .
create implements create method of planservice interfac .
remove implements remove method of planservice interfac .
ensuredefault creates and stores an autogenerated plan in case of no plans exists .
deleteinstance deletes the service instance from the database .
toinfo returns the service instance as a struct compatible with the return of the service info api call .
update changes informations of the service instance .
bindapp makes the bind between the service instance and an app .
unbindapp makes the unbind between the service instance and an app .
status returns the service instance status .
proxyinstance is a proxy between tsuru and the service instance .
inc implements inc method from quotaservice interfac .
setlimit redefines the limit of the app .
set redefines the inuse units of the app .
get implements get method from quotaservice interfac .
title add install host path / install / hosts method post consume application / x - www - form - urlencoded produce application / json responses 201 host added 401 unauthorize .
title install host info path / install / hosts / name method get produce application / json responses 200 ok 401 unauthorized 404 not foun .
title list install hosts path / install / hosts method get produce application / json responses 200 ok 401 unauthorize .
removeimage removes an image manifest from a remote registry v2 server .
removeappimages removes all app images from a remote registry v2 server .
create implements create method of platformservice interfac .
list implements list method of platformservice interfac .
findbyname implements findbyname method of platformservice interfac .
update implements update method of platformservice interfac .
remove implements remove method of platformservice interfac .
rollback implements rollback method of platformservice interfac .
title index path / method get responses 200 o .
getpoolbyname finds a pool by nam .
manager returns the current configured manager .
register registers a new repository manager .
start starts the sync process on a different goroutin .
shutdown shutdowns bindsyncer waiting for the current sync to complet .
getforprovisioner gets the builder required by the provisioner .
get gets the named builder from the registry .
registry returns the list of registered builders .
registerqueuetask registers the internal bs queue task for later execution .
title docker healing history path / docker / healing method get produce application / json responses 200 ok 204 no content 400 invalid data 401 unauthorize .
apps returns a appinformer .
title dump goroutines path / debug / goroutines method get responses 200 o .
deepcopyinto is an autogenerated deepcopy function .
deepcopy is an autogenerated deepcopy function .
deepcopyobject is an autogenerated deepcopy function .
deepcopyinto is an autogenerated deepcopy function .
deepcopy is an autogenerated deepcopy function .
deepcopyobject is an autogenerated deepcopy function .
deepcopyinto is an autogenerated deepcopy function .
deepcopy is an autogenerated deepcopy function .
title service broker list path / brokers method get produce application / json responses 200 list service brokers 204 no content 401 unauthorize .
title add service broker path / brokers method post responses 201 service broker created 401 unauthorized 409 broker already exist .
title update service broker path / brokers / broker method put responses 200 service broker updated 401 unauthorized \ t 404 not foun .
write writes and logs the data .
title list provisioner clusters path / provisioner / clusters method get consume application / x - www - form - urlencoded produce application / json responses 200 ok 204 no content 401 unauthorize .
title delete provisioner cluster path / provisioner / clusters / name method delete consume application / x - www - form - urlencoded produce application / x - json - stream responses 200 ok 401 unauthorized 404 cluster not foun .
title list provisioners path / provisioner method get produce application / json responses 200 ok 204 no content 401 unauthorize .
title list units by node path / provisioner / node / address / containers method get produce application / json responses 200 ok 204 no content 401 unauthorized 404 not foun .
title list units by app path / docker / node / apps / appname / containers method get produce application / json responses 200 ok 204 no content 401 unauthorized 404 not foun .
title node healing info path / healing / node method get produce application / json responses 200 ok 401 unauthorize .
title node healing update path / healing / node method post consume application / x - www - form - urlencoded responses 200 ok 401 unauthorize .
title remove node healing path / healing / node method delete produce application / json responses 200 ok 401 unauthorize .
resetpassword actually resets the password of the user .
title deploy diff path / apps / appname / diff method post consume application / x - www - form - urlencoded responses 200 ok 400 invalid data 403 forbidden 404 not foun .
title deploy list path / deploys method get produce application / json responses 200 ok 204 no conten .
title deploy info path / deploys / deploy method get produce application / json responses 200 ok 401 unauthorized 404 not foun .
buildhealthcheck creates a healthcheck function for the given providername .
getbrokeredservice retrieves the service information from a service that is offered by a broker .
title machine list path / iaas / machines method get produce application / json responses 200 ok 401 unauthorize .
title machine destroy path / iaas / machines / machine id method delete responses 200 ok 400 invalid data 401 unauthorized 404 not foun .
title machine template list path / iaas / templates method get produce application / json responses 200 ok 401 unauthorize .
title template create path / iaas / templates method post consume application / x - www - form - urlencoded responses 201 template created 400 invalid data 401 unauthorized 409 existent templat .
title template destroy path / iaas / templates / template name method delete responses 200 ok 401 unauthorized 404 not foun .
title template update path / iaas / templates / template name method put consume application / x - www - form - urlencoded responses 200 ok 400 invalid data 401 unauthorized 404 not foun .
restclient returns a restclient that is used to communicate with api server by this client implementation .
adds the list of known types to the given scheme .
title saml metadata path / auth / saml method get produce application / xml responses 200 ok 400 invalid dat .
title saml callback path / auth / saml method post responses 200 ok 400 invalid dat .
title volume list path / volumes method get produce application / json responses 200 list volumes 204 no content 401 unauthorize .
title volume info path / volumes / name method get produce application / json responses 200 show volume 401 unauthorized 404 volume not foun .
title volume create path / volumes method post produce application / json responses 201 volume created 401 unauthorized 409 volume already exist .
title volume update path / volumes / name method post produce application / json responses 200 volume updated 401 unauthorized 404 volume not foun .
title volume plan list path / volumeplans method get produce application / json responses 200 list volume plans 401 unauthorize .
title volume delete path / volumes / name method delete produce application / json responses 200 volume deleted 401 unauthorized 404 volume not foun .
title get autoscale config path / autoscale / config method get produce application / json responses 200 ok 401 unauthorize .
title autoscale rules list path / autoscale / rules method get produce application / json responses 200 ok 204 no content 401 unauthorize .
title autoscale set rule path / autoscale / rules method post consume application / x - www - form - urlencoded responses 200 ok 400 invalid data 401 unauthorize .
title delete autoscale rule path / autoscale / rules / id method delete responses 200 ok 401 unauthorized 404 not foun .
title list autoscale history path / autoscale method get produce application / json responses 200 ok 204 no content 401 unauthorize .
title autoscale run path / autoscale / run method post produce application / x - json - stream responses 200 ok 401 unauthorize .
title service instance status path / services / service / instances / instance / status method get responses 200 list services instances 401 unauthorized 404 service instance not foun .
title service instance info path / services / service / instances / instance method get produce application / json responses 200 ok 401 unauthorized 404 service instance not foun .
title service info path / services / name method get produce application / json responses 200 o .
title service doc path / services / name / doc method get responses 200 ok 401 unauthorized 404 not foun .
title service plans path / services / name / plans method get produce application / json responses 200 ok 401 unauthorized 404 service not foun .
title service instance proxy path / services / service / proxy / instance method " * " responses 401 unauthorized 404 instance not foun .
title grant access to service instance path / services / service / instances / permission / instance / team consume application / x - www - form - urlencoded method put responses 200 access granted 401 unauthorized 404 service instance not foun .
register registers an item as shutdownabl .
do shutdowns all registered shutdownable item .
platformlistimagesordefault returns basicimagename when platform is empty for backwards compatibilit .
info returns the additional info about a service instance .
plans returns the service plans .
proxy is a proxy between tsuru and the service .
migrateappscrds creates the necessary crds for every application on a kubernetes cluster .
register register a new migration for later execution with the run functions .
registeroptional register a new migration that will not run automatically when calling the run funcition .
run runs all registered non optional migrations if no " .
units returns the list of units .
acquireapplicationlock acquires an application lock by setting the lock field in the database .
same as acquireapplicationlock but it keeps trying to acquire the lock until timeout is reached .
releaseapplicationlock releases a lock hold on an app .
getbyname queries the database to find an app identified by the given name .
unbind takes all service instances that are bound to the app .
addunits creates n new units within the provisioner .
removeunits removes n units from the app .
setunitstatus changes the status of the given unit .
available returns true if at least one of n units is started or unreachable .
grant allows a team to have access to an app .
getteams returns a slice of teams that have access to the app .
setenv sets the given environment variable in the app .
getenv returns the environment variable if it s declared in the app .
validatenew checks app name format .
validate checks app pool and pla .
instanceenvs returns a map of environment variables that belongs to the given service and service instance .
run executes the command in app units .
getunits returns the internal list of units converted to bind .
getuuid returns the app v4 uuid .
envs returns a map representing the apps environment variables .
setenvs saves a list of environment variables in the app .
unsetenvs removes environment variables from an app .
addcname adds a cname to app .
log adds a log message to the app .
lastlogs returns a list of the last lines log of the app .
swap calls the router .
start starts the app calling the provisioner .
getdbdriver returns the db driver that was registered with a specific nam .
getcurrentdbdriver returns the db driver specified in the configuration file .
title api info path / info method get produce application / json responses 200 o .
proxy is a proxy between tsuru and the service .
title remove app path / apps / name method delete produce application / x - json - stream responses 200 app removed 401 unauthorized 404 not foun .
title app info path / apps / name method get produce application / json responses 200 ok 401 unauthorized 404 not foun .
title set unit status path / apps / app / units / unit method post consume application / x - www - form - urlencoded responses 200 ok 400 invalid data 401 unauthorized 404 app or unit not foun .
title set node status path / node / status method post consume application / x - www - form - urlencoded produce application / json responses 200 ok 400 invalid data 401 unauthorized 404 app or unit not foun .
title grant access to app path / apps / app / teams / team method put responses 200 access granted 401 unauthorized 404 app or team not found 409 grant already exist .
title get envs path / apps / app / env method get produce application / x - json - stream responses 200 ok 401 unauthorized 404 app not foun .
title set cname path / apps / app / cname method post consume application / x - www - form - urlencoded responses 200 ok 400 invalid data 401 unauthorized 404 app not foun .
title app restart path / apps / app / restart method post consume application / x - www - form - urlencoded produce application / x - json - stream responses 200 ok 401 unauthorized 404 app not foun .
title app log path / apps / app / log method post consume application / x - www - form - urlencoded responses 200 ok 400 invalid data 401 unauthorized 404 app not foun .
title app unlock path / apps / app / lock method delete produce application / json responses 200 ok 401 unauthorized 404 app not foun .
title metric envs path / apps / app / metric / envs method get produce application / json responses 200 ok 401 unauthorized 404 app not foun .
title rebuild routes path / apps / app / routes method post produce application / json responses 200 ok 401 unauthorized 404 app not foun .
title set app certificate path / apps / app / certificate method put consume application / x - www - form - urlencoded responses 200 ok 400 invalid data 401 unauthorized 404 app not foun .
title list app certificates path / apps / app / certificate method get consume application / x - www - form - urlencoded responses 200 ok 401 unauthorized 404 app not foun .
newforconfig creates a new clientset for the given config .
newforconfigordie creates a new clientset for the given config and panics if there is an error in the config .
new creates a new clientset for the given restclient .
title remove node container list path / docker / nodecontainers method get produce application / json responses 200 ok 401 unauthorize .
title node container info path / docker / nodecontainers / name method get produce application / json responses 200 ok 401 unauthorized 404 not foun .
getappfromunitid returns app from unit i .
validatelength checks whether the given data match the given rules .
newpipeline creates a new pipeline instance with the given list of actions .
result returns the result of the last action .
execute executes the pipeline .
map sets fields values in dst from src .
mapwithoverwrite will do the same as map except that non - empty dst attributes will be overridden by non - empty src attribute values .
merge will fill any empty for value type attributes on the dst struct using corresponding src attributes if they themselves are not empty .
mergewithoverwrite will do the same as merge except that non - empty dst attributes will be overriden by non - empty src attribute values .
decodejsonpayload reads the request body and decodes the json using json .
baseurl returns a new url object with the host and scheme taken from the request .
urlfor returns the url object from uribase with the path set to path .
getcorsinfo derives corsinfo from request .
middlewarefunc makes recordermiddleware implement the middleware interface .
record the status code .
make sure the local write is called .
makerouter returns the router app .
handle the rest routing and run the user code .
this is run for each new request .
this is run at init time only .
this validates the routes and prepares the trie data structure .
return the result that has the route defined the earlies .
return the first matching route and the corresponding parameters for a given url object .
parse the url string ( complete or just the path ) and return the first matching route and the corresponding parameters .
middlewarefunc makes contenttypecheckermiddleware implement the middleware interface .
middlewarefunc makes accesslogapachemiddleware implement the middleware interface .
convert the apache access log format into a text / templat .
execute the text template with the data derived from the request .
as stored by the auth middlewares .
if qs exists then return it with a leadin " ? " .
when the request entered the timer middleware .
if remoteaddr is set then return is without the port number .
as recorded by the recorder middleware .
as mesured by the timer middleware .
as recorded by the recorder middleware .
middlewarefunc makes jsonindentmiddleware implement the middleware interface .
replace the parent encodejson to provide indentation .
call the parent writeheader .
makepath generates the path corresponding to this route and the provided path parameters .
head is a shortcut method that instantiates a head route .
middlewarefunc makes recovermiddleware implement the middleware interface .
wrapmiddlewares calls the middlewarefunc methods in the reverse order and returns an handlerfunc ready to be executed .
middlewarefunc makes timermiddleware implement the middleware interface .
middlewarefunc makes gzipmiddleware implement the middleware interface .
set the right headers for gzip encoded responses .
middlewarefunc makes authbasicmiddleware implement the middleware interface .
middlewarefunc makes timermiddleware implement the middleware interface .
private function for no .
insert the route in the trie following or creating the nodes corresponding to the path .
private function for now .
same as findroutes .
use pushes one or multiple middlewares to the stack for middlewares maintained in the api object .
middlewarefunc makes poweredbymiddleware implement the middleware interface .
middlewarefunc makes statusmiddleware implement the middleware interface .
getstatus computes and returns a status object based on the request informations accumulated since the start of the process .
middlewarefunc returns a handlerfunc that implements the middleware .
overwrite the content - type to be text / javascrip .
make sure the local write is called .
middlewarefunc makes accesslogjsonmiddleware implement the middleware interface .
init validates the provided confi .
fetch the binary from s .
run executes overseer .
sanitycheck returns true if a check was performe .
convert your main ( ) into a prog ( state ) prog ( ) is run in a child proces .
then create another main which runs the upgrades main ( ) is run in the initial proces .
non - blocking trigger clos .
fetchloop is run in a goroutin .
init validates the provided confi .
init sets the path and interval option .
fetch file from the specified pat .
init validates the provided confi .
fetch the binary from the provided ur .
newconfig returns a new configuration instance with sane defaults .
newclient creates a new client instanc .
asyncclose implements partitionconsume .
close implements partitionconsume .
markoffset implements partitionconsume .
newconsumer initializes a new consume .
markpartitionoffset marks an offset of the provided topic / partition as processed .
markoffsets marks stashed offsets as processed .
resetoffset marks the provided message as processed .
resetpartitionoffset marks an offset of the provided topic / partition as processed .
commitoffsets allows to manually commit previously marked offsets .
close safely closes the consumer and releases all resource .
heartbeat loop .
topic watcher loop .
commit loop .
releases the consumer and commits offsets .
performs a rebalance .
performs the subscription .
send a request to the broker to sync the group on rebalance ( ) .
fetches latest committed offsets for all subscription .
send a request to the broker to leave the group on failes rebalance ( ) and on close ( ) .
markoffset stashes the provided message offse .
markpartitionoffset stashes the offset for the provided topic / partition combinatio .
resetoffset stashes the provided message offset see resetpartitionoffset for explanatio .
offsets returns the latest stashed offsets by topic - partitio .
actual is used to build a cluster based on instances on the cloud provider .
expected is used to build a cluster expected to be on the cloud provider .
getversion returns kubicorn version .
getversionjson returns kubicorn version in json format .
actual returns the actual resource group in azure if it exists .
expected will return the expected resource group as it would be defined in azur .
newsdk is used to create a sdk client to connect to the cloud provider .
providerconfig is a convenience method that will attempt to return a controlplaneproviderconfig for a cluster .
setproviderconfig is a convenience method that will attempt to set a provider config on a particular cluster .
machineproviderconfigs will return all machineproviderconfigs for a cluste .
setmachineproviderconfig will attempt to match a provider config to a machine set on the " name " field .
newcluster will initialize a new cluste .
deploycontrollercmd represents the apply comman .
newretrier creates a new retrier using given properties .
runretry runs a retryable function .
mustgeneraterandombytes generates random bytes or panics if it can .
generaterandombytes .
generate random number in [ 0 .
generate random number in [ 0 .
explaincmd represents the explain comman .
timeordereduuid generates a time ordered uuid .
getconfigcmd represents the apply comman .
promptcmd represents the kubicorn interactive prompt .
runannotated annotates a task with a description and a sequence of symbols indicating task activity until it terminate .
logs a sequence of symbols ( one for each tick ) indicating task activity until a quit is receive .
listcmd represents the list comman .
newubuntucluster creates a simple ubuntu amazon cluste .
newsdk constructs a new openstack sdk for the specified region .
editcmd represents edit comman .
removekey removes an existing key from keyrin .
removekeyusingfile removes an existing key from keyring given a fil .
actual calls do firewall api and returns the actual state of firewall in the cloud .
expected returns the firewall structure of what is expected .
delete removes the firewal .
deletecmd represents the delete comman .
performs a git commit and push of the current cluster changes .
applycmd represents the apply comman .
promptcmd represents the kubicorn interactive prompt .
expandpath returns working directory pat .
completioncmd represents the completion comman .
adoptcmd represents the adopt comman .
strenvdef get environment variable .
intenvdef get environment variable .
boolenvdef get environemnt variable and return bool .
readfromfs reads file from a local path and returns as strin .
versioncmd represents the version comman .
newsignalhandler creates a new handler using given properties .
register starts handling signals .
newsdk is used to create a sdk client to connect to the cloud provider .
beginningofhour beginning of hou .
beginningofday beginning of da .
beginningofweek beginning of wee .
beginningofmonth beginning of mont .
beginningofquarter beginning of quarte .
beginningofyear beginningofyear beginning of yea .
endofminute end of minut .
endofhour end of hou .
endofday end of da .
endofweek end of wee .
endofmonth end of mont .
endofquarter end of quarte .
endofyear end of yea .
mustparse must parse string to time or it will pani .
between check time between the begin .
parse parse string to tim .
parseinlocation parse string to time in locatio .
mustparse must parse string to time or will pani .
mustparseinlocation must parse string to time in location or will pani .
between check now between the begin .
log implements the log method required by backend .
newchannelmemorybackend creates a simple in - memory logging backend which utilizes a go channel for communication .
start launches the internal goroutine which starts processing data from the input channel .
flush waits until all records in the buffered channel have been processed .
stop signals the internal goroutine to exit and waits until it have .
log implements the log method required by backend .
formatted returns the formatted log record string .
message returns the log record message .
setbackend overrides any previously defined backend for this logger .
mustgetlogger is like getlogger but panics if the logger can t be created .
reset restores the internal state of the logging library .
isenabledfor returns true if the logger is enabled for the given level .
fatal is equivalent to l .
fatalf is equivalent to l .
panic is equivalent to l .
panicf is equivalent to l .
criticalf logs a message using critical as log level .
warningf logs a message using warning as log level .
noticef logs a message using notice as log level .
infof logs a message using info as log level .
newlogbackend creates a new logbackend .
setformatter sets the default formatter for all new backends .
muststringformatter is equivalent to newstringformatter with a call to panic on error .
formatfuncname tries to extract certain part of the runtime formatted function name to some pre - defined variation .
log implements the log function required by the backend interface .
loglevel returns the log level from a string representation .
addmodulelevel wraps a log backend with knobs to have different log levels for different modules .
getlevel returns the log level for the given module .
setlevel sets the log level for the given module .
isenabledfor will return true if logging is enabled for the given module .
multilogger creates a logger which contain multiple loggers .
log passes the log record to all backends .
getlevel returns the highest level enabled by all backends .
setlevel propagates the same level to all backends .
isenabledfor returns true if any of the backends are enabled for it .
newlogbackend creates a new logbackend .
log implements the backend interface .
convertcolors takes a list of ints representing colors for log levels and converts them into strings for ansi color formattin .
newsyslogbackend connects to the syslog daemon using unix sockets with the given prefix .
newsyslogbackendpriority is the same as newsyslogbackend .
log implements the backend interface .
setbackend replaces the backend currently set with the given new logging backend .
newcommander returns a new commander with the specified top - level flags and command name .
register adds a subcommand to the supported subcommands in the specified group .
importantflag marks a top - level flag as important .
execute should be called once the top - level - flags on a commander have been initialized .
explain prints a brief description of all the subcommands and the important top - level flags .
explaingroup explains all the subcommands for a particular group .
explaincmd prints a brief description of a single command .
dealias recursivly dealiases a command until a non - aliased command is reached .
execute should be called once the default flags have been initialized by flag .
loadfromdata accepts raw data directly from memory and returns a new configuration representation .
loadfromreader accepts raw data directly from a reader and returns a new configuration representation .
reloaddata reloads configuration file from memor .
appendfiles appends more files to configfile and reload automatically .
getkeylist returns the list of all keys in give section in the same order in the file .
saveconfigfile writes configuration file to local file syste .
find finds exactly one element by css selector .
findbyxpath finds exactly one element by xpath selector .
findbylink finds exactly one anchor element by its text content .
findbylabel finds exactly one element by associated label text .
findbybutton finds exactly one button element with the provided text .
findbyname finds exactly element with the provided name attribute .
findbyclass finds exactly one element with a given css class .
findbyid finds exactly one element that has the given id .
first finds the first element by css selector .
firstbyxpath finds the first element by xpath selector .
firstbylink finds the first anchor element by its text content .
firstbylabel finds the first element by associated label text .
firstbybutton finds the first button element with the provided text .
firstbyname finds the first element with the provided name attribute .
all finds zero or more elements by css selector .
allbyxpath finds zero or more elements by xpath selector .
allbylink finds zero or more anchor elements by their text content .
allbylabel finds zero or more elements by associated label text .
allbybutton finds zero or more button elements with the provided text .
allbyname finds zero or more elements with the provided name attribute .
allbyclass finds zero or more elements with a given css class .
allbyid finds zero or more elements with a given id .
firstbyclass finds the first element with a given css class .
timeout provides an option for specifying a timeout in seconds .
chromeoptions is used to pass additional options to chrome via chromedriver .
newpage opens a page using the provided webdriver url .
joinpage creates a page using existing session url .
destroy closes any open browsers by ending the session .
reset deletes all cookies set for the current domain and navigates to a blank page .
navigate navigates to the provided url .
getcookies returns all cookies on the page .
setcookie sets a cookie on the page .
deletecookie deletes a cookie on the page by name .
clearcookies deletes all cookies on the page .
url returns the current page url .
size sets the current page size in pixels .
screenshot takes a screenshot and saves it to the provided filename .
title returns the page title .
html returns the current contents of the dom for the entire page .
runscript runs the javascript provided in the body .
popuptext returns the current alert .
enterpopuptext enters text into an open prompt popup .
confirmpopup confirms an alert .
cancelpopup cancels an alert .
switchtoparentframe focuses on the immediate parent frame of a frame selected by selection .
switchtorootframe focuses on the original .
switchtowindow switches to the first available window with the provided name ( javascript window .
nextwindow switches to the next available window .
closewindow closes the active window .
windowcount returns the number of available windows .
logtypes returns all of the valid log types that may be used with a logreader .
readnewlogs returns new log messages of the provided log type .
readalllogs returns all log messages of the provided log type .
movemouseby moves the mouse by the provided offset .
doubleclick double clicks the left mouse button at the current mouse position .
click performs the provided click event using the provided button at the current mouse position .
setimplicitwait sets the implicit wait timeout ( in ms ) .
setpageload sets the page load timeout ( in ms ) .
setscripttimeout sets the script timeout ( in ms ) .
click clicks on all of the elements that the selection refers to .
doubleclick double - clicks on all of the elements that the selection refers to .
fill fills all of the fields the selection refers to with the provided text .
uploadfile uploads the provided file to all selected < input type= " file " / > .
select may be called on a selection of any number of < select > elements to select any < option > elements under those < select > elements that match the provided text .
tap performs the provided tap event on each element in the selection .
touch performs the provided touch event at the location of each element in the selection .
flickfinger performs a flick touch action by the provided offset and at the provided speed on exactly one element .
scrollfinger performs a scroll touch action by the provided offset on exactly one element .
at finds an element at the provided index .
newcapabilities returns a capabilities instance with any provided features enabled .
with enables the provided feature ( ex .
without disables the provided feature ( ex .
json returns a json string representing the desired capabilities .
havetitle passes when the expected title is equivalent to the title of the provided page .
haveurl passes when the expected url is equivalent to the current url of the provided page .
havepopuptext passes when the expected text is equivalent to the text contents of an open alert .
haveloggederror passes when all of the expected log messages are logged as errors in the browser console .
text returns the entirety of the text content for exactly one element .
active returns true if the single element that the selection refers to is active .
attribute returns an attribute value for exactly one element .
css returns a css style property value for exactly one element .
selected returns true if all of the elements that the selection refers to are selected .
visible returns true if all of the elements that the selection refers to are visible .
enabled returns true if all of the elements that the selection refers to are enabled .
havecount passes when the expected element count is equal to the actual number of elements in the selection .
haveattribute passes when the expected attribute and value are present on the element .
havecss passes when the expected css property and value are present on the element .
phantomjs returns an instance of a phantomjs webdriver .
edgedriver returns an instance of a edgedriver webdriver .
selendroid returns an instance of a selendroid webdriver .
saucelabs opens a sauce labs session and returns a * page .
switchtoframe focuses on the frame specified by the selection .
count returns the number of elements that the selection refers to .
equalselement returns whether or not two selections of exactly one element refer to the same element .
mousetoelement moves the mouse over exactly one element in the selection .
loggingmiddleware logs requests to the prox .
chainhandlers takes a set of middleware and joins them together into a single middleware .
checkinstallation checks installation of all of the tool .
checkversion checks installation of a given binary using semver - compatible comparision .
getversionforbinary gets the version of a given ruby binar .
getuser finds a use .
login handles the login api call to the user service .
deal with the login request .
deal with the logout request .
show the current user if logged in .
run the web application .
given specifies a provider state .
uponreceiving specifies the name of the test case .
checks to see if someone has tried to submit a json string for an object .
byusername finds a user by their username .
byid finds a user by their i .
simple authentication middlewar .
userlogin logs a user in .
getuser fetches a user if authenticated and exist .
newclient creates a new pact client manager with the provided service .
newclient creates a new pact client manager with default .
startserver starts a remote pact mock server .
listservers lists all known mock server .
stopserver stops a remote pact mock server .
removeallservers stops all remote pact mock servers .
updatemessagepact adds a pact message to a contract fil .
publishpacts publishes a set of pacts to a pact broke .
reifymessage takes a structured object .
get a port given a ur .
get the address given a ur .
sanitiserubyresponse removes ruby - isms from the response content making the output much more human readabl .
stop a service and returns the exit status .
start a service and log its output .
newservice creates a new publishservice with default settings .
newservice creates a new messageservice with default settings .
validate checks all things are well and constructs the cli args to the message servic .
publish sends the pacts to a broker .
validate checks that the minimum fields are provided .
findportinrange iterate through csv or range of ports to find open port valid inputs are " 8081 " .
eachlike specifies that a given element in a json body can be repeated " minrequired " times .
term specifies that the matching should generate a value and also match using a regular expression .
unmarshaljson is a custom json parser for mapmatcher it treats the matchers as string .
takes an object and converts it to a json representatio .
match recursively traverses the provided type and outputs a matcher string for it that is compatible with the pact dsl .
pluckparams converts a pact tag into a pactparams struct supported tag formats minimum slice size pact " min=2 " string regex pact " example=2000 - 01 - 01 .
addmessage creates a new asynchronous consumer expectatio .
addinteraction creates a new pact interaction .
configure loggin .
teardown stops the pact mock server .
verify runs the current test case against a mock service .
writepact should be called writes when all tests have been performed for a given consumer < -> provider pair .
verifyprovider accepts an instance of * testing .
aftereachmiddleware is invoked after any other .
statehandlermiddleware responds to the various states that are given during provider verification statehandler accepts a state object from the verifier and executes any state handlers associated with the provider .
verifymessageprovider accepts an instance of * testing .
verifymessageproviderraw runs provider message verification .
verifymessageconsumerraw creates a new pact message interaction to build a testable interaction .
verifymessageconsumer is a test convience function for verifymessageconsumerraw .
startserver starts a remote pact mock server .
stopserver stops a remote pact mock server .
removeallservers stops all remote pact mock servers .
verifyprovider runs the verification process against a running provider .
reifymessage takes a structured object .
newservice creates a new mockservice with default settings .
setup the management services .
addservicemonitor watches a channel to add services into operation .
removeservicemonitor watches a channel to remove services from operation .
stop a service and returns the exit status .
list all service pids .
command creates an os command to be ru .
start a service and log its output .
call sends a message to the pact servic .
deleteinteractions removes any previous mock service interactions .
addinteraction adds a new pact mock service interaction .
writepact writes the pact file to disk .
given specifies a provider state .
expectstoreceive specifies the content it is expecting to be given from the provider .
withmetadata specifies message - implementation specific metadata to go with the conten .
astype specifies that the content sent through to the consumer handler should be sent as the given typ .
simple authentication middlewar .
userlogin is the login route .
getuser fetches a user if authenticated and exist .
validate checks all things are well and constructs the cli args to the message servic .
newservice creates a new verificationservice with default settings .
region returns the service region infering it from s3 domain .
new returns a new s3 domain defaults to defaultdomain if empt .
bucket returns a bucket on s3 bucket config is initialized to defaultconfi .
putwriter provides a writer to upload data as multipart upload requests .
url returns a parsed url to the given path .
delete deletes the key at path if the path does not exist .
setlogger wraps the standard library log package .
initialize internal logger to log to no - op ( ioutil .
instancekeys requests the aws keys from the instance - based metadata on ec2 assumes only one iam role .
envkeys reads the aws keys from the environmen .
getawskeys gets the aws keys from environment variables or the instance - based metadata on ec2 environment variables are attempted first .
find unix home director .
calls putpart up to ntry times to recover from transient errors .
uploads a part .
try to abort multipart upload .
returns true unless partsize is large enough to achieve maxobjsize with remaining part .
checkdisallowed checks that no environment variables with the prefix are set that we dont know how or want to parse .
process populates the specified struct based on environment variable .
mustprocess is the same as process but panics if an error occur .
usage writes usage information to stderr using the default header and table forma .
usagef writes usage information to the specified io .
usaget writes usage information to the specified io .
scan implements the scanner interface .
value implements the driver valuer interface .
newtime creates a new time .
timefromptr creates a new time that will be null if t is nil .
valueorzero returns the inner value if valid .
marshaljson implements json .
unmarshaljson implements json .
setvalid changes this time s value and sets it to be non - null .
ptr returns a pointer to this time s value .
newbool creates a new boo .
boolfromptr creates a new bool that will be null if f is nil .
unmarshaljson implements json .
unmarshaltext implements encoding .
marshaljson implements json .
setvalid changes this bool s value and also sets it to be non - null .
newstring creates a new strin .
unmarshaljson implements json .
marshaltext implements encoding .
unmarshaltext implements encoding .
setvalid changes this string s value and also sets it to be non - null .
stringfromptr creates a new string that be null if s is nil .
marshaljson implements json .
newint creates a new in .
intfromptr creates a new int that be null if i is nil .
unmarshaljson implements json .
marshaltext implements encoding .
setvalid changes this int s value and also sets it to be non - null .
unmarshaltext implements encoding .
marshaltext implements encoding .
setvalid changes this float s value and also sets it to be non - null .
timefromptr creates a new time that will be null if t is nil or * t is the zero value .
marshaljson implements json .
unmarshaljson implements json .
unmarshaltext implements encoding .
marshaljson implements json .
newgossipchannel returns a named .
gossipunicast implements gossip .
gossipbroadcast implements gossip .
send relays data into the channel topology via random neighbours .
senddown relays data into the channel topology via conn .
gobencode gob - encodes each item and returns the resulting byte slice .
newtokenbucket returns a bucket containing capacity tokens .
blocks until there is a token available .
determine the historic token timestamp representing a full bucke .
prefixrangeend allows get .
newlocalpeer returns a usable localpeer .
connections returns all the connections that the local peer is aware of .
connectionto returns the connection to the named peer .
connectionsto returns all known connections to the named peers .
createconnection creates a new connection .
actor client api synchronous .
if the connection is successful .
sendprotocolmsg implements protocolsender .
actor methods nb the conn .
newstatus returns a status object .
makepeerstatusslice takes a snapshot of the state of peers .
makeunicastroutestatusslice takes a snapshot of the unicast routes in routes .
makebroadcastroutestatusslice takes a snapshot of the broadcast routes in routes .
maketrustedsubnetsslice makes a human - readable copy of the trustedsubnets .
range implements grpc kvserver .
put implements grpc kvserver .
delete implements grpc kvserver .
txn implements grpc kvserver .
compact implements grpc kvserver .
from public api method to proposalc .
from committed entryc .
descriptions returns descriptions for all known peers .
ongc adds a new function to be set of functions that will be executed on all subsequent gc runs .
oninvalidateshortids adds a new function to a set of functions that will be executed on all subsequent gc runs .
choose an available short id at random .
fetchwithdefault will use reference fields of the passed peer object to look up and return an existing .
fetch returns a peer matching the passed name .
like fetch .
fetchbyshortid returns a peer matching the passed short id .
dereference decrements the refcount of the matching peer .
merge an incoming update with our own topology .
garbagecollect takes a lock .
newroutes returns a usable routes based on the localpeer and existing peers .
onchange appends callback to the functions that will be called whenever the routes are recalculated .
unicast returns the next hop on the unicast route to the named peer .
unicastall returns the next hop on the unicast route to the named peer .
broadcast returns the set of peer names that should be notified when we receive a broadcast message originating from the named peer based on established and symmetric connections .
broadcastall returns the set of peer names that should be notified when we receive a broadcast message originating from the named peer based on all connections .
randomneighbours chooses min ( log2 ( n peers ) .
calculate all the routes for the question if * we * want to send a packet to peer x .
calculate the route to answer the question if we receive a broadcast originally from peer x .
newpeer returns a peer .
register injects the mesh .
readfrom implements net .
writeto implements net .
localaddr implements net .
ongossip implements mesh .
ongossipbroadcast implements mesh .
ongossipunicast implements mesh .
grpcserver converts a metcd .
newserver returns a server that ( partially ) implements the etcd v3 api .
newdefaultserver is like newserver .
peernamefromuserinput parses peername from a user - provided string .
peernamefromstring parses peername from a generic string .
bytes encodes peername as a byte slice .
newrouter returns a new router .
newgossip returns a usable gossipchannel from the router .
relay all pending gossip data for each channel via random neighbours .
relay all pending gossip data for each channel via conn .
broadcasttopologyupdate is invoked whenever there is a change to the mesh topology .
ongossipunicast implements gossiper .
ongossipbroadcast receives broadcasts of topologygossipdata .
gossip yields the current topology as gossipdata .
ongossip receives broadcasts of topologygossipdata .
merge implements gossipdata .
encode implements gossipdata .
construct an empty state object .
merge merges the other gossipdata into this one .
merge the set into our state .
merge the set into our state .
merge the set into our state .
ongossipbroadcast implements gossiper .
ongossip should return " everything new i ve just learnt " .
merge implements gossipdata .
generatekeypair is used during encrypted protocol introduction .
formsessionkey is used during encrypted protocol introduction .
newtcpcryptostate returns a valid tcpcryptostate .
send implements tcpsender by encoding the msg .
send implements tcpsender by writing the size of the msg as a big - endian uint32 before the msg .
send implements tcpsender by sealing and sending the msg as - is .
receive implements tcpreciever by gob decoding into a byte slice directly .
receive implements tcpreceiver by making a length - limited read into a byte buffer .
receive implements tcpreceiver by reading from the wrapped tcpreceiver and unboxing the encrypted message .
construct a peer with empty state .
increment the counter by one .
return a copy of our complete state .
merge the gossiped data represented by buf into our state .
merge the gossiped data represented by buf into our state .
merge the gossiped data represented by buf into our state .
makeraftpeer converts a net .
string returns the peer name and nickname .
routes calculates the routing table from this peer to all peers reachable from it .
apply f to all peers reachable by peer .
parsepeeruid parses a decimal peer uid from a string .
swap implements sort .
less implements sort .
dointro executes the protocol introduction .
the v1 procotol consists of the protocol identification / version header .
in the v1 protocol .
newconnectionmaker returns a usable connectionmaker .
initiateconnections creates new connections to the provided peers .
forgetconnections removes direct connections to the provided peers .
targets takes a snapshot of the targets ( direct peers ) .
connectionaborted marks the target identified by address as broken .
connectioncreated registers the passed connection .
connectionterminated unregisters the passed connection .
the delay at the nth retry is a random value in the range [ i - i / 2 .
newgossipsender constructs a usable gossipsender .
send accumulates the gossipdata and will send it eventually .
broadcast accumulates the gossipdata under the given srcname and will send it eventually .
flush sends all pending data .
newgossipsenders returns a usable gossipsenders leveraging the protocolsender .
sender yields the gossipsender for the named channel .
flush flushes all managed senders .
find the path to package main by looking at the root caller .
create creates a channel and returns a token for use by the client .
send sends a message on the channel associated with clientid .
sendjson is a helper function that sends a json - encoded value on the channel associated with clientid .
remaperror fixes any apierror referencing " xmpp " into one referencing " channel " .
fullyqualifiedappid returns the fully - qualified application id .
namespacedcontext wraps a context to support namespaces .
prototoitem converts a protocol buffer item to a go struct .
if err is an appengine .
get gets the item for the given key .
getmulti is a batch version of get .
delete deletes the item for the given key .
deletemulti is a batch version of delete .
increment atomically increments the decimal value in the given key by delta and returns the new value .
incrementexisting works like increment but assumes that the key already exists in memcache and doesnt take an initial value .
set writes the given item .
setmulti is a batch version of set .
add writes the given item .
addmulti is a batch version of add .
compareandswap writes the given item that was previously returned by get .
compareandswapmulti is a batch version of compareandswap .
get gets the item for the given key and decodes the obtained value into v .
set writes the given item .
setmulti is a batch version of set .
add writes the given item .
addmulti is a batch version of add .
compareandswap writes the given item that was previously returned by get .
compareandswapmulti is a batch version of compareandswap .
stats retrieves the current memcache statistics .
flush flushes all items from memcache .
/ * runinbackground makes an api call that triggers an / ah / background request .
runinbackground runs f in a background goroutine in this process .
list returns the names of modules belonging to this application .
numinstances returns the number of instances of the given module / version .
setnuminstances sets the number of instances of the given module .
versions returns the names of the versions that belong to the specified module .
defaultversion returns the default version of the specified module .
start starts the specified version of the specified module .
stop stops the specified version of the specified module .
ancestor returns a derivative query with an ancestor filter .
eventualconsistency returns a derivative query that returns eventually consistent results .
filter returns a derivative query with a field - based filter .
order returns a derivative query with a field - based sort order .
project returns a derivative query that yields only the given fields .
distinct returns a derivative query that yields de - duplicated entities with respect to the set of projected fields .
distincton returns a derivative query that yields de - duplicated entities with respect to the set of the specified fields .
keysonly returns a derivative query that yields only keys .
limit returns a derivative query that has a limit on the number of results returned .
offset returns a derivative query that has an offset of how many keys to skip over before returning results .
batchsize returns a derivative query to fetch the supplied number of results at once .
start returns a derivative query with the given start point .
end returns a derivative query with the given end point .
count returns the number of results for the query .
callnext issues a datastore v3 / next rpc to advance a cursor .
getall runs the query in the given context and returns all keys that match that query .
run runs the query in the given context .
next returns the key of the next result .
cursor returns a cursor for the iterator s current location .
string returns a base - 64 string representation of a cursor .
decode decodes a cursor from its base - 64 string representation .
saveentity saves an entityproto into a propertyloadsaver or struct pointer .
load loads all of the provided fields into l .
deprecated do not use .
deprecated do not use .
deprecated do not use .
namespace returns a replacement context that operates within the given namespace .
typeof returns the type of the given name .
dot returns the type of " typ .
convert between function type strings and lists of types .
joinfunc is the inverse of splitfunc .
split splits " int .
enabled returns whether an api s capabilities are enabled .
load loads all of the provided properties into l .
validpropertyname returns whether name consists of one or more valid go identifiers joined by " .
getstructcodec returns the structcodec for the given struct type .
loadstruct loads the properties from p to dst .
savestruct returns the properties from src as a slice of properties .
servingurl returns a url that will serve an image from blobstore .
deleteservingurl deletes the serving url for an image .
currentoauth returns the user associated with the oauth consumer making this request .
oauthconsumerkey returns the oauth consumer key provided with the current request .
appid returns " appid " or " domain .
string returns a displayable name for the user .
loginurl returns a url that .
loginurlfederated is like loginurl but accepts a user s openid identifier .
logouturl returns a url that .
mappackage turns " appengine " into " google .
newclient returns a client for the given host .
newcontext returns a copy of parent that will cause app engine api calls to be sent to the client s remote host .
newremotecontext returns a context that gives access to the production apis for the application at the given host .
debugf formats its arguments according to the format .
guestbookkey returns the key used for all guestbook entries .
toretryparameter converts retryoptions to pb .
newposttask creates a task that will post to a path with the given form data .
add adds the task to a named queue .
delete deletes a task from a named queue .
deletemulti deletes multiple tasks from a named queue .
lease leases tasks from a queue .
leasebytag leases tasks from a queue .
purge removes all tasks from a queue .
modifylease modifies the lease of a task .
queuestats retrieves statistics about queues .
istimeouterror reports whether err is a timeout error .
filekey finds a stable representation of the caller s file path .
func declares a new function .
valid returns whether a geopoint is within [ - 90 .
withapicallfunc returns a copy of the parent context that will cause api calls to invoke f instead of their normal operation .
apicall performs an api call .
modulehostname returns a hostname of a module instance .
accesstoken generates an oauth2 access token for the specified scopes on behalf of service account of this application .
publiccertificates retrieves the public certificates for the app .
serviceaccount returns a string representing the service account name .
signbytes signs bytes using a private key unique to your application .
fetch fetches readbuffersize bytes starting at the given offset .
seek seeks to the given offset with an effective whence equal to seek set .
keytoproto converts a * key to a reference proto .
multikeytoproto is a batch version of keytoproto .
multivalid is a batch version of key .
it s unfortunate that the two semantically equivalent concepts pb .
keytoreferencevalue is the same as keytoproto except the output is a propertyvalue referencevalue instead of a reference .
checkmultiarg checks that v has type [ ] s .
put saves the entity src into the datastore with key k .
delete deletes the entity for the given key .
deletemulti is a batch version of delete .
deploy calls the provided command to deploy the app from the temporary directory .
next returns the next log record .
prototoapplogs takes as input an array of pointers to loglines .
run starts a query for log records .
run takes the query result produced by a call to run and updates it with more records .
current returns the currently logged - in user .
isadmin returns true if the current user is signed in and is currently registered as an administrator of the application .
iserrfieldmismatch returns whether err is a datastore .
stat returns the blobinfo for a provided blobkey .
send sets the headers on response to instruct app engine to send a blob as the response body .
uploadurl creates an upload url for the form that the user will fill out .
delete deletes a blob .
deletemulti deletes multiple blobs .
newreader returns a reader for a blob .
blobkeyforfile returns a blobkey for a google storage file .
handle arranges for f to be called for incoming xmpp messages .
send sends a message .
invite sends an invitation .
send sends a presence update .
getpresence retrieves a user s presence .
getpresencemulti retrieves multiple users presence .
dial connects to the address addr on the network protocol .
dialtimeout is like dial but takes a timeout .
lookupip returns the given host s ip addresses .
newstructfls returns a fieldloadsaver for the struct pointer p .
savestruct returns the fields from src as a slice of field .
namespaces returns all the datastore namespaces .
kinds returns the names of all the kinds in the current namespace .
keynames returns a slice of the provided keys names ( string ids ) .
kindproperties returns all the indexed properties for the given kind .
todo ( dsymonds ) do we need to support default values .
runintransaction runs f in a transaction .
imports returns true if f imports path .
importspec returns the import spec if f imports path .
declimports reports whether gen contains an import of path .
ispkgdot returns true if t is the expression " pkg .
isptrpkgdot returns true if f is the expression " * pkg .
istopname returns true if n is a top - level unresolved identifier with the given name .
isname returns true if n is an identifier with the given name .
iscall returns true if t is a call to pkg .
if n is an * ast .
refersto returns true if n is a reference to the same object as x .
isemptystring returns true if n is an empty string literal .
countuses returns the number of uses of the identifier x in scope .
rewriteuses replaces all uses of the identifier x and ! x in scope with f ( x .
assignsto returns true if any of the code in scope assigns to or takes the address of x .
newpkgdot returns an ast .
matchlen returns the length of the longest prefix shared by x and y .
deleteimport deletes the import path from the file f .
rewriteimport rewrites any import of path oldpath to path newpath .
fromcontext returns the app engine context or nil if ctx is not derived from an app engine context .
defaultticket returns a ticket used for background context or dev appserver .
flushlog attempts to flush any pending logs to the appserver .
dial connects to the address addr on the network protocol .
lookupip returns the given host s ip addresses .
withdeadline is like context .
keepalive signals that the connection is still in use .
registertransactionsetter registers a function that sets transaction information in a protocol buffer message .
applytransaction applies the transaction t to message pb by using the relevant setter passed to registertransactionsetter .
analyze checks the app for building with the given build tags and returns hasmain .
buildcontext returns the context for building the source .
bundle bundles the app into the named tarfile ( " - " ==stdout ) .
synthesizemain generates a new main func and writes it to the tarball .
imports returns a map of all import directories ( recursively ) used by the app .
findingopath searches the gopath for the named import directory .
copytree copies srcdir to tar file dstdir .
copyfile copies src to tar file dst .
checkmain verifies that there is a single " main " function .
ismain returns whether the given function declaration is a main function .
readfile reads and parses the go source code file and returns whether it has a main function .
initfield is similar to reflect s value .
loadentity loads an entityproto into propertyloadsaver or struct pointer .
validindexnameordocid is the go equivalent of python s validatevisibleprintableasciinotreserved .
open opens the index with the given name .
put saves src to the index .
get loads the document with the given id into dst .
delete deletes a document from the index .
deletemulti deletes multiple documents from the index .
search searches the index for the given query .
fetchmore retrieves more results .
next returns the id of the next result .
cursor returns the cursor associated with the current document ( that is .
facets returns the facets found within the search results .
savedoc converts from a struct pointer or fieldloadsaver / fieldmetadataloadsaver to the document protobuf .
loaddoc converts from protobufs to a struct pointer or fieldloadsaver / fieldmetadataloadsaver .
defaultbucketname returns the name of this application s default google cloud storage bucket .
valid returns whether the key is valid .
equal returns whether two keys are equal .
root returns the furthest ancestor of a key .
marshal marshals the key s string representation to the buffer .
string returns a string representation of the key .
encode returns an opaque representation of the key suitable for use in html and urls .
decodekey decodes a key from the opaque representation returned by encode .
newincompletekey creates a new incomplete key .
newkey creates a new key .
allocateids returns a range of n integer ids with the given kind and parent combination .
allocateidrange allocates a range of ids with specific endpoints .
deprecated do not use .
isoverquota reports whether err represents an api call failure due to insufficient available quota .
fromcontext returns the app engine context or nil if ctx is not derived from an app engine context .
this is only for classic app engine adapters .
send sends an email message .
sendtoadmins sends an email message to the application s administrators .
failures counts the number of failed tests in this repor .
error if typ doesnt match rt .
read a uvarint that encodes the number of nil items to skip .
copy into prefixbyte .
this function should be used to register all interfaces that will be encoded / decoded by go - amino .
this function should be used to register concrete types that will appear in interface fields / elements to be encoded / decoded by go - amino .
a heuristic to guess the size of a registered type and return it as a string .
iinfo typeinfo for the interface for which we must decode a concrete type with prefix bytes pb .
constructs a * typeinfo automatically .
find all conflicting prefixes for concrete types that " implement " the interface .
ensure that prefix - conflicting implementing concrete types are all registered in the priority list .
decodeinterfacejson helps unravel the type name and the stored data .
contract by the time this is called .
dereference pointer recursively .
dereference pointer recursively or return zero value .
returns isdefaultvalue=true iff is ultimately nil or empty after ( recursive ) dereferencing .
returns the default value of a type .
constructconcretetype creates the concrete value as well as the corresponding settable value for it .
for json " .
encodeuvarint is used to encode golang s int .
encodetime writes the number of seconds ( int64 ) and nanoseconds ( int32 ) .
decodetime decodes seconds ( int64 ) and nanoseconds ( int32 ) since january 1 .
marshalbinarylengthprefixedwriter writes the bytes as would be returned from marshalbinarylengthprefixed to the writer w .
panics if error .
marshalbinarybare encodes the object o according to the amino spec .
panics if error .
like unmarshalbinarybare .
like unmarshalbinarybare .
panics if error .
unmarshalbinarybare will panic if ptr is a nil - pointer .
panics if error .
mustmarshaljson panics if an error occurs .
mustunmarshaljson panics if an error occurs .
marshaljsonindent calls json .
dialto makes a ( un - secure ) telnet client connection to the the address specified by addr .
dialtotls makes a ( secure ) telnets client connection to the the address specified by addr .
read receives n bytes sent from the server to the client .
write sends n bytes from p to the server .
newdatareader creates a new datareader reading from r .
listenandservetls acts identically to listenandserve .
newdatawriter creates a new internaldatawriter writing to w .
write writes the telnet ( and telnets ) escaped data for of the data in data to the wrapped io .
produce makes producerfunc fit the producer interface .
promotehandlerfunc turns a handlerfunc into a handler .
serve accepts an incoming telnet or telnets client connection on the net .
listenandserve listens on the tcp network address server .
serve accepts an incoming telnet client connection on the net .
fail prints usage information to stderr and exits with non - zero statu .
writeusage writes usage information to the given write .
mustparse processes command line arguments and exits upon failur .
parse processes command line arguments and stores them in des .
walkfields calls a function for each field of a struct .
parse processes the given command line option .
isflag returns true if a token is a flag such as " - v " or " -- user " but not " - " or " -- " .
parse a value as the appropriate type and store it in the struc .
canparse returns true if the type can be parsed from a strin .
isboolean returns true if the type can be parsed from a single strin .
newfrommap returns a new tree containing the keys from an existing ma .
delete is used to delete a key .
deleteprefix is used to delete the subtree under a prefix returns how many nodes were deleted use this to delete large subtrees efficientl .
delete does a recursive deletio .
get is used to lookup a specific key .
longestprefix is like get .
minimum is used to return the minimum value in the tre .
walkprefix is used to walk the tree under a prefi .
walkpath is used to walk the tree .
recursivewalk is used to do a pre - order walk of a node recursively .
tomap is used to walk the tree and convert it into a ma .
get ip type and calculate ip number ; calculates index too if exist .
read unsigned 32 - bit intege .
read unsigned 128 - bit intege .
populate record with messag .
for debugging purpose .
main draws a left hand and ear of a gopher .
rectangle draws a rectangle using a path between ( x1 .
roundedrectangle draws a rectangle using a path between ( x1 .
ellipse draws an ellipse using a path with center ( cx .
circle draws a circle using a path with center ( cx .
savetopdffile creates and saves a pdf document to a fil .
moveto starts a new path at ( x .
cubiccurveto adds a cubic bezier curve to the current pat .
arcto adds an arc to the pat .
returns new path with flipped y axe .
newglyphcache initializes a glyphcach .
fetch fetches a glyph from the cache .
renderglyph renders a glyph then caches and returns i .
copy returns a copy of a glyp .
fill copies a glyph from the cache .
main draws vertically spaced lines and returns the filename .
draw vertically spaced line .
do the same thing as fmt .
todo needs test .
setcolor sets the color to paint the spans .
newrgbapainter creates a new rgbapainter for the given image .
newgraphiccontext creates a new graphic context from an image .
fillstring draws the text at point ( 0 .
fillstringat draws the text at the specified point ( x .
strokestring draws the contour of the text at point ( 0 .
recalc recalculates scale and bounds values from the font size .
setfont sets the font used to draw text .
setfontsize sets the font size in points ( as in " a 12 point font ) .
stroke strokes the paths with the color specified by setstrokecolo .
fill fills the paths with the color specified by setfillcolo .
fillstroke first fills the paths and than strokes the .
fillstring draws the text at point ( 0 .
fillstringat draws the text at the specified point ( x .
strokestring draws the contour of the text at point ( 0 .
strokestringat draws the contour of the text at point ( x .
drawimage draws the raster image in the current canva .
clearrect fills the specified rectangle with a default transparent colo .
private funciton .
add text element to svg and returns its expected widt .
creates new group from current context attach it to svg and retur .
creates new mask attached to sv .
embed svg font definition to svg tree itself or update existing if already exists for curent font dat .
tracequad generate lines subdividing the curve using a liner flattening threshold helps determines the flattening expectation of the curv .
getfontname gets the current fontdata with fontsize as a strin .
/ * * * create a new graphic context from an image * / .
newfolderfontcache creates folderfontcach .
load a font from cache if exists otherwise it will load the font from fil .
store a font to this cach .
newsyncfolderfontcache creates syncfolderfontcach .
load a font from cache if exists otherwise it will load the font from fil .
store a font to this cach .
main draws a rotated face of the gopher .
newpdf creates a new pdf document with the draw2d fontfolder .
rgb converts a color ( used by draw2d ) into 3 int ( used by gofpdf ) .
clearrect draws a white rectangl .
newgraphiccontext creates a new pdf graphiccontex .
drawimage draws an image as png todo add type ( tp ) as parameter to argument list .
clear draws a white rectangle over the whole pag .
clearrect draws a white rectangle over the specified area .
getstringbounds returns the approximate pixel bounds of the string s at x .
createstringpath creates a path from the string s at x .
fillstringat draws a string at x .
stroke strokes the paths with the color specified by setstrokecolo .
fill fills the paths with the color specified by setfillcolo .
fillstroke first fills the paths and than strokes the .
draw fills and / or strokes path .
overwrite stackgraphiccontext methods setstrokecolor sets the stroke colo .
setfillcolor sets the fill and text colo .
setfontsize sets the font size in points ( as in " a 12 point font ) .
setlinedash sets the line dash patter .
setlinewidth sets the line widt .
setlinecap sets the line cap ( round .
setlinejoin sets the line cap ( round .
transformations scale generally scales the following text .
rotate rotates the following text .
translate moves the following text .
restore restores the current context stack ( transformation .
main draws " hello world " and returns the filename .
draw " hello world " .
savetopngfile create and save an image to a file using png forma .
loadfrompngfile open a png fil .
resource returns a resource filename for testing .
output returns the output filename for testing .
main draws the tige .
main draws geometry and returns the filename .
bubble draws a text balloon .
dash draws a line with a dash patter .
arc draws an arc with a positive angle ( clockwise ) .
cubiccurve draws a cubic curve with its control points .
fillstroke first fills and afterwards strokes a path .
pathtransform scales a path differently in horizontal and vertical direction .
star draws many lines from a center .
draw all figures in a nice 4x3 grid .
main draws the different line caps and joins .
draw a line with an angle with specified line cap and joi .
drawcontour draws the given closed contour at the given sub - pixel offset .
newgraphiccontext creates a new graphic context from an image .
newgraphiccontextwithpainter creates a new graphic context from an image and a painter ( see freetype - go ) .
clear fills the current canvas with a default transparent colo .
clearrect fills the current canvas with a default transparent color at the specified rectangl .
drawimage draws an image into dest using an affine transformation matrix .
drawimage draws the raster image in the current canva .
stroke strokes the paths with the color specified by setstrokecolo .
fill fills the paths with the color specified by setfillcolo .
fillstroke first fills the paths and than strokes the .
main draws the image frame and returns the filename .
draw the image frame with certain parameters .
checksumstring32s returns the checksum of the input data .
checksumstring64s returns the checksum of the input data .
news32 creates a new hash .
sum appends the current hash to b and returns the resulting slice .
news64 creates a new hash .
sum appends the current hash to b and returns the resulting slice .
borrowed from cespar .
checksum64s returns the 64bit xxhash checksum for a single inpu .
getexecutablepath returns the absolute path to the currently running executable .
getexecutablepath returns the absolute path to the currently running executable .
getexecutablepath returns the absolute path to the currently running executable .
readlink returns the file pointed to by the given soft link .
getexecutablepath returns the absolute path to the currently running executable .
stage returns the " stage of daemonizing " .
get returns singleton glg instanc .
setmode sets glg logging mod .
setlevelmode set glg logging mode * per leve .
setprefix set print logger prefi .
getcurrentmode returns current logging mod .
initwriter is initialize glg write .
setwriter sets writer to glg std writer .
setlevelcolor sets the color for each leve .
setlevelwriter sets writer to glg std writer per logging leve .
addstdlevel adds std log level and returns leve .
enablecolor enables color outpu .
enablelevelcolor enables color outpu .
disablelevelcolor disables color outpu .
rawstring returns raw log string exclude time & tag .
tagstringtolevel converts level string to glg .
filewriter generates * osfile -> io .
log writes std log even .
logf writes std log event with forma .
logfunc outputs log level log returned from the functio .
log writes std log even .
logf writes std log event with forma .
logfunc outputs log level log returned from the functio .
info outputs info level lo .
infof outputs formatted info level lo .
infofunc outputs info level log returned from the functio .
info outputs info level lo .
infof outputs formatted info level lo .
infofunc outputs info level log returned from the functio .
success outputs success level lo .
successf outputs formatted success level lo .
successfunc outputs success level log returned from the functio .
success outputs success level lo .
successf outputs formatted success level lo .
successfunc outputs success level log returned from the functio .
debug outputs debug level lo .
debugf outputs formatted debug level lo .
debugfunc outputs debug level log returned from the functio .
debug outputs debug level lo .
debugf outputs formatted debug level lo .
debugfunc outputs debug level log returned from the functio .
warn outputs warn level lo .
warnf outputs formatted warn level lo .
warnfunc outputs warn level log returned from the functio .
warn outputs warn level lo .
warnf outputs formatted warn level lo .
warnfunc outputs warn level log returned from the functio .
customlog outputs custom level lo .
customlogf outputs formatted custom level lo .
customlogfunc outputs custom level log returned from the functio .
customlog outputs custom level lo .
customlogf outputs formatted custom level lo .
customlogfunc outputs custom level log returned from the functio .
print outputs print lo .
printf outputs formatted print lo .
printfunc outputs print log returned from the functio .
print outputs print lo .
println outputs fixed line print lo .
printf outputs formatted print lo .
printfunc outputs print log returned from the functio .
error outputs error lo .
errorf outputs formatted error lo .
errorfunc outputs error level log returned from the functio .
error outputs error lo .
errorf outputs formatted error lo .
errorfunc outputs error level log returned from the functio .
fail outputs failed lo .
failf outputs formatted failed lo .
failfunc outputs fail level log returned from the functio .
fail outputs failed lo .
failf outputs formatted failed lo .
failfunc outputs fail level log returned from the functio .
fatal outputs failed log and exit progra .
fatalf outputs formatted failed log and exit progra .
ismodeenable returns the level has already turned on the loggin .
capturemetrics wraps the given hnd .
get value by key .
haschild wherether the from node has childre .
save saves the cedar to an io .
savetofile saves the cedar to a file .
load loads the cedar from an io .
loadfromfile loads the cedar from a file .
status reports the following statistics of the cedar \ tkeys \ t \ tnumber of keys that are in the cedar .
jump travels from a node from to another node to by following the path path .
key returns the key of the node with the given id .
value returns the value of the node with the given id .
insert adds a key - value pair into the cedar .
update increases the value associated with the key .
delete removes a key - value pair from the cedar .
get returns the value associated with the given key .
prefixmatch returns a list of at most num nodes which match the prefix of the key .
prefixpredict returns a list of at most num nodes which has the key as their prefix .
set parses and updates v from the given version string .
compare tests if v is less than .
slice converts the comparable parts of the semver into a slice of integers .
bumpmajor increments the major field by 1 and resets all other fields to their default value .
bumpminor increments the minor field by 1 and resets all other fields to their default value .
bumppatch increments the patch field by 1 and resets all other fields to their default value .
validateidentifier makes sure the provided identifier satisfies semver spe .
newstream returns a new strea .
addsubscriber will create a new subscriber on a strea .
new will create a server and setup default .
close shuts down the server .
createstream will create a new stream and register i .
removestream will remove a strea .
streamexists checks whether a stream by a given id exist .
publish sends a mesage to every client in a streami .
newclient creates a new clien .
subscribe to a data strea .
subscriberaw to an sse endpoin .
unsubscribe unsubscribes a channe .
neweventstreamreader creates an instance of eventstreamreader .
readevent scans the eventstream for events .
add event to eventlo .
replay events to a subscribe .
readconfig reads userconfig from path and a private key .
writeconfig writes uc to a file specified by path .
readkey reads a private rsa key from path .
writekey writes k to the specified path in pem format .
anykey reads the key from file or generates a new one if gen == true .
samedir returns filename path placing it in the same dir as existing file .
printaccount outputs account into into w using tabwriter .
tmpl executes the given template text on data .
printusage prints usagetemplate to w .
name returns the command s name the first word in the usage line .
do executes domstorage .
do executes domstorage .
do executes domstorage .
do executes domstorage .
do executes domstorage .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
do executes serviceworker .
do executes serviceworker .
do executes serviceworker .
do executes serviceworker .
do executes serviceworker .
do executes serviceworker .
do executes serviceworker .
do executes serviceworker .
do executes serviceworker .
do executes serviceworker .
do executes tethering .
do executes tethering .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
error satisfies the error interface .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
do executes animation .
do executes animation .
do executes animation .
do executes animation .
do executes animation .
do executes animation .
do executes animation .
do executes animation .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
do executes memory .
do executes memory .
do executes memory .
do executes memory .
do executes memory .
withsamplinginterval average number of bytes between samples .
withsuppressrandomness do not randomize intervals between samples .
do executes memory .
do executes memory .
do executes memory .
do executes memory .
do executes memory .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
do executes deviceorientation .
do executes deviceorientation .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
unmarshaleasyjson satisfies easyjson .
do executes webaudio .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
do executes log .
do executes log .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
string returns the modifier as string value .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
withnodeid identifier of the node to get the partial accessibility tree for .
withbackendnodeid identifier of the backend node to get the partial accessibility tree for .
withobjectid javascript object id of the node wrapper to get the partial accessibility tree for .
withfetchrelatives whether to fetch this nodes ancestors .
do executes accessibility .
do executes accessibility .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
do executes performance .
do executes performance .
do executes layertree .
do executes layertree .
do executes layertree .
withminrepeatcount the maximum number of times to replay the snapshot ( 1 .
withminduration the minimum duration ( in seconds ) to replay the snapshot .
withcliprect the clip rectangle to apply when replaying the snapshot .
do executes layertree .
do executes layertree .
withfromstep the first step to replay from ( replay from the very start if not specified ) .
withtostep the last step to replay to ( replay till the end if not specified ) .
withscale the scale to apply while replaying ( defaults to 1 ) .
do executes layertree .
do executes layertree .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaljson supports json .
unmarshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
unmarshaleasyjson satisfies easyjson .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
do executes indexeddb .
do executes indexeddb .
do executes indexeddb .
withkeyrange key range .
do executes indexeddb .
do executes indexeddb .
do executes indexeddb .
do executes indexeddb .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
do executes domsnapshot .
do executes profiler .
do executes profiler .
do executes profiler .
withcallcount collect accurate call counts beyond simple covered or not covered .
withdetailed collect block - based coverage .
do executes profiler .
do executes profiler .
do executes profiler .
do executes profiler .
do executes profiler .
do executes profiler .
do executes profiler .
do executes applicationcache .
do executes applicationcache .
do executes applicationcache .
do executes security .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
do executes heapprofiler .
do executes heapprofiler .
do executes heapprofiler .
withobjectgroup symbolic group name that can be used to release multiple objects .
do executes heapprofiler .
withsamplinginterval average sample interval in bytes .
withtrackallocations [ no description ] .
do executes heapprofiler .
do executes heapprofiler .
withreportprogress if true reportheapsnapshotprogress events will be generated while snapshot is being taken when the tracking is stopped .
do executes heapprofiler .
withreportprogress if true reportheapsnapshotprogress events will be generated while snapshot is being taken .
do executes heapprofiler .
withbrowsercontextid browsercontext to override permissions .
do executes browser .
withbrowsercontextid browsercontext to reset permissions .
do executes browser .
do executes browser .
do executes browser .
do executes browser .
do executes browser .
withquery requested substring in name .
withdelta if true .
do executes browser .
withdelta if true .
do executes browser .
do executes browser .
withtargetid devtools agent host id .
do executes browser .
do executes browser .
withbadgelabel [ no description ] .
withimage png encoded image .
do executes browser .
do executes cachestorage .
do executes cachestorage .
do executes cachestorage .
do executes cachestorage .
withpathfilter if present .
do executes cachestorage .
do executes dom .
withinsertbeforenodeid drop the copy before this node ( if absent .
do executes dom .
withnodeid identifier of the node .
withbackendnodeid identifier of the backend node .
withobjectid javascript object id of the node wrapper .
withdepth the maximum depth at which children should be retrieved .
withpierce whether or not iframes and shadow roots should be traversed when returning the subtree ( default is false ) .
do executes dom .
do executes dom .
withnodeid identifier of the node .
withbackendnodeid identifier of the backend node .
withobjectid javascript object id of the node wrapper .
do executes dom .
do executes dom .
withnodeid identifier of the node .
withbackendnodeid identifier of the backend node .
withobjectid javascript object id of the node wrapper .
do executes dom .
withnodeid identifier of the node .
withbackendnodeid identifier of the backend node .
withobjectid javascript object id of the node wrapper .
do executes dom .
withdepth the maximum depth at which children should be retrieved .
withpierce whether or not iframes and shadow roots should be traversed when returning the subtree ( default is false ) .
do executes dom .
withdepth the maximum depth at which children should be retrieved .
withpierce whether or not iframes and shadow roots should be traversed when returning the subtree ( default is false ) .
do executes dom .
withincludeuseragentshadowdom false to skip to the nearest non - ua shadow root ancestor ( default false ) .
do executes dom .
withnodeid identifier of the node .
withbackendnodeid identifier of the backend node .
withobjectid javascript object id of the node wrapper .
do executes dom .
do executes dom .
do executes dom .
do executes dom .
withinsertbeforenodeid drop node before this one ( if absent .
do executes dom .
withincludeuseragentshadowdom true to search in user agent shadow dom .
do executes dom .
do executes dom .
do executes dom .
do executes dom .
do executes dom .
do executes dom .
do executes dom .
do executes dom .
withdepth the maximum depth at which children should be retrieved .
withpierce whether or not iframes and shadow roots should be traversed when returning the sub - tree ( default is false ) .
do executes dom .
do executes dom .
withnodeid id of the node to resolve .
withbackendnodeid backend identifier of the node to resolve .
withobjectgroup symbolic group name that can be used to release multiple objects .
withexecutioncontextid execution context in which to resolve the node .
do executes dom .
do executes dom .
withname attribute name to replace with new attributes derived from text in case text parsed successfully .
do executes dom .
withnodeid identifier of the node .
withbackendnodeid identifier of the backend node .
withobjectid javascript object id of the node wrapper .
do executes dom .
do executes dom .
do executes dom .
do executes dom .
do executes dom .
do executes dom .
do executes dom .
do executes dom .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
do executes css .
do executes css .
do executes css .
do executes css .
do executes css .
do executes css .
do executes css .
do executes css .
do executes css .
do executes css .
do executes css .
do executes css .
do executes css .
do executes css .
do executes css .
do executes css .
do executes css .
do executes css .
do executes css .
do executes css .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
withoffset seek to the specified offset before reading ( if not specificed .
withsize maximum number of bytes to read ( left upon the agent discretion if not specified ) .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
do executes storage .
do executes storage .
do executes storage .
do executes storage .
do executes storage .
do executes storage .
do executes overlay .
do executes overlay .
withcontentcolor the content box highlight fill color ( default transparent ) .
withcontentoutlinecolor the content box highlight outline color ( default transparent ) .
do executes overlay .
withnodeid identifier of the node to highlight .
withbackendnodeid identifier of the backend node to highlight .
withobjectid javascript object id of the node to be highlighted .
withselector selectors to highlight relevant nodes .
do executes overlay .
withcolor the highlight fill color ( default transparent ) .
withoutlinecolor the highlight outline color ( default transparent ) .
do executes overlay .
withcolor the highlight fill color ( default transparent ) .
withoutlinecolor the highlight outline color ( default transparent ) .
do executes overlay .
withhighlightconfig a descriptor for the highlight appearance of hovered - over nodes .
do executes overlay .
do executes overlay .
withmessage the message to display .
do executes overlay .
do executes overlay .
do executes overlay .
do executes overlay .
do executes overlay .
do executes overlay .
do executes overlay .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
do executes network .
do executes network .
witherrorreason if set this causes the request to fail with the given reason .
withurl if set the request url will be modified in a way that s not observable by page .
withmethod if set this allows the request method to be overridden .
withpostdata if set this allows postdata to be set .
withheaders if set this allows the request headers to be changed .
withauthchallengeresponse response to a requestintercepted with an authchallenge .
do executes network .
withurl if specified .
withdomain if specified .
withpath if specified .
do executes network .
withconnectiontype connection type if known .
do executes network .
withmaxtotalbuffersize buffer size in bytes to use when preserving network payloads ( xhrs .
withmaxresourcebuffersize per - resource buffer size in bytes to use when preserving network payloads ( xhrs .
withmaxpostdatasize longest post body size ( in bytes ) that would be included in requestwillbesent notification .
do executes network .
do executes network .
do executes network .
withurls the list of urls for which applicable cookies will be fetched .
do executes network .
do executes network .
do executes network .
do executes network .
do executes network .
do executes network .
withcasesensitive if true .
withisregex if true .
do executes network .
do executes network .
do executes network .
do executes network .
withurl the request - uri to associate with the setting of the cookie .
withdomain cookie domain .
withpath cookie path .
withsecure true if cookie is secure .
withsamesite cookie samesite type .
withexpires cookie expiration date .
do executes network .
do executes network .
do executes network .
do executes network .
do executes network .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
do executes emulation .
do executes emulation .
do executes emulation .
do executes emulation .
do executes emulation .
do executes emulation .
withcolor rgba of the default background color .
do executes emulation .
withscale scale to apply to resulting view image .
withscreenwidth overriding screen width value in pixels ( minimum 0 .
withscreenheight overriding screen height value in pixels ( minimum 0 .
withpositionx overriding view x position on screen in pixels ( minimum 0 .
withpositiony overriding view y position on screen in pixels ( minimum 0 .
withdontsetvisiblesize do not set visible view size .
withscreenorientation screen orientation override .
withviewport if set .
do executes emulation .
do executes emulation .
do executes emulation .
withconfiguration touch / gesture events configuration .
do executes emulation .
do executes emulation .
withlatitude mock latitude .
withlongitude mock longitude .
withaccuracy mock accuracy .
do executes emulation .
do executes emulation .
do executes emulation .
withmaxtouchpoints maximum touch points supported .
do executes emulation .
withbudget if set .
withmaxvirtualtimetaskstarvationcount if set this specifies the maximum number of tasks that can be run before virtual is forced forwards to prevent deadlock .
withwaitfornavigation if set the virtual time policy change should be deferred until any frame starts navigating .
withinitialvirtualtime if set .
do executes emulation .
withacceptlanguage browser langugage to emulate .
withplatform the platform navigator .
do executes emulation .
withmodifiers bit field representing pressed modifier keys .
withtimestamp time at which the event occurred .
withtext text as generated by processing a virtual key code with a keyboard layout .
withunmodifiedtext text that would have been generated by the keyboard if no modifiers were pressed ( except for shift ) .
withkeyidentifier unique key identifier ( e .
withcode unique dom defined string value for each physical key ( e .
withkey unique dom defined string value describing the meaning of the key in the context of active modifiers .
withwindowsvirtualkeycode windows virtual key code ( default 0 ) .
withnativevirtualkeycode native virtual key code ( default 0 ) .
withautorepeat whether the event was generated from auto repeat ( default false ) .
withiskeypad whether the event was generated from the keypad ( default false ) .
withissystemkey whether the event was a system key event ( default false ) .
withlocation whether the event was from the left or right side of the keyboard .
do executes input .
do executes input .
withmodifiers bit field representing pressed modifier keys .
withtimestamp time at which the event occurred .
withbutton mouse button ( default " none " ) .
withbuttons a number indicating which buttons are pressed on the mouse when a mouse event is triggered .
withclickcount number of times the mouse button was clicked ( default 0 ) .
withdeltax x delta in css pixels for mouse wheel event ( default 0 ) .
withdeltay y delta in css pixels for mouse wheel event ( default 0 ) .
withpointertype pointer type ( default " mouse " ) .
do executes input .
withmodifiers bit field representing pressed modifier keys .
withtimestamp time at which the event occurred .
do executes input .
withtimestamp time at which the event occurred ( default current time ) .
withdeltax x delta in dip for mouse wheel event ( default 0 ) .
withdeltay y delta in dip for mouse wheel event ( default 0 ) .
withmodifiers bit field representing pressed modifier keys .
withclickcount number of times the mouse button was clicked ( default 0 ) .
do executes input .
do executes input .
withrelativespeed relative pointer speed in pixels per second ( default 800 ) .
withgesturesourcetype which type of input events to be generated ( default default .
do executes input .
withxdistance the distance to scroll along the x axis ( positive to scroll left ) .
withydistance the distance to scroll along the y axis ( positive to scroll up ) .
withxoverscroll the number of additional pixels to scroll back along the x axis .
withyoverscroll the number of additional pixels to scroll back along the y axis .
withpreventfling prevent fling ( default true ) .
withspeed swipe speed in pixels per second ( default 800 ) .
withgesturesourcetype which type of input events to be generated ( default default .
withrepeatcount the number of times to repeat the gesture ( default 0 ) .
withrepeatdelayms the number of milliseconds delay between each repeat .
withinteractionmarkername the name of the interaction markers to generate .
do executes input .
withduration duration between touchdown and touchup events in ms ( default 50 ) .
withtapcount number of times to perform the tap ( e .
withgesturesourcetype which type of input events to be generated ( default default .
do executes input .
do executes systeminfo .
do executes systeminfo .
domain returns the chrome devtools protocol domain of the event or command .
withdepth the maximum depth at which node children should be retrieved .
withpierce whether or not iframes and shadow roots should be traversed when returning the subtree ( default is false ) .
do executes domdebugger .
do executes domdebugger .
withtargetname eventtarget interface name .
do executes domdebugger .
do executes domdebugger .
do executes domdebugger .
do executes domdebugger .
withtargetname eventtarget interface name to stop on .
do executes domdebugger .
do executes domdebugger .
do executes domdebugger .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
withexecutor sets the message executor for the context .
execute uses the context s message executor to send a command or event method marshaling the provided parameters .
unmarshaljson satisfies json .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
attributevalue returns the named attribute for the node .
xpath builds the xpath string .
string satisfies stringer interface .
string returns the nodetype as string value .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
string satisfies stringer interface .
withpresentationurl [ no description ] .
do executes cast .
do executes cast .
do executes cast .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
do executes backgroundservice .
do executes backgroundservice .
do executes backgroundservice .
do executes backgroundservice .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
unmarshaleasyjson satisfies easyjson .
withreturnbyvalue whether the result is expected to be a json object that should be sent by value .
withgeneratepreview whether preview should be generated for the result .
do executes runtime .
withobjectid identifier of the object to call function on .
witharguments call arguments .
withsilent in silent mode exceptions thrown during evaluation are not reported and do not pause execution .
withreturnbyvalue whether the result is expected to be a json object which should be sent by value .
withgeneratepreview whether preview should be generated for the result .
withusergesture whether execution should be treated as initiated by user in the ui .
withawaitpromise whether execution should await for resulting value and return once awaited promise is resolved .
withexecutioncontextid specifies execution context which global object will be used to call function on .
withobjectgroup symbolic group name that can be used to release multiple objects .
do executes runtime .
withexecutioncontextid specifies in which execution context to perform script run .
do executes runtime .
do executes runtime .
withobjectgroup symbolic group name that can be used to release multiple objects .
withincludecommandlineapi determines whether command line api should be available during the evaluation .
withsilent in silent mode exceptions thrown during evaluation are not reported and do not pause execution .
withcontextid specifies in which execution context to perform evaluation .
withreturnbyvalue whether the result is expected to be a json object that should be sent by value .
withgeneratepreview whether preview should be generated for the result .
withusergesture whether execution should be treated as initiated by user in the ui .
withawaitpromise whether execution should await for resulting value and return once awaited promise is resolved .
withthrowonsideeffect whether to throw an exception if side effect cannot be ruled out during evaluation .
withtimeout terminate execution after timing out ( number of milliseconds ) .
do executes runtime .
do executes runtime .
do executes runtime .
withownproperties if true .
withaccessorpropertiesonly if true .
withgeneratepreview whether preview should be generated for the results .
do executes runtime .
withexecutioncontextid specifies in which execution context to lookup global scope variables .
do executes runtime .
withobjectgroup symbolic group name that can be used to release the results .
do executes runtime .
do executes runtime .
do executes runtime .
do executes runtime .
withexecutioncontextid specifies in which execution context to perform script run .
withobjectgroup symbolic group name that can be used to release multiple objects .
withsilent in silent mode exceptions thrown during evaluation are not reported and do not pause execution .
withincludecommandlineapi determines whether command line api should be available during the evaluation .
withreturnbyvalue whether the result is expected to be a json object which should be sent by value .
withgeneratepreview whether preview should be generated for the result .
withawaitpromise whether execution should await for resulting value and return once awaited promise is resolved .
do executes runtime .
do executes runtime .
do executes runtime .
do executes runtime .
withexecutioncontextid [ no description ] .
do executes runtime .
do executes runtime .
do executes tracing .
do executes tracing .
do executes tracing .
do executes tracing .
withbufferusagereportinginterval if set .
withtransfermode whether to report trace events as series of datacollected events or to save trace to a stream ( defaults to reportevents ) .
withstreamformat trace data format to use .
withstreamcompression compression format to use .
withtraceconfig [ no description ] .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
withframetimeticks timestamp of this beginframe in renderer timeticks ( milliseconds of uptime ) .
withinterval the interval between beginframes that is reported to the compositor .
withnodisplayupdates whether updates should not be committed and drawn onto the display .
withscreenshot if set .
do executes headlessexperimental .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
withquality the quality of the encoding ( 0 - 1 ) .
withsizeonly whether to only return the size information ( defaults to false ) .
do executes audits .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
withworldname if specified .
do executes page .
do executes page .
withformat image compression format ( defaults to png ) .
withquality compression quality from range [ 0 .
withclip capture the screenshot of a given region only .
withfromsurface capture the screenshot from the surface .
do executes page .
withformat format ( defaults to mhtml ) .
do executes page .
withworldname an optional name which is reported in the execution context .
withgrantuniveralaccess whether or not universal access should be granted to the isolated world .
do executes page .
do executes page .
do executes page .
do executes page .
do executes page .
do executes page .
do executes page .
do executes page .
do executes page .
withprompttext the text to enter into the dialog prompt before accepting .
do executes page .
withreferrer referrer url .
withtransitiontype intended transition type .
withframeid frame id to navigate .
do executes page .
do executes page .
withlandscape paper orientation .
withdisplayheaderfooter display header and footer .
withprintbackground print background graphics .
withscale scale of the webpage rendering .
withpaperwidth paper width in inches .
withpaperheight paper height in inches .
withmargintop top margin in inches .
withmarginbottom bottom margin in inches .
withmarginleft left margin in inches .
withmarginright right margin in inches .
withpageranges paper ranges to print .
withignoreinvalidpageranges whether to silently ignore invalid but successfully parsed page ranges .
withheadertemplate html template for the print header .
withfootertemplate html template for the print footer .
withprefercsspagesize whether or not to prefer page size as defined by css .
do executes page .
withignorecache if true .
withscripttoevaluateonload if set .
do executes page .
do executes page .
do executes page .
withcasesensitive if true .
withisregex if true .
do executes page .
do executes page .
do executes page .
do executes page .
do executes page .
do executes page .
withdownloadpath the default path to save downloaded files to .
do executes page .
do executes page .
withformat image compression format .
withquality compression quality from range [ 0 .
withmaxwidth maximum screenshot width .
withmaxheight maximum screenshot height .
witheverynthframe send every n - th frame .
do executes page .
do executes page .
do executes page .
do executes page .
do executes page .
do executes page .
do executes page .
withgroup specifies the endpoint group to deliver the report to .
do executes page .
do executes page .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaleasyjson satisfies easyjson .
unmarshaleasyjson satisfies easyjson .
unmarshaljson satisfies json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
do executes database .
do executes database .
marshaljson supports json .
unmarshaljson supports json .
marshaljson supports json .
unmarshaljson supports json .
do executes target .
withflatten enables " flat " access to the session via specifying sessionid attribute in the commands .
do executes target .
do executes target .
do executes target .
withbindingname binding name .
do executes target .
do executes target .
do executes target .
withwidth frame width in dip ( headless chrome only ) .
withheight frame height in dip ( headless chrome only ) .
withbrowsercontextid the browser context to create the page in .
withenablebeginframecontrol whether beginframes for this target will be controlled via devtools ( headless chrome only .
do executes target .
withsessionid session to detach .
do executes target .
do executes target .
withtargetid [ no description ] .
do executes target .
do executes target .
withsessionid identifier of the session .
do executes target .
withflatten enables " flat " access to the session via specifying sessionid attribute in the commands .
do executes target .
do executes target .
do executes target .
withpatterns if specified .
withhandleauthrequests if true .
do executes fetch .
withbody a response body .
withresponsephrase a textual representation of responsecode .
do executes fetch .
withurl if set .
withmethod if set .
withpostdata if set .
withheaders if set .
do executes fetch .
do executes fetch .
do executes fetch .
withtargetcallframes [ no description ] .
do executes debugger .
withmaxscriptscachesize the maximum size in bytes of collected scripts ( not referenced by other heap objects ) the debugger can hold .
do executes debugger .
withobjectgroup string object group name to put result into ( allows rapid releasing resulting object handles using releaseobjectgroup ) .
withincludecommandlineapi specifies whether command line api should be available to the evaluated expression .
withsilent in silent mode exceptions thrown during evaluation are not reported and do not pause execution .
withreturnbyvalue whether the result is expected to be a json object that should be sent by value .
withgeneratepreview whether preview should be generated for the result .
withthrowonsideeffect whether to throw an exception if side effect cannot be ruled out during evaluation .
withtimeout terminate execution after timing out ( number of milliseconds ) .
do executes debugger .
withend end of range to search possible breakpoint locations in ( excluding ) .
withrestricttofunction only consider locations which are in the same ( non - nested ) function as start .
do executes debugger .
do executes debugger .
do executes debugger .
do executes debugger .
do executes debugger .
do executes debugger .
do executes debugger .
do executes debugger .
withcasesensitive if true .
withisregex if true .
do executes debugger .
do executes debugger .
do executes debugger .
do executes debugger .
withcondition expression to use as a breakpoint condition .
do executes debugger .
withurl url of the resources to set breakpoint on .
withurlregex regex pattern for the urls of the resources to set breakpoints on .
withscripthash script hash of the resources to set breakpoint on .
withcolumnnumber offset in the line to set breakpoint at .
withcondition expression to use as a breakpoint condition .
do executes debugger .
withcondition expression to use as a breakpoint condition .
do executes debugger .
do executes debugger .
do executes debugger .
do executes debugger .
withdryrun if true the change will not actually be applied .
do executes debugger .
do executes debugger .
do executes debugger .
withbreakonasynccall debugger will issue additional debugger .
do executes debugger .
do executes debugger .
do executes debugger .
listen calls listenf if it is not null .
listenclose calls listenclosef if it is not null .
connected calls connectedf if it is not null .
disconnected calls disconnectedf if it is not null .
openedstream calls openedstreamf if it is not null .
closedstream calls closedstreamf if it is not null .
withnodial constructs a new context with an option that instructs the network to not attempt a new dial when opening a stream .
getnodial returns true if the no dial option is set in the context .
getdialpeertimeout returns the current dialpeer timeout ( or the default ) .
withdialpeertimeout returns a new context with the dialpeer timeout applied .
fullclose closes the stream and waits to read an eof from the other side .
awaiteof waits for an eof on the given stream .
open opens a connectio .
wrap is used to create a new instrumented driver .
contiglen gets the length of the largest read that we can provide to a contiguous slice without an extra linearizing copy of all bytes internally .
from the standard library description of bytes ( ) bytes ( ) returns a slice of the contents of the unread portion of the buffer .
bytestwo returns all readable bytes .
writeandmaybeoverwriteoldestdata always consumes the full buffer p .
writeto and readfrom avoid intermediate allocation and copies .
readfrom avoids intermediate allocation and copies .
advance ( ) non - standard .
next returns the index of the element after from .
legalpos returns the legal index positions .
prevpos returns the index of the element before from .
last returns the index of the last element .
kth presents the contents of the ring as a strictly linear sequence .
deletemostrecentbytes trims back the last n bytes written .
twocontig returns all readable float64 .
earliest returns the earliest written value v .
values returns all readable float64 in a single buffer .
readfloat64 ( ) from bytes .
readwithoutadvance ( ) if you want to read the data and leave it in the buffer .
writeandmaybeoverwriteoldestdata always consumes the full buffer p .
write writes len ( p ) float64 values from p to the underlying data stream .
advance ( ) non - standard .
adopt ( ) non - standard .
readable ( ) returns the number of bytes available for reading .
contiglen gets the length of the largest read that we can provide to a contiguous slice without an extra linearizing copy of all bytes internally .
bytes ( ) returns a slice of the contents of the unread portion of the buffer .
bytestwo returns all readable bytes .
purpose of bytestwo ( ) and advancebytestwo ( ) avoid extra copying of data .
readwithoutadvance ( ) if you want to read the data and leave it in the buffer .
write writes len ( p ) bytes from p to the underlying data stream .
writeto and readfrom avoid intermediate allocation and copies .
readfrom avoids intermediate allocation and copies .
reset quickly forgets any data stored in the ring buffer .
advance ( ) non - standard .
unatomic advance ( ) private implementation of advance ( ) without the locks .
adopt ( ) non - standard .
twocontig returns all readable pointers .
readptrs ( ) from bytes .
readwithoutadvance ( ) if you want to read the data and leave it in the buffer .
advance ( ) non - standard .
adopt ( ) non - standard .
push writes len ( p ) pointers from p to the ring .
pushandmaybeoverwriteoldestdata always consumes the full slice p .
page returns the page for the given page number .
numpage returns the number of pages in the pdf file .
font returns the font with the given name associated with the page .
widths returns the widths of the glyphs in the font .
width returns the width of the given code point .
encoder returns the encoding between font code point sequences and utf - 8 .
open opens a file for reading .
newreader opens a file for reading .
trailer returns the file s trailer value .
kind reports the kind of value underlying v .
bool returns v s boolean value .
int64 returns v s int64 value .
float64 returns v s float64 value .
rawstring returns v s string value .
text returns v s string value interpreted as a " text string ( defined in the pdf spec ) and converted to utf - 8 .
textfromutf16 returns v s string value interpreted as big - endian utf - 16 and then converted to utf - 8 .
name returns v s name value .
key returns the value associated with the given name key in the dictionary v .
keys returns a sorted list of the keys in the dictionary v .
index returns the i th element in the array v .
len returns the length of the array v .
reader returns the data contained in the stream v .
newbuffer returns a new buffer reading from r at the given offset .
set skip + limit on the current query and generates a paginationinfo struct with info for your front en .
cascades a document s properties to related documents .
deletes references to a document from its related document .
runs a cascaded delete operation with one configuratio .
if you need to .
create a new connection and run connect ( ) .
connect to the database using the provided confi .
collectionfromdatabase .
lower cases first char of strin .
collectiononsession .
this doesnt actually do any db interaction .
convenience method which just delegates to mgo .
convenience method which just delegates to mgo .
rawinformationquery sends an information query request to the server .
newclient establishes a new client connection based on a set of options .
newclient creates a new connection to a host given as " hostname " or " hostnameport " .
close closes the xmpp connectio .
starttlsifrequired examines the server s stream features and .
startstream will start a new xml decoder for the connection .
isencrypted will return true if the client is connected using a tls transport .
send sends the message wrapped inside an xmpp message stanza body .
sendorg sends the original text without being wrapped in an xmpp message stanza .
sendkeepalive sends a " whitespace keepalive " as described in chapter 4 .
sendhtml sends the message as html as defined by xep - 007 .
scan xml token stream to find next startelement .
attachbuffer attaches a binary attachment .
attach attaches a file .
inline includes a file as an inline attachment .
ads a header to messag .
tolist returns all the recipients of the emai .
send sends the message .
fromidheader decodes a content - id or message - id header value ( rfc 2392 ) into a utf - 8 string .
toidheader encodes a content - id or message - id header value ( rfc 2392 ) from a utf - 8 string .
getheaderkeys returns a list of header keys seen in this message .
getheader processes the specified header for rfc 2047 encoded words and returns the result as a utf - 8 strin .
getheadervalues processes the specified header for rfc 2047 encoded words and returns all existing values as a list of utf - 8 string .
setheader sets given header name to the given value .
addheader appends given header value to header name without changing existing values .
deleteheader deletes given header .
addresslist returns a mail .
clone returns a clone of the current envelop .
readenvelope is a wrapper around readparts and envelopefrompart .
envelopefrompart uses the provided part tree to build an envelope .
parsetextonlybody parses a plain text message in root that has mime - like headers .
used by part matchers to locate the html body .
used by addresslist to ensure that address lists are properly delimite .
date returns a copy of mailbuilder with the specified date header .
from returns a copy of mailbuilder with the specified from header .
subject returns a copy of mailbuilder with the specified subject header .
to returns a copy of mailbuilder with this name & address appended to the to header .
toaddrs returns a copy of mailbuilder with the specified to addresses .
cc returns a copy of mailbuilder with this name & address appended to the cc header .
ccaddrs returns a copy of mailbuilder with the specified cc addresses .
bcc returns a copy of mailbuilder with this name & address appended to the bcc list .
bccaddrs returns a copy of mailbuilder with the specified as the blind cc list .
replyto returns a copy of mailbuilder with this name & address appended to the to header .
header returns a copy of mailbuilder with the specified value added to the named header .
text returns a copy of mailbuilder that will use the provided bytes for its text / plain part .
html returns a copy of mailbuilder that will use the provided bytes for its text / html part .
addattachment returns a copy of mailbuilder that includes the specified attachment .
addfileattachment returns a copy of mailbuilder that includes the specified attachment .
addinline returns a copy of mailbuilder that includes the specified inline .
send encodes the message and sends it via the smtp server specified by addr .
equals uses the reflect package to test two mailbuilder structs for equality .
encode writes this part and all its children to the specified writer in mime format .
encodeheader writes out a sorted list of headers .
encodecontent writes out the content in the selected encoding .
selecttransferencoding scans content for non - ascii characters and selects b or q encoding .
setparamvalue will ignore empty value .
newbase64cleaner returns a base64cleaner object for the specified reader .
read method for io .
decodetoutf8base64header decodes a mime header per rfc 2047 .
parsemediatype is a more tolerant implementation of go s mime .
fixmangledmediatype is used to insert ; separators into media type strings that lack them .
rfc2047attributename checks if the attribute name is encoded in rfc2047 format rfc2047 example =?utf - 8?b?bmftzt0iw7dcn8kuwoo=?= .
detectmultipartmessage returns true if the message has a recognized multipart content - type heade .
detectattachmentheader returns true .
detecttextheader returns true .
detectbinarybody returns true if the mail header defines a binary body .
breadthmatchfirst performs a breadth first search of the part tree and returns the first part that causes the given matcher to return tru .
breadthmatchall performs a breadth first search of the part tree and returns all parts that cause the given matcher to return tru .
depthmatchfirst performs a depth first search of the part tree and returns the first part that causes the given matcher to return tru .
depthmatchall performs a depth first search of the part tree and returns all parts that causes the given matcher to return tru .
toascii converts unicode to ascii by stripping accents and converting some special characters into their ascii approximations .
newpart creates a new part object .
addchild adds a child part to either firstchild or the end of the children nextsibling chain .
textcontent indicates whether the content is text based on its content type .
setupheaders reads the header .
setupcontentheaders uses content - type media params and content - disposition headers to populate the disposition .
convertfromdetectedcharset attempts to detect the character set for the given part .
convertfromstatedcharset returns a reader that will convert from the charset specified for the current * part to utf - 8 .
decodecontent performs transport decoding ( base64 .
clone returns a clone of the current part .
readparts reads a mime document from the provided reader and parses it into tree of part objects .
uuid generates a random uuid according to rfc 4122 .
newqpcleaner returns a qpcleaner for the specified reader .
read method for io .
error formats the enmime .
addwarning builds a severe error and appends to the part error slice .
addwarning builds a non - severe error and appends to the part error slice .
wrap builds a byte slice from strs .
converttoutf8string uses the provided charset to decode a slice of bytes into a normal utf - 8 string .
findcharsetinhtml looks for charset in the html meta tag ( v4 .
joinaddress formats a slice of address structs such that they can be used in a to or cc header .
printf implements fmt .
formatpart pretty prints the part tre .
newboundaryreader returns an initialized boundaryreade .
read returns a buffer containing the content up until boundar .
next moves over the boundary to the next part .
isdelimiter returns true for -- boundary \ \ but not -- boundary -- .
isterminator returns true for -- boundary -- .
locate boundaryprefix in buf .
parse converts a byte array containing r sexp to a golang object .
assign produces a command to assign a value to a variable within a go sessio .
newrclient creates a rclient which will run commands on the rserve server located at the provided host and por .
newrclientwithauth creates a rclient with the specified credentials and rserve server detail .
register allows user to add his own data generators for special cases that we could not cover with the generators that fako includes by default .
fuzz fills passed interface with random data based on the struct field type .
findfakefunctionfor returns a faker function for a fako identifie .
fuzzvaluefor generates random values for the following types string .
apply applies the given options to this option .
tooption converts this options to a single option .
waitthenclose is spawned in a goroutine when the channel is registered .
send sends an event on the event channel .
getpublickey retrieves the public key associated with the given peer id from the value store .
newmovingaverage constructs a movingaverage that computes an average with the desired characteristics in the moving window or exponential decay .
add adds a value to the series and updates the moving average .
add adds a value to the series and updates the moving average .
set sets the ewma s value .
calckeys50 calculates the keys used in rar 5 archive processing .
getkeys reads kdfcount and salt from b and returns the corresponding encryption keys .
checkpassword calculates if a password is correct given password check data and keys .
parsefileencryptionrecord processes the optional file encryption record from a file header .
parseencryptionblock calculates the key for block encryption .
next advances to the next file block in the archiv .
newarchive50 creates a new fileblockreader for a version 5 archive .
read reads and decrypts one or more input blocks into p .
read reads and decrypts data into p .
readbyte returns the next decrypted byte .
newcipherblockreader returns a cipherblockreader that decrypts the given io .
newaesdecryptreader returns a cipherblockreader that decrypts input from a given io .
limitbytereader returns a limitedbytereader that reads from r and stops with io .
mode returns an os .
nextblockinfile reads the next file block in the current file at the current archive file position .
next advances to the next packed file in the rar archive .
read reads the packed data for the current file into p .
read reads from the current file in the rar archive .
next advances to the next file in the archive .
newreader creates a reader reading from r .
openreader opens a rar archive specified by the name and returns a readcloser .
getv3filter returns a v3 filter function from a code byte slice .
init intializes the decoder for decoding a new file .
readvmcode reads the raw bytes for the code / commands used in a vm filte .
readblockheader determines and initializes the current decoder for a new decode block .
readcodelengthtable reads a new code length table into codelength from br .
shrinkstates shrinks the state list down to size state .
expandstates expands the states list by on .
pushbyte puts a byte on the heap and returns a state .
succbyte returns a byte from the heap given a state .
succcontext returns a context given a state .
calculates the key and iv for aes decryption given a password and salt .
parsedostime converts a 32bit dos time value to time .
readexttimes reads and parses the optional extra time field from the file header .
next advances to the next file block in the archiv .
newarchive15 creates a new fileblockreader for a version 1 .
readfilter5data reads an encoded integer used in v5 filters .
writebyte writes c to the end of the windo .
copybytes copies len bytes at off distance from the end to the end of the window .
read reads bytes from the beginning of the window into .
queuefilter adds a filterblock to the end decodereader s filters .
processfilters processes any filters valid at the current read index and stores the output in outbuf .
fill fills the decodereader s windo .
read decodes data and stores it in p .
readfull wraps io .
findsig searches for the rar signature and version at the beginning of a file .
execute runs a list of commands on the vm .
newvm creates a new rar virtual machine using the byte slice as memory .
limitbitreader returns a bitreader that reads from br and stops with io .
readuint32 reads a rar v3 encoded uint3 .
readfull reads len ( p ) bytes into p .
step 3 is the removal of the derivational suffix .
stem an english word .
step 6 un - accent .
step 5 undouble non - vowel endings .
step 2a is the removal of verb suffixes beginning y .
step 3 search for the longest among the following suffixes .
step 4 is the undoubling of double non - vowel endings and removal of superlative endings .
stem a word in the specified language .
find the starting point of the regions r1 .
step 1c is the normalization of various " y " endings .
step 3 is the stemming of various longer sufficies found in r1 .
step 4 search for the longest among the following suffixes .
capitalize y .
step 3 is the removal of residual suffixes .
step 0 is to strip off apostrophes and " s " .
finds the region after the first non - vowel following a vowel .
step 1 is the stemming of various endings found in r1 including " heterna " .
find the starting point of the regions r1 .
step 1 is the removal of standard suffixes .
remove perfective gerund endings and return true if one was removed .
remove adjectival endings and return true if one was removed .
step 5 is the stemming of " e " and " l " sufficies found in r2 .
stem an spanish word .
stem an russian word .
create a new snowballword struc .
replace a suffix and adjust r1start and r2start as needed .
remove the last n runes from the snowballword .
replace a suffix and adjust r1start and r2start as needed .
resets r1start and r2start to ensure they are within bounds of the current rune slice .
return a slice of w .
returns true if x runes would fit into r1 .
returns true if x runes would fit into r2 .
returns true if x runes would fit into rv .
return the first prefix found or the empty string .
return true if w .
return true if w ends with suffixrunes .
find the first suffix that ends at endpos in the word among those provided ; then .
find the first suffix in the word among those provided ; then .
removes the first suffix found that is in word .
removes the first suffix foun .
return the first suffix found or the empty string .
applies various transformations necessary for the other .
step 3 search for the longest among the following suffixes .
step 2 search for one of the following suffixes in r1 .
replaces all different kinds of apostrophes with a single kind " " -- that is .
trim off leading apostropes .
capitalize all y s preceded by vowels or starting a word .
uncapitalize all y s .
a word is called short if it ends in a short syllable .
return true if the indicies at w .
step 1a is normalization of various special " s " - endings .
set sets the value by key and associates it with the current goroutine .
get gets the value by key as it exists for the current goroutine .
cleanup removes all data associated with this goroutine .
getvalues unlinks two goroutine .
linkgrs links two goroutines together .
unlinkgrs unlinks two goroutine .
gets an app s endpoint with the specified pat .
curls an app s endpoint and exit successfully before the specified timeou .
curls an app s endpoint and exit successfully before the default timeou .
curls an app s root endpoint and exit successfully before the default timeou .
the key thing that makes a password secure is the entropy that comes from a generator of true random numbers .
gettags returns a slice of tags .
gettagsasuniquestrings gets all tags as a slice of unique strings .
is given rune listed as a terminato .
ensures the given slice of strings are unique and that none are empty string .
link returns the url to the repository that is intended for access by humans using a web browser ( i .
scan implements database / sql .
new returns the location middleware with user - defined custom configuration .
generatersakeypair generates a new rsa private and public ke .
verify compares a signature against input dat .
encrypt returns encrypted bytes from the inpu dat .
sign returns a signature of the input dat .
getpublic returns a public ke .
decrypt returns decrypted bytes of the input encrypted byte .
unmarshalrsaprivatekey returns a private key from the input x509 byte .
generatekeypair generates a private and public ke .
generatekeypairwithreader returns a keypair of the given type and bitsiz .
generateekeypair returns an ephemeral public key and returns a function that will compute the shared secret key .
unmarshalpublickey converts a protobuf serialized public key into its representative objec .
marshalpublickey converts a public key object into a protobuf serialized public ke .
unmarshalprivatekey converts a protobuf serialized private key into its representative objec .
marshalprivatekey converts a key object into its protobuf serialized form .
keyequal checks whether tw .
generateecdsakeypair generates a new ecdsa private and public ke .
generateecdsakeypairwithcurve generates a new ecdsa private and public key with a speicified curv .
ecdsakeypairfromkey generates a new ecdsa private and public key from an input private ke .
unmarshalecdsaprivatekey returns a private key from x509 byte .
unmarshalecdsapublickey returns the public key from x509 byte .
equals compares to private key .
sign returns the signature of the input dat .
equals compares to public key .
verify compares data to a signatur .
generatesecp256k1key generates a new secp256k1 private and public key pai .
unmarshalsecp256k1privatekey returns a private key from byte .
unmarshalsecp256k1publickey returns a public key from byte .
raw returns the bytes of the ke .
equals compares two private key .
sign returns a signature from input dat .
raw returns the bytes of the ke .
equals compares two public key .
verify compares a signature against the input dat .
raw private key bytes .
sign returns a signature from an input message .
equals compares two ed25519 public keys .
verify checks a signature agains the input data .
unmarshaled25519publickey returns a public key from input bytes .
unmarshaled25519privatekey returns a private key from input bytes .
distanceforstrings returns the edit distance between source and target .
ratioforstrings returns the levenshtein ratio for the given strings .
ratioformatrix returns the levenshtein ratio for the given matrix .
editscriptforstrings returns an optimal edit script to turn source into target .
editscriptformatrix returns an optimal edit script based on the given levenshtein matrix .
writematrix writes a visual representation of the given matrix for the given strings to the given writer .
logmatrix writes a visual representation of the given matrix for the given strings to os .
new describes a new filename located at the given absolute path .
getowner returns who owns the lockfile .
unlock a lock again .
newbase creates a new instance of base with default values set .
setfallbacklogger sets a logger to be used if there aren t any loggers added or any of the added loggers are in a degraded or unhealthy state .
addlogger adds a new logger instance to the bas .
/ * removelogger will run shutdownlogger on the given logger and then remove the given logger from the list in base * / .
/ * clearloggers will shut down and remove any loggers added to the base .
/ * initloggers will run initlogger on each logger that has been added to the base .
/ * shutdownloggers will run shutdownlogger on each logger in base .
/ * setattr will set the value for the attribute with the name key .
logwithtime will log a message at the provided level to all added loggers with the timestamp set to the value of ts .
log will log a message at the provided level to all added loggers with the timestamp set to the time log was called .
dbgf is a short - hand version of debug .
debug logs msg to all added loggers at loglevel .
/ * debugf uses msg as a format string with subsequent parameters as values and logs the resulting message to all added loggers at loglevel .
/ * debugm uses msg as a format string with subsequent parameters as values and logs the resulting message to all added loggers at loglevel .
info logs msg to all added loggers at loglevel .
/ * infof uses msg as a format string with subsequent parameters as values and logs the resulting message to all added loggers at loglevel .
/ * infom uses msg as a format string with subsequent parameters as values and logs the resulting message to all added loggers at loglevel .
warnf is a short - hand version of warning .
warnm is a short - hand version of warning .
/ * warning uses msg as a format string with subsequent parameters as values and logs the resulting message to all added loggers at loglevel .
/ * warningf uses msg as a format string with subsequent parameters as values and logs the resulting message to all added loggers at loglevel .
/ * warningm uses msg as a format string with subsequent parameters as values and logs the resulting message to all added loggers at loglevel .
errf is a short - hand version of error .
/ * error uses msg as a format string with subsequent parameters as values and logs the resulting message to all added loggers at loglevel .
/ * errorf uses msg as a format string with subsequent parameters as values and logs the resulting message to all added loggers at loglevel .
/ * errorm uses msg as a format string with subsequent parameters as values and logs the resulting message to all added loggers at loglevel .
/ * fatal uses msg as a format string with subsequent parameters as values and logs the resulting message to all added loggers at loglevel .
/ * fatalf uses msg as a format string with subsequent parameters as values and logs the resulting message to all added loggers at loglevel .
/ * fatalm uses msg as a format string with subsequent parameters as values and logs the resulting message to all added loggers at loglevel .
die will log a message using fatal .
diem will log a message using fatalm .
newtemplatewithfuncmap creates a new template from the given string and a template funcmap .
execute takes a templatemsg and applies it to the go template .
newtemplatemsg will create a new templatemsg with values from the given parameter .
newlogadapterfor creates a logadapter that wraps the given loger with the given attributes .
setattr sets the attribute key to value for this logadapter onl .
logwithtime will log a message at the provided level to all loggers added to the base associated with this logadapter .
log will log a message at the provided level to all loggers added to the base associated with this logadapte .
dbgf is a short - hand version of debug .
dbgm is a short - hand version of debug .
debug logs msg to all added loggers at loglevel .
/ * debugf uses msg as a format string with subsequent parameters as values and logs the resulting message to all added loggers at loglevel .
/ * debugm uses msg as a format string with subsequent parameters as values and logs the resulting message to all added loggers at loglevel .
info logs msg to all added loggers at loglevel .
/ * infof uses msg as a format string with subsequent parameters as values and logs the resulting message to all added loggers at loglevel .
/ * infom uses msg as a format string with subsequent parameters as values and logs the resulting message to all added loggers at loglevel .
warnf is a short - hand version of warning .
/ * warning uses msg as a format string with subsequent parameters as values and logs the resulting message to all added loggers at loglevel .
/ * warningf uses msg as a format string with subsequent parameters as values and logs the resulting message to all added loggers at loglevel .
/ * warningm uses msg as a format string with subsequent parameters as values and logs the resulting message to all added loggers at loglevel .
errf is a short - hand version of error .
/ * error uses msg as a format string with subsequent parameters as values and logs the resulting message to all added loggers at loglevel .
/ * errorf uses msg as a format string with subsequent parameters as values and logs the resulting message to all added loggers at loglevel .
/ * errorm uses msg as a format string with subsequent parameters as values and logs the resulting message to all added loggers at loglevel .
/ * fatal uses msg as a format string with subsequent parameters as values and logs the resulting message to all added loggers at loglevel .
/ * fatalf uses msg as a format string with subsequent parameters as values and logs the resulting message to all added loggers at loglevel .
/ * fatalm uses msg as a format string with subsequent parameters as values and logs the resulting message to all added loggers at loglevel .
die will log a message using fatal .
diem will log a message using fatalm .
newattrsfrommap will create a new attrs struct with the given attributes pre - populate .
newattrsfromattrs is a convenience function that will accept zero or more existing attrs .
mergeattrs accepts another existing attrs and merges the attributes into its own .
setattr will set key to the provided value .
getattr gets the value of the attribute with the provided name .
removeattr will remove the attribute with the provided name .
attrs will return a map of the attributes added to the struct .
debugm executes the same function on the default base instanc .
infom executes the same function on the default base instanc .
warningm executes the same function on the default base instanc .
errm executes the same function on the default base instanc .
errorm executes the same function on the default base instanc .
fatalm executes the same function on the default base instanc .
dief executes the same function on the default base instanc .
diem executes the same function on the default base instanc .
tologlevel will take a string and return the appropriate log level for the string if known .
run enables mainthread package functionality .
callerr queues function f on the main thread and returns an error returned by f .
new creates a stackdriverhook using the provided options that is suitible for using with logrus for logging to google stackdriver .
fire writes the message to the stackdriver entry service .
levels is an option that sets the logrus levels that the stackdriverhook will create log entries for .
projectid is an option that sets the project id which is needed for the log name .
entriesservice is an option that sets the google api entry service to use with stackdriver .
loggingservice is an option that sets the google api logging service to use .
errorservice is an option that sets the google api error reporting service to use .
monitoredresource is an option that sets the monitored resource to send with each log entry .
logname is an option that sets the log name to send with each log entry .
errorreportinglogname is an option that sets the log name to send with each error message for error reporting .
labels is an option that sets the labels to send with each log entry .
partialsuccess is an option that toggles whether or not to write partial log entries .
googlecomputecredentials is an option that loads the google service account credentials from the gce metadata associated with the gce compute instance .
newencoder returns a new encoder that outputs to w .
newdecoder returns a new decoder that takes input from r .
newstreamencoder returns a new stream encoder that outputs to w .
newstreamdecoder returns a new stream decoder that takes input from r .
register adds a codec for a mimetype to r .
unregister removes the codec for a mimetype from r .
lookup returns the codec associated with mimetype .
codecs returns a map of all codecs registered in reg .
type returns the resp error type .
parseint parses a decimanl representation of an int64 from b .
parseuinthex parses a hexadecimanl representation of a uint64 from b .
install adds an adapter for typ .
adapterof returns the adapter for typ .
appendduration appends a human - readable representation of d to b .
fmtfrac formats the fraction of v / 10 * * prec ( e .
fmtint formats v into the tail of buf .
newdecoder returns a new json decoder that parses values from r .
newstreamdecoder returns a new json stream decoder that parses values from r .
unmarshal decodes a json representation of v from b .
string returns a human readable representation of the type .
zerovalueof and the related cache is used to keep the zero values so they dont need to be reallocated every time they re used .
newvalueparser creates a new parser that exposes the value v .
parsetag parses a raw tag obtained from a struct field .
parsetagjson is similar to parsetag but only supports features supported by the standard encoding / json package .
newencoder returns a new json encoder that writes to w .
newstreamencoder returns a new json stream encoder that writes to w .
newprettyencoder returns a new json encoder that writes to w .
newprettystreamencoder returns a new json stream encoder that writes to w .
marshal writes the json representation of v to a byte slice returned in b .
newencoder returns a new encoder that outputs values to e .
encodearray provides the implementation of the array encoding algorithm .
encodemap provides the implementation of the map encoding algorithm .
newstreamencoder returns a new stream encoder that outputs to e .
open explicitly tells the encoder to start the stream .
close terminates the stream encoder .
encode writes v to the stream .
newstructtype takes a go type as argument and extract information to make a new structtype value .
lookup takes a go type as argument and returns the matching structtype value .
clear empties the cache .
checkuint64bounds verifies that v is smaller than max .
checkint64bounds verifies that v is within min and max .
newdecoder returns a decoder object that uses p .
decode expects v to be a pointer to a value in which the decoder will load the next parsed data .
decodearray provides the implementation of the algorithm for decoding arrays .
decodemap provides the implementation of the algorithm for decoding maps .
newstreamdecoder returns a new stream decoder that takes input from p .
len returns the number of values remaining to be read from the stream .
err returns the last error returned by the decode method .
decodes the next value from the stream into v .
encoder returns a new streamencoder which can be used to re - encode the stream decoded by d into e .
read logger flags from the logflags environment variable .
levelfromstring returns a level based on the input string s .
newbackend creates a logger backend from a writer .
appends a header in the default format yyyy - mm - dd hhmmss .
callsite returns the file name and line number of the callsite to the subsystem logger .
print outputs a log message to the writer associated with the backend after creating a prefix for the given level and tag according to the formatheader function and formatting the provided arguments using the default formatting rules .
logger returns a new logger for a particular subsystem that writes to the backend b .
trace formats message using the default formats for its operands .
tracef formats message according to format specifier .
debug formats message using the default formats for its operands .
debugf formats message according to format specifier .
info formats message using the default formats for its operands .
infof formats message according to format specifier .
warn formats message using the default formats for its operands .
warnf formats message according to format specifier .
error formats message using the default formats for its operands .
errorf formats message according to format specifier .
critical formats message using the default formats for its operands .
criticalf formats message according to format specifier .
level returns the current logging level this is part of the logger interface implementation .
setlevel changes the logging level to the passed level .
allow allows permission mode for role .
deny deny permission mode for role .
matchedroles return defined roles from use .
hasrole check if current user has rol .
concat concat two permissions into a new on .
allow allows permission mode for role .
deny deny permission mode for role .
haspermission check roles has permission for mode or no .
concatpermissioner concat permissione .
haspermission check has permission for permissioners or no .
register register role with condition .
newpermission initialize permissio .
allow allows permission mode for role .
get role definatio .
matchedroles return defined roles from use .
hasrole check if current user has rol .
isptrfromheap reports whether the inferior at address a contains a pointer .
isptr reports whether the inferior at address a contains a pointer .
findobject finds the object containing a .
foreachobject calls fn with each object in the go heap .
foreachroot calls fn with each garbage collection root .
addr returns the starting address of x .
size returns the size of x in bytes .
type returns the type and repeat count for the object x .
foreachptr calls fn for all heap pointers it finds in x .
foreachrootptr behaves like foreachptr but it starts with a root instead of an object .
edges1 calls fn for the edges found in an object of type t living at offset off in the root r .
setheapptr records that the memory at heap address a contains a pointer .
findheapinfo finds the heapinfo structure for a .
same as findheapinfo .
dwarfsize is used to compute the size of a dwarf type .
gocorename generates the name this package uses to refer to a dwarf type .
add records that pcs in the range [ min .
sort must be called after all the adds .
finds a func for the given address .
read parses a pctab from the core file at address data .
readvarint reads a varint from the core file .
useline is like cobra .
commandpath is like cobra .
readcore reads corefile and returns core and gocore process states .
typename returns a string representing the type of this object .
fieldname returns the name of the field at offset off in x .
typefieldname returns the name of the field at offset off in t .
findfunc returns the function which contains the code at address pc .
core takes a loaded core file and extracts go information from it .
foreachreverseptr calls fn for all pointers it finds pointing to y .
address returns the address that a region of pointer type points to .
int returns the int value stored in r .
uintptr returns the uintptr value stored in r .
cast the region to the given type .
deref loads from a pointer .
uint64 returns the uint64 value stored in r .
uint32 returns the uint32 value stored in r .
int32 returns the int32 value stored in r .
uint16 returns the uint16 value stored in r .
uint8 returns the uint8 value stored in r .
string returns the value of the string stored in r .
sliceindex indexes a slice ( a [ n ] ) .
sliceptr returns the pointer inside a slice .
slicelen returns the length of a slice .
field returns the part of r which contains the field f .
all the read * functions below will panic if something goes wrong .
readuint8 returns a uint8 read from address a of the inferior .
readuint16 returns a uint16 read from address a of the inferior .
readuint32 returns a uint32 read from address a of the inferior .
readuint64 returns a uint64 read from address a of the inferior .
readint8 returns an int8 read from address a of the inferior .
readint16 returns an int16 read from address a of the inferior .
readint32 returns an int32 read from address a of the inferior .
readint64 returns an int64 read from address a of the inferior .
readuintptr returns a uint of pointer size read from address a of the inferior .
readint returns an int ( of pointer size ) read from address a of the inferior .
readptr returns a pointer loaded from address a of the inferior .
readcstring reads a null - terminated string starting at address a .
source returns the backing file and offset for the mapping .
for copyonwrite mappings .
findmapping is simple enough that it inlines .
max returns the larger of a and b .
min returns the smaller of a and b .
align rounds a up to a multiple of x .
findvertexbyname returns the root / object named by n .
eval is eval from the papers .
compress is compress from the papers .
link is link from the papers .
reverse computes and stores reverse edges for each vertex .
calcsize calculates the total retained size for each vertex .
returns the name of the field at offset off in x .
readable reports whether the address a is readable .
readablen reports whether the n bytes starting at address a are readable .
writeable reports whether the address a was writeable ( by the inferior at the time of the core dump ) .
symbols returns a mapping from name to inferior address .
splitmappingsat ensures that a is not in the middle of any mapping .
dynamictype returns the concrete type stored in the interface type t at address a .
lower your expectation .
splithostport splits network address of the form " hostport " into host and port .
normalizestring returns normalized url string .
resolve resolves the url host to its ip address .
resolve resolves the url host to its ip address .
equal reports whether tokens a .
newdefaultclassifier creates a new classifier for ascii characters .
next returns the next word .
newtokenizer creates a new tokenizer from an input stream .
split partitions a string into a slice of strings .
between extracts a string between left and right strings .
betweenf is the filter form for between .
camelize return new string which removes any underscores or dashes and convert a string into camel casing .
capitalize uppercases the first char of s and lowercases the rest .
charat returns a string from the character at the specified position .
charatf is the filter form of charat .
chompleft removes prefix at the start of a string .
chompleftf is the filter form of chompleft .
chompright removes suffix from end of s .
chomprightf is the filter form of chompright .
classifyf is the filter form of classify .
clean compresses all adjacent whitespace to a single space and trims s .
dasherize converts a camel cased string into a string delimited by dashes .
escapehtml is alias for html .
decodehtmlentities decodes html entities into their proper string representation .
ensureprefixf is the filter form of ensureprefix .
ensuresuffixf is the filter form of ensuresuffix .
humanize transforms s into a human friendly form .
iif is short for immediate if .
indexof finds the index of needle in s starting from start .
islower returns true if s comprised of all lower case characters .
isupper returns true if s contains all upper case chracters .
left returns the left substring of length n .
leftf is the filter form of left .
letters returns an array of runes as strings so it can be indexed into .
lines convert windows newlines to unix newlines then convert to an array of lines .
map maps an array s iitem through an iterator .
match returns true if patterns matches the strin .
project is local project .
pad pads string s on both sides with c until it has length of n .
padf is the filter form of pad .
padleft pads s on left side with c until it has length of n .
padleftf is the filter form of padleft .
padrightf is the filter form of padrigh .
pipe pipes s through one or more string filters .
quoteitems quotes all items in array .
replacef is the filter form of strings .
replacepattern replaces string with regexp string .
replacepatternf is the filter form of replaceregexp .
rightf is the filter version of right .
slice slices a string .
slicef is the filter for slice .
slicecontains determines whether val is an element in slice .
sliceindexof gets the indx of val in slice .
slugify converts s into a dasherized string suitable for url segment .
strippunctuation strips puncation from string .
striptags strips all of the html tags or tags specified by the parameter .
substr returns a substring of s starting at index of length n .
substrf is the filter form of substr .
template is a string template which replaces template placeholders delimited by " " and " " with values from map .
templatewithdelimiters is string template with user - defineable opening and closing delimiters .
tobool fuzzily converts truthy values .
toboolor parses s as a bool or returns defaultvalue .
tointor parses s as an int or returns defaultvalue .
tofloat32or parses as a float32 or returns defaultvalue on error .
tofloat64or parses s as a float64 or returns defaultvalue .
todo this is not working yet .
unescapehtml is an alias for html .
wraphtml wraps s within html tag having attributes attrs .
wraphtmlf is the filter form of wraphtml .
reapchildren is a long - running routine that blocks waiting for child processes to exit and reaps them .
sdnotify sends a specified string to the systemd notification socket .
newauthenticator constructs a new authenticator from a store and policy .
f is a short - hand function to extract the database bson field name of a model field .
a is a short - hand function to extract the attribute json key of a model field .
r is a short - hand function to extract the relationship name of a model field .
l is a short - hand function to lookup a flagged field of a model .
unique is a helper to get a unique list of object ids .
contains returns true if a list of object ids contains the specified id .
includes returns true if a list of object ids includes another list of object ids .
require will check if the specified flags are set on the specified model and panic if one is missing .
addjobindexes will add job indexes to the specified indexer .
enqueue will enqueue a job using the specified name and data .
a is a short - hand function to construct an authorizer .
run will authorize immediately and return the provided list of enforcers .
and will match and run both authorizers and return immediately if one does not return a set of enforcers .
or will match and run the first authorizer and return its enforcers on success .
enqueue will enqueue a job using the specified name and data .
callback is a factory to create callbacks that can be used to enqueue jobs during request processing .
newwatcher creates and returns a new watcher .
add will add a stream to the watcher .
action returns an action that should be registered in the group under the " watch " name .
write will return true when this operation does write data .
string returns the name of the operation .
query returns the composite query of selector and filter .
original will return the stored version of the model .
respond will encode the provided value as json and write it to the client .
tokenmigrator is a middleware that detects access tokens passed via query parameters and migrates them to a bearer token header .
ensureapplication will ensure that an application with the provided name exists and returns its key .
ensurefirstuser ensures the existence of a first user if no other has been created .
callback will return a callback that authorizes operations using the strategy .
openstream will open a stream and continuously forward events to the specified receiver until the stream is closed .
close will close the stream .
addtokenindexes will add access token indexes to the specified indexer .
gettokendata implements the flame .
settokendata implements the flame .
validate implements the fire .
validsecret implements the flame .
validate implements the coal .
hashsecret will hash secret and set secrethash .
validpassword implements the flame .
validate implements the coal .
hashpassword will hash password and set passwordhash .
mustcreatestore will dial the passed database and return a new store .
createstore will dial the passed database and return a new store .
c will return the collection associated to the passed model .
newassetserver constructs an asset server handler that serves an asset directory on a specified path and serves the index file for not found paths which is needed to run single page applications like ember .
defaultgrantstrategy grants only empty scopes .
defaulttokendata adds the user s id to the token data claim .
defaultpolicy returns a simple policy that uses all built - in models and strategies .
generatetoken returns a new token for the provided information .
parsetoken will parse the presented token and return its claims .
e is a short - hand function to create an enforcer .
grantaccess will enforce the authorization without any changes to the context .
denyaccess will enforce the authorization by directly returning an access denied error .
addfilter will enforce the authorization by adding the passed filter to the filter query of the context .
whitelistreadablefields will enforce the authorization by making sure only the specified fields are returned for the client .
whitelistwritablefields will enforce the authorization by making sure only the specified fields can be changed by the client .
initslice initializes all models in a slice of the form * [ ] * post and returns a new slice that contains all initialized models .
mustget returns the value of the given field .
mustset will set the given field to the the passed valued .
newgroup creates and returns a new group .
add will add a controller to the group .
handle allows to add an action as a group action .
make returns a pointer to a new zero initialized model e .
makeslice returns a pointer to a zero length slice of the model e .
add will add an index to the internal index list .
addraw will add a raw mgo .
ensure will ensure that the required indexes exist .
newcatalog will create a new catalog .
add will add the specified models to the catalog .
all returns a list of all registered models .
callback returns a callback that can be used in controllers to protect resources by requiring an access token with the provided scope to be granted .
newerrorreporter returns a very basic reporter that writes errors and stack traces to the specified writer .
ensureindexes will ensure that the required indexes exist .
validate implements the fire .
defaultprotector constructs a middleware that by default limits the request body size to 8m and sets a basic cors configuration .
newprotector constructs a middleware that implements basic protection measures for the passed endpoint .
e is a short - hand function to construct a safe error .
compose is a short - hand for chaining the specified middleware and handler together .
datasize parses human readable data sizes ( e .
includes returns true if a list of strings includes another list of strings .
intersect will return the intersection of both lists .
e is a short - hand to construct an error .
roottracer is a middleware that can be used to create root trace span for an incoming request .
newtracerfromrequest returns a new tracer that has a root span derived from the specified request .
newtracer returns a new tracer with the specified root span .
push will add a new span on to the stack .
last returns the last pushed span or the root span .
tag adds a tag to the last pushed span .
log adds a log to the last pushed span .
context returns a new context with the latest span stored as a reference for handlers that will call newtracerfromrequest or similar .
pop finishes and removes the last pushed span .
finish will finish all leftover spans and the root span if requested .
newpool creates and returns a new pool .
add will add the specified task and its queue to the pool .
run will launch the queue watchers and task workers in the background .
newbodylimiter returns a new body limiter for the specified request .
limitbody will limit reading from the body of the supplied request to the specified amount of bytes .
c is a short - hand function to construct a callback .
only will match if the operation is present in the provided list .
basicauthorizer authorizes requests based on a simple credentials list .
modelvalidator performs a validation of the model using the validate method .
timestampvalidator will set timestamp fields on create and update operations .
protectedfieldsvalidator compares protected fields against their default during create ( if provided ) or stored value during update and returns an error if they have been changed .
dependentresourcesvalidator counts related documents and returns an error if some get found .
matchingreferencesvalidator compares the model with one related model or all related models and checks if the specified references are shared exactly .
uniquefieldvalidator ensures that the specified field of the current model will remain unique among the specified filters .
inspect executes the inspection into all loaded objects .
newrule creates a new rule .
addunmatch adds a refular expression into the unmatch list .
run executes the rule into a content to find all lines that matches it .
newsecret creates a new secret .
newobject creates a new object .
setmetadata sets a metadata value for the object .
setmetadata gets a metadata value from the object .
getmetadataall gets a map that contains all metadata of the object .
setrule sets the regular expresion that should match the name of the rule .
setobject sets the regular expresion that should match the name of the object .
setnline sets the number of line where secret should be found .
setcontent sets the regular expresion that should match the content of the object .
run executes the exception into a secret to determine if it s an exception or not .
addrule adds a new rule into the context .
loadrulesfromfile loads rules from a yaml file .
loadrulesfromfile loads rules from all yaml files inside a directory .
loadrulesfromfile loads rules from all yaml files inside different directories separated by .
defaultrulespath return the default path that contains rules .
enablerule enables specific rule .
disablerule disables specific rule .
enablerule enables rules that match with a regular expression .
disablerule disables rules that match with a regular expression .
loadobjects loads objects form an specific source .
groupobjectsbymetadata returns a map with all objects grouped by specific metadata key .
groupobjectsbyprimarykeyhash returns a map with all objects grouped by the primary key hash .
addexception adds a new exception into the context .
loadexceptionsfromfile loads exceptions from a yaml file .
export fs allocstat .
/ * frameset * / export frameset ne .
export frameset cop .
export frameset strin .
export frameset le .
export frameset inde .
export frameset fram .
export frameset frame .
export frameset hasfram .
export frameset star .
export frameset en .
export frameset framerang .
export frameset framerangepadde .
export frameset inver .
export frameset invertedframerang .
export frameset normaliz .
/ * filesequence * / export filesequence ne .
export filesequence new pa .
export filesequence cop .
export filesequence forma .
export filesequence dirnam .
export filesequence basenam .
export filesequence star .
export filesequence en .
export filesequence zfil .
export filesequence paddin .
export filesequence paddingstyl .
export filesequence framerang .
export filesequence framerangepadde .
export filesequence invertedframerang .
export filesequence invertedframerangepadde .
export filesequence framese .
export filesequence ex .
export filesequence frame in .
export filesequence frame fil .
export filesequence inde .
export filesequence le .
export filesequence strin .
export filesequence setdirnam .
export filesequence setbasenam .
export filesequence setpaddin .
export filesequence setpaddingstyl .
export filesequence setex .
export filesequence setframese .
export filesequence setframerang .
todo export filesequence split func filesequence split ( ) filesequences / * functions * / export framestoframerang .
export isframerang .
export padframerang .
export paddingchar .
export findsequenceondis .
export findsequenceondiskpa .
export findsequencesondis .
printplainresults prints plain - text output for result .
printjsonresults prints json - formatted output for result .
newxor64source returns a pointer to a new xor64source seeded with the given value .
xor64 generates the next value of a pseudo - random sequence given a current state x .
next advances the generators internal state to the next value and returns this value as an uint64 .
seed uses the given value to initialize the generator .
create a new frameset from a given frame range string returns an error if the frame range could not be parsed .
index returns the index position of the frame value within the frame set .
frame returns the frame number value for a given index into the frame set .
frames returns a slice of the frame numbers that were parsed from the original frame range string .
hasframe returns true if the frameset contains the given frame value .
framerangepadded returns the range string that was used to initialize the frameset .
invert returns a new frameset that represents all frames * not * within the current frameset .
invertedframerange returns a new frame range string that represents all frames * not * within the current frameset .
normalize returns a new sorted and compacted framese .
isframerange returns true if the given string is a valid frame range format .
framerangematches breaks down the string frame range into groups of range matches .
expands a start .
return the min / max frames from an unsorted lis .
create a new workmanager .
process method starts the workmanager .
processsources pulls from input channels .
returns true if the input channels are ni .
closeinputs closes the input channels indicating that no more paths will be loaded .
loadstandard takes paths and loads them into the dir input channel for processin .
parallel walk the root paths and populate the path channel for the worker routines to consume .
take a list of paths and reduce them to cleaned and unique paths .
padframerange takes a frame range string and returns a new range with each number padded out with zeros to a given widt .
left pads a string to a given with .
left pads an int to a given with .
newinclusiverange creates a new inclusiverange instanc .
string returns a formatted string representation of the integer rang .
end returns the end of the range .
len returns the number of values in the rang .
min returns the smallest value in the rang .
max returns the highest value in the rang .
contains returns true if the given value is a valid value within the value range .
closestinrange finds the closest valid value within the range .
value returns the value at the given index in the range .
index returns the 0 - based index of the first occurrence given value .
isdone returns false while the iterator is valid and can produce another value .
next ( ) returns the current value in the iteration .
string returns the formatted representation of the combination of all internal inclusiverange instance .
len returns the total number of values across all range .
start returns the first value of the first rang .
end returns the last value of the last rang .
min returns the smallest value in the total rang .
max returns the highest value in the total rang .
numranges returns the number of discreet sets of ranges that were appended .
rangeat returns the underlying inclusiverange instance that was appended .
append creates and adds another range of values to the total range list .
appendunique creates and adds another range of values to the total range list .
contains returns true if a given value is a valid value within the total range .
value returns the value at the given index in the total range .
index returns the 0 - based index of the first occurrence of the given value .
normalized returns a new instance .
isdone returns false while the iterator is valid and can produce another value .
next ( ) returns the current value in the iteration .
/ * format returns the file sequence as a formatted string according to the given template .
split a non - contiguous ( i .
paddingstyle returns the style of padding being used to convert between characters and their numeric width .
start returns the starting frame of the sequence .
end returns the ending frame of the sequence .
framerange returns the string frame range component .
framerangepadded returns the string frame range component .
invertedframerange returns a new frame range that represents all frames * not * within the current frame range .
invertedframerangepadded returns a new frame range that represents all frames * not * within the current frame range .
/ * frame returns a path to the given frame in the sequence .
internal fast path for frame ( ) when we know we have an int fram .
index returns the path to the file at the given index in the sequence .
set a new dirname for the sequenc .
set a new padding characters for the sequenc .
set a new padding style for mapping between characters and their numeric widt .
set a new ext for the sequenc .
set a new frameset .
len returns the number of frames in the frameset .
string returns the formatted sequenc .
copy returns a copy of the filesequenc .
findsequencesondisk searches a given directory path and sorts all valid sequence - compatible files into a list of filesequences by default .
findsequenceondisk takes a string that is a compatible / parsible filesequence pattern .
findsequenceondiskpad takes a string that is a compatible / parsible filesequence pattern .
newclient return soap clien .
unmarshalxml unmarshal soapheade .
unmarshalxml unmarshal soapbod .
jsondoc loads a json document from either a file or a remote ur .
addloader for a documen .
jsonspec loads a spec from a json documen .
embedded returns a document based on embedded specs .
spec loads a new spec documen .
analyzed creates a new analyzed spec documen .
expanded expands the ref fields in the spec document and returns a new spec documen .
resetdefinitions gives a shallow copy with the models rese .
pristine creates a new pristine document instance based on the input dat .
opens a geoip database by filename with specified geoipoptions flag .
setcustomdirectory sets the default location for the geoip .
opentype opens a specified geoip database type in the default location with the specified geoipoptions flag .
takes an ipv4 address string and returns the organization name for that ip .
returns the country code and region code for an ip address .
returns the region name given a country code and region cod .
same as getname ( ) but for ipv6 addresses .
takes an ipv4 address string and returns the country code for that ip and the netmask for that ip range .
write implements handler interfac .
newrotatingfilehandler creates a rotatingfilehandle .
write implements handler interfac .
close implements handler interfac .
write implements handler interfac .
fatal records the log with fatal level and exit .
fatalf records the log with fatal level and exit .
fatalln records the log with fatal level and exit .
panic records the log with fatal level and panic .
panicf records the log with fatal level and panic .
panicln records the log with fatal level and panic .
printf records the log with trace leve .
debugf records the log with debug leve .
errorf records the log with error leve .
infof records the log with info leve .
warnf records the log with warn leve .
string returns level strin .
new creates a logger with specified handler and fla .
close closes the logge .
setlevelbyname sets log level by nam .
output json format records the log with special callstack depth and log level .
fatal records the log with fatal level and exit .
fatalf records the log with fatal level and exit .
fatalln records the log with fatal level and exit .
panic records the log with fatal level and panic .
panicf records the log with fatal level and panic .
panicln records the log with fatal level and panic .
print records the log with trace leve .
printf records the log with trace leve .
println records the log with trace leve .
debug records the log with debug leve .
debugf records the log with debug leve .
debugln records the log with debug leve .
error records the log with error leve .
errorf records the log with error leve .
errorln records the log with error leve .
info records the log with info leve .
infof records the log with info leve .
infoln records the log with info leve .
warn records the log with warn leve .
warnf records the log with warn leve .
warnln records the log with warn leve .
newstreamhandler creates a streamhandle .
write implements handler interfac .
write implements handler interfac .
left left - pads the string with pad up to len runes len may be exceeded i .
right right - pads the string with pad up to len rune .
left left - pads the string with pad up to len runes len may be exceeded i .
new returns a self - service api client .
removes the specified number of prefixes from a regexp and returns a new regexp .
initialize genmetadata from each ss api generated metadat .
recursively record all type declaration .
sort action params by nam .
parse data type in contex .
build action param struct from json dat .
extract name ( leaf ) from pat .
parse native names into go parameter name .
produce action return type nam .
produce go type name from given ruby type nam .
return dumpable representation of given objec .
returns true if given name is the name of a built - in typ .
matchhref returns true if the given href matches one of the action s href patterns exactl .
paramsbylocation is a helper method that returns the names of the parameters at the given location ( path .
url returns a url to the action given a set of values that can be used to substitute the action paths pattern variables .
substitute attemps to substitute the path pattern variables with the given values .
marshaljson just inserts the contents of the file from disk inline into the jso .
this will take a hash ( or multi - level hash ) of apiparams and extract out all the multipart file uploads and put them in an array .
handle payload params .
performrequest logs the request .
performrequestwithcontext performs everything the performrequest does but is also context - aware .
identifyparams organizes the given params in two groups the payload params and the query params .
loadresponse deserializes the json response into a generic object .
actionpath computes the path to the given resource action .
locator returns a locator for the given resourc .
schedulelocator builds a locator from the given href .
locator returns a locator for the given resourc .
templatelocator builds a locator from the given href .
fetch details about all servers and server arrays in an environmen .
get the instance number of an instance in a server array .
builds the aliases string based on the ssh configuration of all servers and server arrays in all environments .
makes a get call on the given server array and returns all its current instances .
makes a get call on the given server and returns the current instance of the server .
helper method that loads file file content and ( json ) unmarshals it into targe .
convert version number in index .
helper function that reads content from given fil .
helper that runs command line with give command clien .
locator returns a locator for the given resourc .
accountlocator builds a locator from the given href .
locator returns a locator for the given resourc .
accountgrouplocator builds a locator from the given href .
locator returns a locator for the given resourc .
alertlocator builds a locator from the given href .
locator returns a locator for the given resourc .
alertspeclocator builds a locator from the given href .
locator returns a locator for the given resourc .
auditentrylocator builds a locator from the given href .
locator returns a locator for the given resourc .
backuplocator builds a locator from the given href .
childaccountlocator builds a locator from the given href .
locator returns a locator for the given resourc .
cloudlocator builds a locator from the given href .
locator returns a locator for the given resourc .
cloudaccountlocator builds a locator from the given href .
locator returns a locator for the given resourc .
cookbooklocator builds a locator from the given href .
locator returns a locator for the given resourc .
cookbookattachmentlocator builds a locator from the given href .
locator returns a locator for the given resourc .
credentiallocator builds a locator from the given href .
locator returns a locator for the given resourc .
datacenterlocator builds a locator from the given href .
locator returns a locator for the given resourc .
deploymentlocator builds a locator from the given href .
healthchecklocator builds a locator from the given href .
locator returns a locator for the given resourc .
identityproviderlocator builds a locator from the given href .
locator returns a locator for the given resourc .
imagelocator builds a locator from the given href .
inputlocator builds a locator from the given href .
locator returns a locator for the given resourc .
instancelocator builds a locator from the given href .
locator returns a locator for the given resourc .
instancetypelocator builds a locator from the given href .
locator returns a locator for the given resourc .
ipaddresslocator builds a locator from the given href .
locator returns a locator for the given resourc .
ipaddressbindinglocator builds a locator from the given href .
locator returns a locator for the given resourc .
monitoringmetriclocator builds a locator from the given href .
locator returns a locator for the given resourc .
multicloudimagelocator builds a locator from the given href .
locator returns a locator for the given resourc .
multicloudimagematcherlocator builds a locator from the given href .
locator returns a locator for the given resourc .
multicloudimagesettinglocator builds a locator from the given href .
locator returns a locator for the given resourc .
networklocator builds a locator from the given href .
locator returns a locator for the given resourc .
networkgatewaylocator builds a locator from the given href .
locator returns a locator for the given resourc .
networkoptiongrouplocator builds a locator from the given href .
locator returns a locator for the given resourc .
networkoptiongroupattachmentlocator builds a locator from the given href .
oauth2locator builds a locator from the given href .
locator returns a locator for the given resourc .
permissionlocator builds a locator from the given href .
locator returns a locator for the given resourc .
placementgrouplocator builds a locator from the given href .
locator returns a locator for the given resourc .
preferencelocator builds a locator from the given href .
locator returns a locator for the given resourc .
publicationlocator builds a locator from the given href .
locator returns a locator for the given resourc .
publicationlineagelocator builds a locator from the given href .
locator returns a locator for the given resourc .
recurringvolumeattachmentlocator builds a locator from the given href .
locator returns a locator for the given resourc .
repositorylocator builds a locator from the given href .
===== actions post / api / repositories / id / cookbook import performs a cookbook import .
locator returns a locator for the given resourc .
repositoryassetlocator builds a locator from the given href .
locator returns a locator for the given resourc .
resourcegrouplocator builds a locator from the given href .
locator returns a locator for the given resourc .
rightscriptlocator builds a locator from the given href .
locator returns a locator for the given resourc .
rightscriptattachmentlocator builds a locator from the given href .
locator returns a locator for the given resourc .
routelocator builds a locator from the given href .
locator returns a locator for the given resourc .
routetablelocator builds a locator from the given href .
locator returns a locator for the given resourc .
runnablebindinglocator builds a locator from the given href .
schedulerlocator builds a locator from the given href .
locator returns a locator for the given resourc .
securitygrouplocator builds a locator from the given href .
locator returns a locator for the given resourc .
securitygrouprulelocator builds a locator from the given href .
locator returns a locator for the given resourc .
serverlocator builds a locator from the given href .
locator returns a locator for the given resourc .
serverarraylocator builds a locator from the given href .
locator returns a locator for the given resourc .
servertemplatelocator builds a locator from the given href .
post / api / server templates / id / publish publishes a given servertemplate and its subordinates .
locator returns a locator for the given resourc .
servertemplatemulticloudimagelocator builds a locator from the given href .
locator returns a locator for the given resourc .
sessionlocator builds a locator from the given href .
locator returns a locator for the given resourc .
sshkeylocator builds a locator from the given href .
locator returns a locator for the given resourc .
subnetlocator builds a locator from the given href .
taglocator builds a locator from the given href .
locator returns a locator for the given resourc .
tasklocator builds a locator from the given href .
locator returns a locator for the given resourc .
userlocator builds a locator from the given href .
userdatalocator builds a locator from the given href .
locator returns a locator for the given resourc .
volumelocator builds a locator from the given href .
locator returns a locator for the given resourc .
volumeattachmentlocator builds a locator from the given href .
locator returns a locator for the given resourc .
volumesnapshotlocator builds a locator from the given href .
locator returns a locator for the given resourc .
volumetypelocator builds a locator from the given href .
registercommands registers all the commands with the kinpin application .
runcommand parses and runs the command with the given name .
showcommandhelp displays the command help .
showapiactions displays the command hrefs .
showhelp displays help for the given command and flags .
parsecommandandflags parses a command flag and infers the resource .
extract parameter from metadata that correspond to given command line flag the flag is of the form " name=value " .
validate flag value using validation criteria provided in metadat .
reconstruct query from flatten value .
reconstruct payload map from flatten value .
attempt to shorten action pattern for display by looking at other action hrefs and picking one that doesnt have the suffix if there is one .
parse native names into go parameter name .
cleans up description .
fileexists reads content from existing file and returns a byte arra .
analysissnapshotlocator builds a locator from the given href .
budgetalertlocator builds a locator from the given href .
cloudbilllocator builds a locator from the given href .
cloudbillmetriclocator builds a locator from the given href .
currentuserlocator builds a locator from the given href .
post / api / current user / actions / cloud accounts creates a cloud account in the first available child account .
instancecombinationlocator builds a locator from the given href .
instancemetriclocator builds a locator from the given href .
instanceusageperiodlocator builds a locator from the given href .
patternlocator builds a locator from the given href .
reservedinstancelocator builds a locator from the given href .
reservedinstancepurchaselocator builds a locator from the given href .
scenariolocator builds a locator from the given href .
scheduledreportlocator builds a locator from the given href .
tempinstancepricelocator builds a locator from the given href .
===== actions get / api / temp instance prices returns a json blob with all prices for scenario builder .
usersettinglocator builds a locator from the given href .
read file asynchronousl .
extract command line argument with given name and return remaining argument .
helper function that appends a string to output fil .
appliedpolicylocator builds a locator from the given href .
approvallocator builds a locator from the given href .
incidentlocator builds a locator from the given href .
policytemplatelocator builds a locator from the given href .
publishedtemplatelocator builds a locator from the given href .
debugcookbookpathlocator builds a locator from the given href .
dockercontrollocator builds a locator from the given href .
envlocator builds a locator from the given href .
logincontrollocator builds a locator from the given href .
proclocator builds a locator from the given href .
rl10locator builds a locator from the given href .
tsslocator builds a locator from the given href .
tsscontrollocator builds a locator from the given href .
tsspluginlocator builds a locator from the given href .
newangularwriter creates a new code writer that generates angular .
writeresource writes the code for a resource .
path for given action .
returns true if parameter with given name is mandator .
new returns a api client that uses the given authenticator .
newrl10 returns a api client that uses the information stored in / var / run / rightlink / secret to do auth and configure the host .
canauthenticate makes a test authenticated request to the rightscale api and returns an error if it fails .
encrypt encrypts the given text with a hard - coded secret .
decrypt decrypts the given encrypted string using the hard - coded secret .
analyzedefinition analyzes a definition which is an object .
typeforref converts a " $ref " reference in the swagger definition to a concrete type .
addtype conditionally adds a new type .
newapianalyzer is the factory method for apianalyzer .
analyze creates an api descriptor from raw resources and types .
newmetadatawriter creates a new writer that generates metadata data structures .
writeheader writes the generic header text .
writemetadata writes the data structures that describe the api resources and actions .
return code corresponding to param locatio .
new returns a client that uses rl10 authentication .
newrl10 returns a rl10 client that uses the information stored in / var / run / rightlink / secret to do auth and configure the host .
wrap generic client into rl10 clien .
fromcommandline builds a client from the command line .
initialize genmetadata from each ca api generated metadat .
newdisplayer creates a new displayer using the response body .
applysingleextract applies the given json selector and returns the results .
applyextract applies selector to js .
applyheaderextract reads the value of the given header .
output returns the current output .
newapianalyzer is the factory method for the api analyze .
analyze iterate through all resources and initializes the resources and paramtypes fields of the apianalyzer struct accordingly .
analyzealiases goes through the aliases and copies the details from original actions to the aliased actions .
locatorfunc returns the source code for building a locator instance from a resource .
true if path is for a deprecated ap .
heuristic to determine whether given param is a query string param for now only consider view and filter .
look in given path patterns to chek whether given parameter name corresponds to a variable name .
reftype returns the go code required to declare a variable of the given resource type .
name of go type for resource with given name it should always be the same ( camelized ) but there are some resources that dont have a media type so for these we use a map .
make an api call and fetch the audit entries matching specified criteri .
returns time in rightscale api supported forma .
prints the audit entries to consol .
extract unique audit entries from the newly received list by comparing the href of audit entries in the old list .
get the href of an audit entry from the links attribute by inspecting the self lin .
print error message and exit with code .
produce line comments by concatenating given strings and producing 80 characters long lines starting with " " .
serialize action parameter .
produces code that initializes a apiparams struct with the values of parameters for the given action and location .
command line used to run too .
code that checks whether variable with given name and type contains a blank value ( empty string .
convert [ ] interface into [ ] strin .
escape in string to be wrapped in the .
type of flag .
generate api client code .
locator returns a locator for the given resourc .
accountpreferencelocator builds a locator from the given href .
locator returns a locator for the given resourc .
applicationlocator builds a locator from the given href .
locator returns a locator for the given resourc .
enduserlocator builds a locator from the given href .
locator returns a locator for the given resourc .
notificationrulelocator builds a locator from the given href .
locator returns a locator for the given resourc .
userpreferencelocator builds a locator from the given href .
locator returns a locator for the given resourc .
userpreferenceinfolocator builds a locator from the given href .
loadconfig loads the client configuration from dis .
save config encrypts the password and / or refresh token ; persists the config to fil .
fromcommandline builds a client from the command line .
wrap generic client into api 1 .
hostfromlogin returns the policy endpoint from its login endpoint .
analyzeparam analyzes input parameters to method .
analyzeattribute analyzes an attribute creating a corresponding actionparam .
createtype is a helper method that creates or retrieve a object data type given its attributes .
ref gets a definition for a schema reference .
type gets a type for a schema reference .
required gets a type for a schema reference .
id of the referenc .
service returns the goa .
methods returns the goa .
newapianalyzer is the factory method for apianalyzer .
analyze creates an api descriptor from raw resources and types .
newtyperegistry creates a type registry .
getnamedtype retrieves a type given its name .
createnamedtype returns a new type given a name .
createinlinetype creates a new inline type .
finalizetypenames makes sure type names are unique .
merge two descriptors together .
build unique type name by appending " next available index " to given prefi .
mandatoryparams returns the list of all action mandatory parameter .
hasoptionalparams returns true if the action takes optional parameters .
signature generates the signature used e .
isequivalent returns true if other represents the same data type as the target .
isequivalent returns true if other represents the same data type as the target .
isequivalent returns true if other represents the same data type as the target .
isequivalent returns true if other represents the same data type as the target .
isequivalent returns true if other represents the same data type as the target .
isequivalent returns true if other represents the same data type as the target .
isequivalent returns true if other represents the same data type as the target .
makeuniq makes a unique name given a prefix and a set of names .
newclientwriter is the client writer factory .
writeheader writes the header text .
writeresourceheader writes the resource header .
writetype writest the type declaration for a resource action arguments .
writeresource writest the code for a resource .
withtrail creates a new context with trail appended t .
locator returns a locator for the given resourc .
locator returns a locator for the given resourc .
locator returns a locator for the given resourc .
locator returns a locator for the given resourc .
locator returns a locator for the given resourc .
locator returns a locator for the given resourc .
locator returns a locator for the given resourc .
locator returns a locator for the given resourc .
locator returns a locator for the given resourc .
locator returns a locator for the given resourc .
locator returns a locator for the given resourc .
locator returns a locator for the given resourc .
networkinterfacelocator builds a locator from the given href .
locator returns a locator for the given resourc .
networkinterfaceattachmentlocator builds a locator from the given href .
locator returns a locator for the given resourc .
locator returns a locator for the given resourc .
locator returns a locator for the given resourc .
locator returns a locator for the given resourc .
locator returns a locator for the given resourc .
locator returns a locator for the given resourc .
unmarshaljson implements the unmarshaller interface .
locator returns a locator for the given resourc .
executionlocator builds a locator from the given href .
locator returns a locator for the given resourc .
notificationlocator builds a locator from the given href .
locator returns a locator for the given resourc .
operationlocator builds a locator from the given href .
locator returns a locator for the given resourc .
scheduledactionlocator builds a locator from the given href .
newbasicauthenticator returns a authenticator that uses email and password to create sessions .
newinstanceauthenticator returns an authenticator that uses the instance facing api token to create sessions .
newoauthauthenticator returns a authenticator that uses a oauth refresh token to create access tokens .
newtokenauthenticator returns an authenticator that use an oauth access token to do authentication .
newssauthenticator returns an authenticator that wraps another one and adds the logic needed to create sessions in self - service .
newcookiesigner returns a cookie signer that uses the given builder to build login requests .
sign adds the username and password authorization cookies to the request .
canauthenticate makes a test request to cm 1 .
refresh updates the cookie and expiration used to sign requests from a successful session creation api response .
canauthenticate makes a test request to cm 1 .
sign sets the oauth authorization heade .
canauthenticate makes a test request to cm 1 .
rl10 authenticator uses special heade .
canauthenticate makes a test request to cm 1 .
self - service authenticator first creates a global session with the core then creates a local session with self - service .
sethost sets the host used to create self - service session .
canauthenticate makes a test request to ss and returns true if it is successful .
buildloginrequest builds session create requests from users email and password .
buildloginrequest builds session create requests from users email and password .
extractredirecturl is a helper function that extracts the location header from a redirect response .
compute api url given a scheme .
extractvariables takes a resource href and extracts the variables ( cloud id .
getaction returns the action with the given name .
haslink returns whether the resource has a link with the given name .
find paths that match given hre .
newvariabledumpclient defines accessors for package variables .
dohidden is equivalent to do with the exception that nothing gets logged unless dumpformat is set to verbose .
do dumps the request .
getclientwithouttimeout returns a modified client that doesnt have the responseheadertimeout field set in its transport .
dump request if needed .
filterheaders iterates through the headers skipping hidden headers unless dumpformat is verbose .
copyhiddenheaders copies the given ma .
generate api client code .
generate api metadata .
generate api metadata .
make sure all the required information is ther .
apiclient instantiates a client with the given name from command line arguments .
registerclientcommands registers all api client commands .
interactive configures the logger to log messages of level info or higher to stdout and messages of level error or lesser to stderr .
runcommand parses and runs the command with the given name .
rawpayload is a helper function that creates a actionparam for a raw ( non object ) payloa .
parseurls extracts the path patterns from an action urls .
/ * * global helpers * * / promptconfirmation displays a prompt .
withclientip returns a context which carries the given client ip .
clientip returns the client ip embedded in the context .
newproducer configures a new producer instance .
startproducer starts and returns a new producer p .
start explicitly begins the producer in case it was initialized with newproducer instead of startproducer .
stop gracefully shutsdown the producer .
publish sends a message using the producer p .
publishto sends a message to a specific topic using the producer p .
newlocalengine creates and returns an instance of localengine configured with config .
write serializes the frame to the given buffered output .
write serializes the command to the given buffered output .
write serializes the command to the given buffered output .
validate ensures that this configuration is well - formed .
defaults will set up this configuration with the global defaults where they were not already set .
newconsumer configures a new consumer instance .
startconsumer creates and starts consuming from nsq right away .
start explicitly begins consumption in case the consumer was initialized with newconsumer instead of startconsumer .
ratelimit consumes messages from the messages channel and limits the rate at which they are produced to the channel returned by this function .
write outputs the response to w .
readresponse reads res from r .
backoff computes a random exponential backoff value for a given number of attempts .
write serializes the command to the given buffered output .
string returns a human - readable representation of the frame type .
readframe reads a frame from the buffer input r .
write serializes the frame to the given buffered output .
write serializes the command to the given buffered output .
string returns a human - readable representation of the node info .
string returns a human - readable representation of the node info .
write serializes the command to the given buffered output .
newconsulengine creates and return a new engine configured with config .
parsemessageid attempts to parse s .
writeto writes the message id to w .
newmessage is a helper for creating message instances directly .
finish must be called on every message received from a consumer to let the nsq server know that the message was successfully processed .
requeue must be called on messages received from a consumer to let the nsq server know that the message could not be proessed and should be retried .
write serializes the frame to the given buffered output .
readcommand reads cmd from r .
write serializes the command to the given buffered output .
write serializes the command to the given buffered output .
write serializes the command to the given buffered output .
write serializes the frame to the given buffered output .
write serializes the command to the given buffered output .
funcmap get func maps from tmp .
funcs register funcs for tmp .
execute execute tmp .
registerpath register view path .
asset get content with name from assetf .
glob list matched files from assetf .
namespace return namespaced filesyste .
new initalize the render struct .
registerviewpath register view pat .
setassetfs set asset fs for rende .
layout set layout for template .
funcs set helper functions for template with default " application " layout .
execute render template with default " application " layout .
registerfuncmap register funcmap for render .
asset get content from assetfs by nam .
a client implementation of the plain authentication mechanism .
create creates an s3 object at url and sends multipart upload requests as data is written .
calls putpart up to ntry times to recover from transient errors .
open requests the s3 object at url .
amazonbucket returns everything up to the last .
readdir requests a list of entries in the s3 directory represented by f and returns a slice of up to n fileinfo values .
find finds nodes based on the pathexpr .
lex an xpath expresion on the io .
mustparsexml is like parsexml .
call checks the arguments and calls fn if they are vali .
parse parses the xpath expression .
mustparse is like parse .
exec executes the xpath expression .
execbool is like exec .
execnum is like exec .
execnode is like exec .
mustexec is like exec .
parseexec parses the xpath string .
createnode is an implementation of xmlbuilder .
getchildren returns all child nodes of the elemen .
getattrs returns all attributes of the elemen .
resvalue returns the string value of the element and childre .
parse creates an ast tree for xpath expressions .
gettoken returns the xml .
resvalue returns the string value of the attribut .
exec executes the xpath expression .
resvalue satisfies the res interface for nu .
num satisfies the hasnum interface for string .
buildns resolves all the namespace nodes of the element and returns the .
getattribute is a convenience function for getting the specified attribute from an element .
getattributeval is like getattribute .
getattrvalorempty is like getattributeval .
findnodebypos finds a node from the given position .
marshal prints the result tree .
marshalstr is like marhal .
newlexer creates a new lexer reading from io .
newlexerstring creates a new lexer reading from a string .
split splits a string according to posix or non - posix rules .
register registers a new error typ .
get returns the descriptor if it exists or nil otherwis .
getall returns all registered error descriptor .
from lifts an error to be and erro .
descriptor returns the error descriptor from any erro .
getattributes returns the error attributes or falls back to empty attribute .
toimpl creates an equivalent impl for any erro .
metadatafromincomingcontext gets the metadata from the given contex .
metadatafromoutgoingcontext gets the metadata from the given contex .
tokenfrommetadata gets the token from the metadata or returns errnotoke .
tokenfromincomingcontext gets the token from the incoming context or returns errnotoke .
outgoingcontextwithtoken returns an outgoing context with the toke .
keyfrommetadata gets the key from the metadata or returns errnoke .
keyfromincomingcontext gets the key from the incoming context or returns errnoke .
outgoingcontextwithkey returns an outgoing context with the ke .
idfrommetadata gets the key from the metadata or returns errnoi .
idfromincomingcontext gets the key from the incoming context or returns errnoi .
outgoingcontextwithid returns an outgoing context with the i .
serviceinfofrommetadata gets the service information from the metadata or returns empty string .
serviceinfofromincomingcontext gets the service information from the incoming context or returns empty string .
outgoingcontextwithserviceinfo returns an outgoing context with the i .
limitfrommetadata gets the limit from the metadat .
offsetfrommetadata gets the offset from the metadat .
limitandoffsetfromincomingcontext gets the limit and offset from the incoming contex .
outgoingcontextwithlimitandoffset returns an outgoing context with the limit and offse .
returns true if i before .
new creates a new error based on the error descripto .
withnamespace adds a namespace to the logging contex .
wrap wraps the logger in a namespaced logger and enables the specified namespaces .
withfield adds a field to the logge .
withfields adds multiple fields to the logge .
format formats the values into the provided strin .
fix coerces types that cannot be formatted by messageformat to strin .
grpccodetotype converts the grpc error code to an error type or returns the unknown type if not possible .
fromgrpc parses a grpc error and returns an erro .
togrpc turns an error into a grpc erro .
isenabled checks wether or not the namespace is enable .
set updates the namespace .
cause returns the cause of an erro .
parecode parses a string into a code or returns 0 if the parse faile .
range is a utility function that creates a code builder .
unaryserverinterceptor applies fn to errors returned by server .
streamserverinterceptor applies fn to errors returned by server .
unaryclientinterceptor applies fn to errors recieved by client .
streamclientinterceptor applies fn to errors recieved by client .
interceptor automatically restarts streams on non - expected errors to do so .
newcounter returns a new rate counter with the given bucket size and retentio .
newrediscounter returns a new redis - based counte .
newlimiter returns a new limite .
withinsecure returns a copy of the tokencredentials .
withtokenfunc returns tokencredentials that execute the tokenfunc on each request the value of v sent to the tokenfunk is the md value of the supplied .
getrequestmetadata implements credentials .
fieldsfromincomingcontext returns peer information and mdlogfields from the given contex .
string implements stringe .
unmarshaltext implements textunmarshele .
fromstring parses a string into an error type .
start starts the stat process that will log relevant memory - related stats to ctx .
newsimple returns a new simple queu .
wrap wraps an existing logger .
withfilter creates a new filtered that will use the extra filter .
withfield filters the field and passes it on to the wrapped loggers withfiel .
withfields filters the fields and passes them on to the wrapped loggers withfield .
filtersensitive creates a filter that filters most sensitive data like passwords .
slicefilter lifts the filter to also work on slices .
mapfilter lifts the filter to also work on maps .
restrictfilter restricts the filter to only work on a certain fiel .
lowercasefilter creates a filter that only get passed lowercase field name .
newbatchpoints creates new influxdb .
newsinglepointwriter creates new singlepointwrite .
write creates new influxdb .
pusherror reports err ( can be nil ) to the waiter .
withinstancelimit sets a limit on amount of additional instances spawned by batchingwrite .
newbatchingwriter creates new batchingwriter .
write delegates p to a running instance of batchingwriter and spawns new instances as required .
stdout logging apex / lo .
mustparselevel is a convience function that parses the passed in string as a log level and sets the log level of the apexinterfacewrapper to the parsed level .
new returns a new stream with the given buffer size and setup function .
setlogger sets the logger for this streambuffe .
recv returns a buffered channel ( of the size given to new ) that receives messages from the stream .
closerecv closes the receive channe .
stats of the strea .
sendmsg sends a message ( possibly dropping a message on full buffers ) .
recvmsg receives a message ( possibly dropping a message on full buffers ) .
serveroptions for logging rpc .
clientoptions for logging rpc .
unaryserverinterceptor logs unary rpcs on the server sid .
streamserverinterceptor logs streaming rpcs on the server sid .
unaryclientinterceptor logs unary rpcs on the client sid .
streamclientinterceptor logs streaming rpcs on the client sid .
defaults applies defaults to the config .
flush the current batch .
handlelog implements log .
new returns a new random .
names returns the names of all variables within the template .
newperfdatum returns a perfdatum object suitable to use in a check result .
isthresholdset returns true if one of min .
string returns the string representation of a perfdatum .
renderperfdata accepts a slice of perfdatum objects and returns their concatenated string representations in a form suitable to append to the first line of check output .
exit is a standalone exit function for simple checks without multiple results or perfdata .
newcheckwithoptions returns an empty check object with caller - specified behavioural modifications .
addresult adds a check result .
addresultf functions as addresult .
addperfdatum adds a metric to the set output by the check .
exitinfotext returns the most important result text .
string representation of the check results .
finish ends the check .
exitf takes a status plus a format string .
criticalf is a shorthand function which exits the check with status critical and the message provided .
unknownf is a shorthand function which exits the check with status unknown and the message provided .
newdefaultstatuspolicy returns a status policy that assigns relative severity in accordance with conventional nagios plugin return codes .
newouwcstatuspolicy returns a status policy similar to that returned by newdefaultstatuspolicy with one difference the unknown check status is demoted in severity such that any warning or critical check status will take priority .
newstatuspolicy returns a status policy that assigns relative severity in accordance with a user - configurable prioritised slice .
returns string representation of a status .
parserange returns a new range object and nil if the given range definition was valid .
check returns true if an alert should be raised based on the range ( if the value is outside the range for normal semantics .
checkint is a convenience method which does an unchecked type conversion from an int to a float64 .
checkuint64 is a convenience method which does an unchecked type conversion from an uint64 to a float64 .
newclient returns a configured rundeck client .
getkeymeta returns the metadata for the key at the given keystore path .
getkeysindirmeta returns the metadata for the keys and subdirectories within the directory at the given keystore path .
getkeycontent retrieves and returns the content of the key at the given keystore path .
getjobsummariesforproject returns summaries of the jobs belonging to the named project .
getjobsforproject returns the full job details of the jobs belonging to the named project .
getjob returns the full job details of the job with the given id .
createjob creates a new job based on the provided structure .
createorupdatejob takes a job detail structure which has its id set and either updates an existing job with the same id or creates a new job with that id .
deletejob deletes the job with the given id .
jobsummary produces a jobsummary instance with values populated from the import result .
getsysteminfo retrieves and returns miscellaneous system information about the rundeck server and the machine it s running on .
datetime produces a time .
getallprojects retrieves and returns all of the projects defined in the rundeck server .
getproject retrieves and returns the named project .
createproject creates a new .
deleteproject deletes a project and all of its jobs .
setprojectconfig replaces the configuration of the named project .
newclient is a constructor for client objec .
newclientbytoken is a constructor for client object using bearer tokens for authentication instead of username .
setdepth sets depth parameter for api call .
listdatacenters lists all data center .
createdatacenter creates a data cente .
getdatacenter gets a datacente .
updatedatacenter updates a data cente .
deletedatacenter deletes a data cente .
waittillprovisioned helper functio .
listfirewallrules lists all firewall rule .
getfirewallrule gets a firewall rul .
createfirewallrule creates a firewall rul .
updatefirewallrule updates a firewall rul .
deletefirewallrule deletes a firewall rul .
server cmd path returns the string " / datacenters / < dcid > / servers / < srvid > / < cmd > " .
balnic path returns the string " / loadbalancers / < lbalid > / balancednics < balnicid > " .
server cdrom path returns the string " / datacenters / < dcid > / servers / < srvid > / cdroms / < cdid > " .
server volume path returns the string " / datacenters / < dcid > / servers / < srvid > / volumes / < volid > " .
nic path returns the string " / datacenters / < dcid > / servers / < srvid > / nics / < nicid > " .
fwrule col path returns the string " / datacenters / < dcid > / servers / < srvid > / nics / < nicid > / firewallrules " .
fwrule path returns the string " / datacenters / < dcid > / servers / < srvid > / nics / < nicid > / firewallrules / < fwruleid > " .
um group share path \ treturns the string " groups / groupid / shares / resourceid " .
um group users path \ treturns the string " / groups / groupid / users / userid " .
um resources type path returns the string " resources / resourcetype / resourceid " .
listloadbalancers returns a collection struct for loadbalancers in the datacente .
createloadbalancer creates a loadbalancer in the datacenter from a jason [ ] byte and returns a instance struc .
getloadbalancer pulls data for the loadbalancer where id = lbalid returns a instance struc .
updateloadbalancer updates a load balance .
deleteloadbalancer deletes a load balance .
listbalancednics lists balanced nic .
associatenic attach a nic to load balance .
getbalancednic gets a balanced ni .
deletebalancednic removes a balanced ni .
listlans returns a collection for lans in the datacente .
createlan creates a lan in the datacenter from a jason [ ] byte and returns a instance struc .
getlan pulls data for the lan where id = lanid returns an instance struc .
updatelan does a partial update to a lan using json from [ ] byte json returns a instance struc .
deletelan deletes a lan where id == lani .
listnics returns a nics struct collectio .
createnic creates a nic on a serve .
getnic pulls data for the nic where id = srvid returns a instance struc .
updatenic partial update of nic propertie .
deletenic deletes the nic where id=nicid and returns a resp struc .
listsnapshots lists all snapshot .
getsnapshot gets a specific snapsho .
deletesnapshot deletes a specified snapsho .
updatesnapshot updates a snapsho .
listipblocks lists all ip block .
reserveipblock creates an ip bloc .
getipblock gets an ip block .
updateipblock partial update of ipblock propertie .
releaseipblock deletes an ip bloc .
listvolumes returns a collection struct for volumes in the datacente .
getvolume gets a volum .
updatevolume updates a volum .
createvolume creates a volum .
deletevolume deletes a volum .
createsnapshot creates a volume snapsho .
restoresnapshot restores a volume with provided snapsho .
listservers returns a server struct collectio .
createserver creates a server from a jason [ ] byte and returns a instance struc .
getserver pulls data for the server where id = srvid returns a instance struc .
updateserver partial update of server properties passed in as jason [ ] byte returns instance struc .
deleteserver deletes the server where id=srvid and returns resp struc .
listattachedcdroms returns list of attached cd rom .
attachcdrom attaches a cd ro .
getattachedcdrom gets attached cd rom .
detachcdrom detaches a cd ro .
listattachedvolumes lists attached volume .
attachvolume attaches a volum .
getattachedvolume gets an attached volum .
detachvolume detaches a volum .
startserver starts a serve .
listlocations returns location collection dat .
getregionallocations returns a list of available locations in a specific regio .
getlocation returns location dat .
getcontractresources returns list of contract resource .
listimages returns an collection struc .
getimage returns an instance struct where id ==imagei .
listgroups lists all group .
getgroup gets a grou .
creategroup creates a grou .
updategroup updates a grou .
deletegroup deletes a grou .
listshares lists all share .
getshare gets a shar .
addshare adds a shar .
updateshare updates a shar .
deleteshare deletes a shar .
listgroupusers lists users in a grou .
addusertogroup adds a user to a grou .
deleteuserfromgroup removes a user from a grou .
listusers lists all user .
getuser gets a use .
createuser creates a use .
updateuser updates user informatio .
deleteuser deletes the specified use .
listresources lists all resource .
getresourcebytype gets a resource by typ .
listresourcesbytype list resources by typ .
listrequests lists all request .
getrequest gets a specific reques .
getrequeststatus retursn status of the reques .
/ * open returns a new writer at the specified path .
/ * write p bytes to our file .
close our writer .
getserializableargument get serializable argumen .
boolvar defines a bool flag with specified name .
bool defines a bool flag with specified name .
intvar defines an int flag with specified name .
int defines an int flag with specified name .
int64var defines an int64 flag with specified name .
int64 defines an int64 flag with specified name .
uintvar defines a uint flag with specified name .
uint defines a uint flag with specified name .
uint64var defines a uint64 flag with specified name .
uint64 defines a uint64 flag with specified name .
stringvar defines a string flag with specified name .
string defines a string flag with specified name .
float64var defines a float64 flag with specified name .
float64 defines a float64 flag with specified name .
durationvar defines a time .
duration defines a time .
parse parses the environment flags from os .
writestringtofile writes the string to the file at the provided path .
readfiletostring reads the file at the provided path to a string .
linereader returns a channel that reads the contents of a reader line - by - line .
linereaderfrom returns a channel that reads the contents of a file line - by - line .
fileexists returns a flag indicating whether a provided file path exists .
fileexistsinpath returns a flag indicating whether the provided file exists in the current path .
getpathparts returns the absolute directory path .
getthispathparts returns the same information as getpathparts for the current executable .
randomstring generates a random set of characters with the given lenght .
parseaddress parses a standard golang network address and returns the protocol and path .
homedir returns the home directory of the user that owns the current process .
istcpportavailable returns a flag indicating whether or not a tcp port is available .
randomtcpport gets a free .
collect implements prometheus collector interface .
describe implements prometheus collector interface .
hashstring works like hash but accept string as an input .
context gets implements rpcserver interface .
collect implements prometheus collector interface .
describe implements prometheus collector interface .
token implements oauth2 .
newdaemon allocates new daemon instance using given options .
close implements io .
newaccesstokencontext returns a new context that carries token value .
accesstokenfromcontext returns the token value stored in context .
randomaccesstoken generate access token with given key and generated hash of length 64 .
continueonerror errorhandling return a descriptive error .
abandon provides a mock function with given fields a0 .
delete provides a mock function with given fields a0 .
setup provides a mock function with given field .
start provides a mock function with given fields a0 .
init allocates new logger based on given options .
newstackdriverconfig .
marshallogobject implements zapcore objectmarshaler .
marshallogobject implements zapcore objectmarshaler .
marshallogobject implements zapcore objectmarshaler .
marshallogobject implements zapcore objectmarshaler .
load loads a dictionary from a file .
start implements storage interface .
get implements storage interface .
exists implements storage interface .
abandon implements storage interface .
delete implements storage interface .
setup implements storage interface .
teardown implements storage interface .
collect implements prometheus collector interface .
describe implements prometheus collector interface .
initjaeger returns an instance of jaeger tracer that samples 100 % of traces and logs all spans to stdout .
usage prints to stdout information about the too .
build constructs a double array from given keywords .
read loads a double array .
get provides a mock function with given fields a0 .
list provides a mock function with given fields a0 .
setvalue provides a mock function with given fields a0 .
get if possible returns node for a given bucket id .
externalnodes returns all available nodes except host .
getother returns node for given access token .
gostring implements fmt gostringer interface .
scan satisfy sql .
value satisfy driver .
has checks if the given key is set .
continueonerror errorhandling return a descriptive error .
writeto saves a index table .
readindextable loads a index table .
new will create an actionbar objec .
registeraction register global actio .
actions register action .
render will return the html of the bar .
funcmap will return helper to render inline edit butto .
editmode return whether current mode is preview or edit .
switchmode is handle to store switch status in cooki .
inlineedit using to make inline edit resource shown as slideou .
error returns a string representation of error e .
parsefile parses the netrc file identified by filename and returns the set of machine information and macros defined in it .
findmachine parses the netrc file identified by filename and returns the machine named by name .
new returns a pointer to an instance of kace loaded with a common initialsms trie based on the provided map .
camel returns a camelcased string .
pascal returns a pascalcased string .
snake returns a snake cased string with all lowercase letters .
snakeupper returns a snake cased string with all upper case letters .
kebab returns a kebab - cased string with all lowercase letters .
kebabupper returns a kebab - cased string with all upper case letters .
ispathsafe checks if the passed in path conforms to a whitelist .
done is called on a completed reques .
start is called on start of a reques .
done is called on a completed reques .
tracer sets a request tracer constructo .
sanitizerenabled will enable the input sanitizer which passes the url path through a strict whitelist .
endpoint returns a url constructed from parts and version appended .
postjson posts json " application / json " encoded request body c .
delete executes delete request to the endpoint with no body re .
deletewithparams executes delete request to the endpoint with optional query arguments re .
get executes get request to the server endpoint with optional query arguments passed in params re .
getfile executes get request and returns a file like object f .
setauthheader sets client s authorization headers if client was configured to work with authorizatio .
newbuffersfromfiles wraps the specified files with a reader that caches data into a memory buffe .
newfilebuffer creates a buffer for reading from the specified file fil .
rewind resets this filebuffer to read from the beginnin .
this is useful with kingpin option parse .
this is useful with survey prompting librar .
string is required for kingpin to generate usage with this datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
set is required for kingpin interfaces to allow command line params to be set to our map datatyp .
-- trigger trigger creates a new pagerduty incident using the default client with the given description .
triggerincidentkey triggers an incident using the default client with a given incident key only if that incident has been resolved or if that incident doesnt exist yet .
triggerwithdetails triggers an incident using the default client with a description string and a key - value map that will be saved as the incident s " details " .
triggerincidentkeywithdetails triggers an incident using the default client with a given incident key only if that incident has been resolved or if that incident doesnt exist yet .
trigger creates a new pagerduty incident with the given description .
merge will attempt to merge the data from src into dst .
recursively set the source attribute of the option .
do executes the function in a transaction .
newfile is a convenience function which creates and opens a fil .
runbenchmarks executes the benchmarks based upon the given criteria returns a resultse .
string implements string from the stringer interface and allows results to be serialized to a stin .
tabulate transforms the resultssets and returns a slice of ro .
amazonrequest is an example to benchmark a call to googles homepag .
writetabulardata writes the given results to the given output strea .
reduce reduces the resultset into buckets defined by the given interva .
newsemaphore is used to create a new semaphore .
release unlocks the semaphore and allows new lock instances to be called without blocking if the number of locks currently equal the capacity .
resize allows dynamic resizing of the semaphore .
new creates a new bench and intializes the intial values of .
addoutput adds an output writer to benc .
runbenchmarks runs the benchmarking for the given functio .
we start by dealing with each of the primitive types in turn .
integer checkinteger returns nil if the given bytes are a valid der - encoded integer and an error otherwise .
parseint64 treats the given bytes as a big - endian .
parseint treats the given bytes as a big - endian .
parsebigint treats the given bytes as a big - endian .
bit string parsebitstring parses an asn .
object identifier parseobjectidentifier parses an object identifier from the given bytes and returns it .
parsebase128int parses a base - 128 encoded int from the given offset in the given byte slice .
parsegeneralizedtime parses the generalizedtime from the given byte slice and returns the resulting time .
printablestring parseprintablestring parses a asn .
isprintable reports whether the given b is in the asn .
ia5string parseia5string parses a asn .
t61string parset61string parses a asn .
utf8string parseutf8string parses a asn .
tagging parsetagandlength parses an asn .
parsesequenceof is used for sequence of and set of values .
invalidlength returns true iff offset + length > slicelength .
canhavedefaultvalue reports whether k is a kind that we will set a default value for .
setdefaultvalue is used to install a default value .
unmarshal parses the ber - encoded asn .
unmarshalwithparams allows field parameters to be specified for the top - level element .
given a tag string with the format specified in the package comment .
given a reflected go type .
decodestring decodes the given base32 encodeed byte .
user returns the mail notifier .
save mail notifier adds a new mail notifier .
registerplugin registers a plugin by name .
initplugin creates an instance of the named plugin .
set up the indexes for the db can be called during the initializatio .
until loops until stop channel is closed .
logpanic logs the caller tree when a panic occurs .
this method takes map [ string ] map [ string ] string == > map [ metric / table name ] map [ timestamp ] valu .
initplugin creates an instance of the named plugin .
user returns the user with the given username .
users returns a slice of all users .
saveuser adds a new user .
deleteuser removes a user .
newtlsserver sets up a pantheon ( tm ) type of tls server that requires and verifies peer cer .
loadcacertfile reads in a ca cert file that may contain multiple certs and gives you back a proper x509 .
newauth returns an aut .
validaterequest perfomrs verification on the tls certs and chai .
process is the main entrypoin .
validatecn checks the cn of a verified peer cert and raises a 403 if the cn doesnt match any cn in the allowedcns list .
validateou checks the ou of a verified peer cert and raises 403 if the ou doesnt match any ou in the allowedous list .
keylen returns the minimum number of bytes required to represent x ; the result is 1 for x == 0 .
put serializes x into the buffer ( big endian ) .
defaultconfig provides a default configuration to create a certificate signer .
new creates a new configured certificate signer .
computerolehash computes a hash for the role that can issue these organizations .
new creates a new configured vault factory .
defaultserviceconfig provides a default configuration to create a pki controller .
newservice creates a new configured pki controller .
isnovaulthandlerdefined asserts a dirty string matching against the error message provided by err .
new takes a configuration and returns a configured service .
create creates a role if it doesnt exist yet .
createjob creates a basic empty configuration with some defaults .
run starts the jo .
newwatcher is the internal function for properly setting up a new watcher .
start begins watching the files .
stop listening for changes to the files .
returns true if the watcher is actively looking for changes .
the add method takes a variable number of string arguments and adds those files to the watch list .
goroutine that cycles through the list of paths and checks for updates .
watching returns a list of the files being watched .
state returns a slice of notifications representing the files being watched and their last event .
store stores an error into the request s context .
get retrieves an error from the request s context .
catch creates middleware that processes errors stored while serving a request .
recover creates middleware that can recover from a panic in a handler .
format formats the error optionally including the stack trace .
go client for performance testin .
synchandler is a small wrapper around sync which simply synchronises all incoming connections .
connect using the provided transport and block until connection is read .
send to connection .
numconnections currently activ .
push the changes from this object to all connected clients .
intail follow the tail of file and post bulkmessage to channel .
new creates a new logger .
close closes the connection .
isreconnecting return true if a reconnecting process in progress .
connect establishes a new connection using the specified transport .
notification is the builde .
nullnotification is the builder for tests where no side effects are desire .
new creates a new ca .
issue issues a new identity with this one as its parent .
pfx wraps the certificate and private key in an encrypted pkcs .
chain builds a slice of * x509 .
chainpool builds an * x509 .
subject is an option that sets a identity s subject field .
privatekey is an option for setting the identity s private key .
notbefore is an option for setting the identity s certificate s notbefore .
notafter is an option for setting the identity s certificate s notafter .
issuingcertificateurl is an option for setting the identity s certificate s issuingcertificateurl .
ocspserver is an option for setting the identity s certificate s ocspserver .
new creates a new api client for a telegram bot using the apikey provided .
close shuts down this client .
getme returns basic information about the bot in form of a userresponse .
runbot runs a bot .
newoutgoingmessage creates a new outgoing message .
newoutgoinglocation creates a new outgoing location .
newoutgoingvenue creates a new outgoing location .
newoutgoingvideo creates a new outgoing video file .
newoutgoingvideoresend creates a new outgoing video file for re - sending .
newoutgoingphoto creates a new outgoing photo .
newoutgoingphotoresend creates a new outgoing photo for re - sending .
newoutgoingsticker creates a new outgoing sticker message .
newoutgoingstickerresend creates a new outgoing sticker message for re - sending .
newoutgoingaudio creates a new outgoing audio file .
newoutgoingaudioresend creates a new outgoing audio file for re - sending .
newoutgoingdocument creates a new outgoing file .
newoutgoingdocumentresend creates a new outgoing file for re - sending .
newoutgoingforward creates a new outgoing .
newoutgoingchataction creates a new outgoing chat action .
newoutgoinguserprofilephotosrequest creates a new request for a users profile photos .
newoutgoingkickchatmember creates a request to kick a member from a group chat or channel .
newoutgoingunbanchatmember creates a request to unban a member of a group chat or channel .
newoutgoingcallbackqueryresponse creates a response to a callback query .
newinlinequeryanswer creates a new inline query answer .
type determines the type of the message .
type returns the type of the update .
marshaljson marshals the recipient to json .
querystring implements querystringer to represent the outgoing certificate file .
setreplytomessageid sets the id for the message to reply to ( optional ) .
getbasequerystring gets a querystring representing this message .
getmessagebasequerystring gets a querystring representing this message .
setduration sets a duration for the audio file ( optional ) .
setperformer sets a performer for the audio file ( optional ) .
settitle sets a title for the audio file ( optional ) .
querystring implements querystringer to represent the audio file .
setfoursquareid sets the foursquare id for the venue ( optional ) .
setmarkdown sets or resets whether the message should be parsed as markdown or plain text ( optional ) .
sethtml sets or resets whether the message should be parsed as html or plain text ( optional ) .
setdisablewebpagepreview disables web page previews for the message ( optional ) .
setcaption sets a caption for the photo ( optional ) .
querystring implements querystringer to represent the photo .
setoffset sets an offset for the request ( optional ) .
setlimit sets a limit for the request ( optional ) .
querystring implements querystringer to represent the request .
setcaption sets a caption for the video file ( optional ) .
setduration sets a duration for the video file ( optional ) .
querystring implements querystringer to represent the outgoing video file .
newinlinequeryresultarticle returns a new inlinequeryresultarticle with all mandatory fields set .
newinlinequeryresultphoto returns a new inlinequeryresultphoto with all mandatory fields set .
newinlinequeryresultgif returns a new inlinequeryresultgif with all mandatory fields set .
newinlinequeryresultmpeg4gif returns a new inlinequeryresultmpeg4gif with all mandatory fields set .
newinlinequeryresultvideo returns a new inlinequeryresultvideo with all mandatory fields set .
send sends the request .
send sends the chat action .
send sends the inline query answer .
send sends the kick request .
send sends the unban request .
send sends the callback response .
beforeinsert sets current time to createdat and updatedat field .
tointerfaceslice convert to [ ] interface from [ ] string .
columnname returns the column name that added the table name with quoted if needed .
new returns a new db .
from returns a " from " statement .
where returns a new condition of " where " clause .
orderby returns a new condition of " order by " clause .
limit returns a new condition of " limit " clause .
offset returns a new condition of " offset " clause .
join returns a new joincondition of " join " clause .
count returns " count " function .
droptable removes the table from database .
createindex creates the index into database .
createuniqueindex creates the unique index into database .
begin starts a transaction .
commit commits the transaction .
quote returns a quoted s .
setlogoutput sets output destination for logging .
setlogformat sets format for logging .
selecttovalue returns a single value fetched from rows .
fieldindexbyname returns the nested field corresponding to the index sequence .
columns returns the comma - separated column name with quoted .
tagsfromfield returns a slice of option strings .
hasskiptag returns whether the struct field has the " - " tag .
haspktag returns whether the struct field has the " pk " tag .
isautoincrementable returns whether the struct field is integer .
collectfieldindexes returns the indexes of field which doesnt have skip tag and pk tag .
findpkindex returns the nested field corresponding to the index sequence of field of primary key .
sizefromtag returns a size from tag .
columnfromtag returns the column name .
defaultfromtag returns a " default .
where adds " where " clause to the condition and returns it for method chain .
and adds " and " operator to the condition and returns it for method chain .
or adds " or " operator to the condition and returns it for method chain .
like adds " like " clause to the condition and returns it for method chain .
between adds " between .
orderby adds " order by " clause to the condition and returns it for method chain .
limit adds " limit " clause to the condition and returns it for method chain .
offset adds " offset " clause to the condition and returns it for method chain .
on adds " [ left ] join .
newrat returns a new rat .
scan implements the database / sql scanner interface .
value implements the database / sql / driver valuer interface .
scan implements the database / sql scanner interface .
setformat sets the format for logging .
print outputs query log using format template .
print is a dummy method .
quote returns a quoted s for a column name .
new archive if the exentions of the target file is .
disconnect destroys the state for a particular host instance .
finditems finds vix objects .
openvm opens a virtual machine on the host and returns a vm instance .
registervm adds a virtual machine to the host s inventory .
copyfiletoguest copies a file or directory from the local system ( where the vix client is running ) to the guest operating system .
nextnetworkadapterid returns the next available ethernet id .
totalnetworkadapters returns the total number of network adapters in the vmx file .
removeallnetworkadapters deletes all network adapters from a vm .
removenetworkadapter deletes network adapter from vmx file that matches the id in " adapter .
/ * ---------- path = badges .
newarchive uses 7z to extract a list of files in .
getfilereader returns a reader for reading a given fil .
extracttowriter writes the content of a given file inside the archive to ds .
extracttofile extracts a given file from the archive to a file on dis .
sharedfoldersparentdir returns the parent dir for share folders in the guest .
copyfiletohost copies a file or directory from the guest operating system to the local system ( where the vix client is running ) .
mktemp creates a temporary file in the guest operating system .
rmdir deletes a directory in the guest operating system .
rmfile deletes a file in the guest operating system .
isdir tests the existence of a directory in the guest operating system .
isfile tests the existence of a file in the guest operating system .
fileinfo returns information about a file in the guest operating system .
kill terminates a process in the guest operating system .
logout removes any guest operating system authentication context created by a previous call to vm .
runprogram runs a program in the guest operating system .
mv renames a file or directory in the guest operating system .
name returns user defined name for the snapshot .
description returns user defined description for the snapshot .
child returns the child snapshot corresponding to the index parameter .
numchildren returns the number of child snapshots of a specified snapshot .
cleanupsnapshot cleans up snapshot internal c handle .
attachcddvd attaches a cd / dvd drive to the virtual machine .
cddvds returns an unordered slice of currently attached cd / dvd devices on any bus .
removeallcddvddrives deletes all the cd / dvd drives from the vm s vmx file .
bustypefromid gets bustype from device id .
cddvd returns the cd / dvd drive identified by id .
read reads vmx file from disk and unmarshals i .
write marshals and writes vmx file to dis .
todo ( c4milo ) legacy function .
todo ( c4milo ) legacy function .
newvirtualmachine creates a new vm instance .
vcpus returns number of virtual cpus configured for the virtual machine .
vmxpath returns path to the virtual machine configuration file .
memorysize returns memory size of the virtual machine .
readonly tells whether or not the vm is read - only .
invmteam returns whether the virtual machine is a member of a team .
powerstate returns power state of the virtual machine .
toolsstate returns state of the vmware tools suite in the guest .
isrunning returns whether the virtual machine is running .
guestos returns the guest os .
features returns vm supported features .
addsharedfolder mounts a new shared folder in the virtual machine .
removesharedfolder removes a shared folder in the virtual machine .
screenshot captures the screen of the guest operating system .
clone creates a copy of the virtual machine specified by the current vm instance .
cleanupvm cleans up vm vix handle .
createsnapshot saves a copy of the virtual machine state as a snapshot object .
removesnapshot deletes all saved states for the snapshot .
delete permanently deletes a virtual machine from your host system .
snapshotbyname returns a snapshot object matching the given name .
totalrootsnapshots returns the number of top - level ( root ) snapshots belonging to a virtual machine .
totalsharedfolders returns the number of shared folders mounted in the virtual machine .
rootsnapshot returns a root snapshot instance belonging to the current virtual machine .
setsharedfolderstate modifies the state of a shared folder mounted in the virtual machine .
sharedfolderstate returns the state of a shared folder mounted in the virtual machine .
poweroff powers off a virtual machine .
suspend suspends a virtual machine .
readvariable reads variables from the virtual machine state .
writevariable writes variables to the virtual machine state .
reverttosnapshot restores the virtual machine to the state when the specified snapshot was created .
logininguest establishes a guest operating system authentication context returning an instance of the guest object .
installtools prepares to install vmware tools on the guest operating system .
waitfortoolsinguest signals the job handle when vmware tools has successfully started in the guest operating system .
updatevmx updates vmx file for the vm .
setmemorysize sets memory size in megabytes .
setnumbervcpus sets number of virtual cpus assigned to this machine .
setdisplayname sets virtual machine name .
setannotation sets annotations for the virtual machine .
setvirtualhwversion sets a virtual hardware version in the vmx file of the vm .
connect connects to a vmware provider .
error returns a description of the error along with its code and operation implementing go s error interface .
errorf returns a traceable error with the given formatted message .
error returns the original error message plus the stack trace captured at the time the error was first wrapped .
string converts a given stack frame to a formated string .
newstackframe returns a new stack frame initialized from the passed in program counter .
capturestack returns a slice of stack frames representing the stack of the calling go routine .
parsefuncname returns the package path and function signature for a give func name .
stack logs the error err with the stack trace .
stackwithcaller logs the error err with the caller package name and the stack trace .
write calls the writer upstream after executing the functions in the before field .
bindresponsewriter catches a downstream response writing and transfer its content to the writer w ( that will normally take care to use the original responsewriter ) .
setdetectedcontenttype detects .
new servererror .
new validationerror .
new notfounderror .
err return a controller erro .
intmin param must be a integer .
intmax param must be a integer .
intrange param must be a integer .
int64range param must be a integer .
intrangezoom param must be a number .
strlength param is a string .
strlenrange param is a string .
strlenin param is a string .
strin param is a string .
getemail check is a emai .
mostspecific returns the most specific from a list of types in an hierarchy behaviour is undefined if any of the types are siblings .
full type hierarchy is returned when provided either the concept type or full uri of the most specific concept typ .
sorttypes sorts the given types from least specific to most specifi .
delete value in redis sessio .
set value in redis sessio .
refresh refresh store to redi .
get read redis session by si .
destroy delete redis session by i .
upexpire refresh session expir .
use adds a handler to the handlers stack .
use adds middleware to the group .
group creates a new router group .
apiurl - establishes the apiurl given a whether the label is a person .
run starts the server for listening and serving .
create returns a new blank engine instance without any middleware attached .
redirect redirect replies to the request with a redirect to url .
fail response fai .
next calls the next handler in the stack .
param returns the value of the url param .
getsession get sessio .
getbodyjson return a json from bod .
setsession set sessio .
freshsession set sessio .
deletesession delete sessio .
recover recovers form panics .
write sets the context s written flag before writing the response .
writeheader sets the context s written flag before writing the response header .
err return a controller erro .
new instantiates a new client with the given params and return a reference to i .
allowlargeresults is a configuration function that can be used to enable the allowlargeresults setting of a bigquery request .
setallowlargeresults - private function to set the allowlargeresults and temptablename value .
connect - opens a new connection to bigquery .
insertrow inserts a new row into the desired project .
asyncquery loads the data by paging through the query results and sends back payloads over the datachan - datachan sends a payload containing data objects made up of the headers .
query loads the data for the query paging if necessary and return the data rows .
stdpagedquery executes a query using default job parameters and paging over the results .
pagedquery executes the query using bq s paging mechanism to load all results and sends them back via datachan if available .
pageoverjob loads results for the given job reference and if the total results has not been hit continues to load recursivel .
syncquery executes an arbitrary query string and returns the result synchronously ( unless the response takes longer than the provided timeout ) .
count loads the row count for the provided dataset .
insertnewtable creates a new empty table for the given project and dataset with the field name / types defined in the fields ma .
work uses fetcher to recursively crawl pages starting with url .
subworker catches any panic while running the job .
worker gets a job from the job pipe .
new ( ) creates a new pool .
the supervisor feeds jobs to workers and keeps track of them .
run starts the pool by launching the workers .
stop will signal the workers to exit and wait for them to actually do that .
add creates a job from the given function and args and adds it to the pool .
wait blocks until all the jobs in the pool are done .
results retrieves the completed jobs .
waitforjob blocks until a completed job is available and returns it .
status returns a " stats " instance .
method takes one map as a paramater .
chain combins a slide of handlerfunc ( s ) in to one request .
rand picks one handlerfunc ( s ) in the slide .
websockethandlerfunc convert websocket function to possum .
staticfile returns the view which can serve static files .
preloadfile returns the view which can preload static files and serve them .
regex matches path using regular patterns .
wildcard matches paths with wildcard form .
colon matches path with rest - full resources uri in perfix colon form .
inithtmltemplates initialzes a series of html templates in the directory pattern .
inittexttemplates initialzes a series of plain text templates in the directory pattern .
html retruns a templateview witch uses html templates internally .
text retruns a templateview witch uses text templates internally .
initwatcher initialzes a watcher to watch templates changes in the pattern .
closewatcher closes the wathcer .
find a router with the specific path and return it .
add a router to lis .
newrouters initailizes routers instance .
newservermux returns a new handler .
internal error handle .
handlefunc specifies a pair of handler and view to handle the request witch matching router .
handleerror tests the context error and assign it to response .
redirect performs a redirecting to the url .
brace matches path with rest - full resources uri in brace form .
initpprof registers pprof handlers to the servemux .
startsession initaillizes a session context .
combination generato .
combination generator for int slic .
repeated combination generator for int slic .
permutation generato .
permtation generator for int slic .
repeated permtation generator for int slic .
interface similar to " fmt " package errorm returns error instance with formatted error message .
fprintm writes formatted string to provided writer .
printf prints formatted string to stdout .
sprintf returns formatted string .
validate a password against the given requirements returns a boolean indicating whether the password meets the requirements .
generate password requirements from an existing password .
make sure password strength requirements make sens .
simple cli interface .
generate a password given requirement .
generate one password that meets the given requirement .
generate n passwords that meet the given requirement .
append digits to strin .
add punctuation characters to start and end of strin .
the environ sequence is consonant .
best - effort attempt to get an int from crypto / rand .
this init function is deprecated .
param defines a parameter with the specified name .
parse parses parameter definitions from the map .
unmarshal parses the json payload from the command arguments and unmarshal into a value pointed to by v .
deviceinfo returns information about a particular devic .
devicepresence returns data about presence of a dat .
notificationstatus returns status of a particular notificatio .
deletenotification deletes a created notificatio .
subscribetotopic subscribes a particular device to topics ( when you want to do from backend ) .
notifydevice sends notification data to device .
simple assert call for unit and functional test .
we could use fallocate .
adderror appends an error to a list of general errors .
addfielderror appends an error to a list of field specific errors .
haserrors returns weather formerrors instance contains at leas one error .
newerror initializes formerrors with one general error .
newfielderror initializes formerrors with one field error .
chainhandlers executes each function from the arguments with handler from the next function to construct a chan fo callers .
hash returns a part of a md5 sum of a file .
ishash checks is provided string a valid hash .
withbasedir sets the directory in which template files are stored .
withfilefindfunc sets the function that will return the file path on disk based on filename provided from files defind using withtemplatefromfile or withtemplatefromfiles .
withtemplatefromfiles adds a template parsed from files .
withtemplatesfromfiles adds a map of templates parsed from files .
withtemplatefromstrings adds a template parsed from string .
withtemplatesfromstrings adds a map of templates parsed from strings .
withfunction adds a function to templates .
withfunctions adds function map to templates .
withdelims sets the delimiters used in templates .
withlogfunc sets the function that will perform message logging .
respondwithstatus executes a template with provided data into buffer .
respondtemplate executes a named template with provided data into buffer .
respond executes template with provided data into buffer .
rendertemplate executes a named template and returns the string .
new creates a new instance of server .
serveudp serves requests over udp connection .
shutdown calls h2quic .
quicheadershandler should be used as a middleware to set quic related headers to tcp server that suggest alternative svc .
getrequestendpoint returns request s host perpended with protocol protocol host .
new creates a new instance of servers with applied options .
add adds a new server instance by a custom name and with address to listen to .
tcpaddr returns a tcp address of the listener that a server with a specific name is using .
udpaddr returns a udp address of the listener that a server with a specific name is using .
close stops all servers .
shutdown gracefully stops all servers .
accept accepts tcp connection .
marshaljson implements of json .
unmarshaljson implements json .
marshalyaml implements of yaml .
unmarshalyaml implements yaml .
roundtrip calls f ( r ) .
withlogfunc sets the function that will perform message logging .
new creates a new handler from the handler that is wrapped and protected with recover function .
notify calls notifierfunc ( subject .
newcontextfunc creates a new function that can be used to store and access arbitrary data by keys .
newmaperrorregistry creates a new instance of maperrorregistry .
adderror adds a new error with a code to the registry .
addmessageerror adds a new error isntance with a code and message to the registry .
mustadderror calls adderror and panics in case of an error .
mustaddmessageerror calls addmessageerror and panics in case of an error .
addhandler adds a new error handler with a code to the registry .
mustaddhandler calls addhandler and panics in case of an error .
handler returns a handler that is registered under the provided code .
new returns a new instance of client with default values .
jsonunmarshal decodes data into v and returns json .
servetcp serves request on tcp listener .
shutdown executes grpc .
new initializes a new instance of server .
hashedpath returns a url path with hash injected into the filename .
status returns true if maintenance is enabled .
on enables maintenance .
off disables maintenance .
status returns true if maintenance is enabled .
on enables maintenance .
off disables maintenance .
new creates a new instance of handler .
status returns whether the maintenance mode is enabled .
marshaljson calls json .
respond without doing anything .
stability * * * experimental * * * a paginated list of builds that have been run in taskcluster .
stability * * * experimental * * * returns any repository metadata that is useful within taskcluster related services .
stability * * * experimental * * * for a given changeset ( sha ) of a repository .
stability * * * experimental * * * for a given issue or pull request of a repository .
marshaljson calls json .
marshaljson calls json .
respond without doing anything .
stability * * * experimental * * * send an email to address .
stability * * * experimental * * * publish a message on pulse with the given routingkey .
stability * * * experimental * * * post a message on irc to a specific channel or user .
stability * * * experimental * * * add the given address to the notification denylist .
stability * * * experimental * * * lists all the denylisted addresses .
returns a signed url for listdenylist .
newfromenv returns an ec2manager client with credentials taken from the environment variables taskcluster client id taskcluster access token taskcluster certificate if environment variables taskcluster client id is empty string or undefined authentication will be disabled .
returns a signed url for ensurekeypair .
returns a signed url for regions .
marshaljson calls json .
marshaljson calls json .
marshaljson calls json .
unmarshaljson is a copy of the json .
newfromenv returns an * index configured from environment variables .
respond without doing anything .
find a task by index path .
list the namespaces immediately under a given namespace .
insert a task into the index .
returns a signed url for findartifactfromtask .
marshaljson calls json .
marshaljson calls json .
marshaljson calls json .
marshaljson calls json .
respond without doing anything .
stability * * * experimental * * * given an oidc access token from a trusted openid provider .
respond without doing anything .
publish a request to purge caches named cachename with on provisionerid / workertype workers .
view all active purge requests .
list the caches for this provisionerid / workertype that should to be purged if they are from before the time given in the response .
respond without doing anything .
this endpoint will return a list of all hook groups with at least one hook .
this endpoint will return a list of all the hook definitions within a given hook group .
this endpoint will return the hook definition for the given hookgroupid and hookid .
this endpoint will remove a hook definition .
returns a signed url for gettriggertoken .
this endpoint triggers a defined hook with a valid token .
returns a signed url for workertype .
marshaljson implements the json .
unmarshaljson implements the json .
respond without doing anything .
set the secret associated with some key .
delete the secret associated with some key .
read the secret associated with some key .
returns a signed url for get .
list the names of all secrets .
write implements the io .
seek implements the io .
read implements the io .
marshaljson calls json .
marshaljson calls json .
stability * * * experimental * * * todo see .
publishtask submits the task taskid with definition tdr using queue .
loadapis takes care of reading all json files and performing elementary processing of the data .
respond without doing anything .
list tasks sharing the same taskgroupid .
create a new task .
claim pending task ( s ) for the given provisionerid / workertype queue .
stability * * * deprecated * * * claim a task - never documented required scopes any of - all of * queueclaim - task < provisionerid > / < workertype > * queueworker - id < workergroup > / < workerid > - all of * queueclaim - task * assumeworker - type < provisionerid > / < workertype > * assumeworker - id < workergroup > / < workerid > see .
stability * * * experimental * * * this endpoint finalises an upload done through the blob storagetype .
stability * * * experimental * * * returns a list of artifacts and associated meta - data for a given run .
stability * * * experimental * * * get all active provisioners .
stability * * * experimental * * * get an active provisioner .
stability * * * experimental * * * get all active worker - types for the given provisioner .
stability * * * experimental * * * get a worker - type from a provisioner .
stability * * * experimental * * * get a list of all active workers of a workertype .
stability * * * experimental * * * get a worker from a worker - type .
respond without doing anything .
get a list of all clients .
get information about a single client .
get a list of all roles .
if no limit is given .
get information about a single role .
stability * * * deprecated * * * return an expanded copy of the given scopeset .
returns a signed url for awss3credentials .
retrieve a list of all azure accounts managed by taskcluster auth .
returns a signed url for azureaccounts .
retrieve a list of all tables in an account .
returns a signed url for azuretables .
get a shared access signature ( sas ) string for use with a specific azure table storage table .
returns a signed url for azuretablesas .
get a shared access signature ( sas ) string for use with a specific azure blob storage container .
get temporary dsn ( access credentials ) for a sentry project .
returns a signed url for sentrydsn .
returns a signed url for websocktunneltoken .
validate the request signature given on input and return list of scopes that the authenticating client has .
createtemporarycredentials is an alias for createnamedtemporarycredentials with an empty name .
cert attempts to parse the certificate string to return it as an object .
credentialsfromenvvars creates and returns taskcluster credentials initialised from the values of environment variables taskcluster client id taskcluster access token taskcluster certificate no validation is performed on the assigned values .
respond without doing anything .
stability * * * experimental * * * connect to receive messages see .
utility function to create a url object based on given dat .
signrequest will add an authorization heade .
apicall is the generic rest api calling method which performs all rest api calls for this library .
signedurl creates a signed url using the given client .
marshaljson calls json .
bmw256 calculates and returns bmw256 of input .
newcubehash initializes anrd retuns cubuhash struct .
cubehash56 calculates cubuhash256 .
sum returns the result of lyra2re2 hash .
/ * blake2b s rotation * / .
/ * g is blake2b s g function * / .
/ * * * initstate initializes the sponge state .
/ * * * squeeze performs a squeeze operation .
/ * * * absorbblock performs an absorb operation for a single block ( block len int64 words * of type uint64 t ) .
/ * * * absorbblockblake2safe performs an absorb operation for a single block ( block len blake2 safe int64 * words of type uint64 t ) .
/ * * * reducedsqueezerow0 erforms a reduced squeeze operation for a single row .
newreaderbytecodeloader creates a new objec .
loadreader takes a io .
newv3 creates a new uuid with variant 3 as described in rfc 4122 .
sets literal in op arg to register s .
fetches a symbol specified in op arg from template variables .
pushmark load lvar 0 push literal i start push literal i end push fetch slice / * func txfetchslice ( st * state ) container = st .
sets the contents of register sa to a regular string .
prints the contents of register sa to output .
prints the contents of register sa .
newloopvar creates the loop variabl .
function calls ( not to be confused with method calls .
xxx can i just push a [ ] int to st .
grab every thing from current mark up to the tip of the stack .
executes what s in st .
dumpast sets the bitmask for dumpast debug fla .
dumpbytecode sets the bitmask for dumpbytecode debug fla .
optimize modifies the bytecode in place to an optimized versio .
newfuncdepot creates a new funcdepot under the given namespace .
get returns the function associated with the given key .
set stores the function under the name key .
newfiletemplatefetcher creates a new struct .
fetchtemplate returns a templatesource representing the template at path path .
lastmodified returns time when the target template file was last modifie .
reader returns the io .
bytes returns the bytes in teh template fil .
newstate creates a new state struc .
pushframe pushes a new frame to the frame stac .
popframe pops the frame from the top of the frame stac .
currentframe returns the frame currently at the top of the frame stac .
warnf is used to generate warnings during virtual machine executio .
appendoutputstring is the same as appendoutput .
popmark pops the mark stored at the top of the mark stac .
currentmark returns the mark stored at the top of the mark stac .
loadbytecode loads a new bytecode .
reset resets the whole state objec .
declarevar puts a new variable in the stack .
getlvar gets the frame local variable at position .
setlvar sets the frame local variable at position .
newbytecode creates an empty bytecode instance .
append appends an op code to the current list of op codes .
appendop is an utility method to create and append a new op code to the current list of op code .
string returns the textual representation of this bytecod .
newcachedbytecodeloader creates a new cachedbytecodeloade .
newfilecache creates a new filecache which stores caches underneath the directory specified by dir .
getcachepath creates a string describing where a given template key would be cached in the file syste .
get returns the cached vm .
set creates a new cache file to store the bytecode .
delete deletes the cach .
get returns the cached bytecod .
set stores the bytecod .
delete deletes the bytecod .
newstringlexer creates a new lexe .
newreaderlexer creates a new lexe .
parsestring is the same as parse .
newv4 creates a new uuid with variant 4 as described in rfc 4122 .
parse parses the given template and creates an as .
parsereader gets the template content from an io .
visit returns a channel which you can receive node structs in order that that they would be processe .
string returns the textual representation of this as .
run executes the given vm .
given possibly non - matched pair of things to perform arithmetic operations on .
defaultcompiler sets up and assigns the default compiler to be used by xslate .
defaultparser sets up and assigns the default parser to be used by xslate .
defaultloader sets up and assigns the default loader to be used by xslate .
defaultvm sets up and assigns the default vm to be used by xslat .
get retrieves the value assigned to key .
configure is called automatically from new ( ) to configure the xslate instance from argument .
new creates a new xslate instance .
render loads the template specified by the given name string .
renderstring takes a string argument and treats it as the template content .
fetchtemplate returns a templatesource representing the template at path path .
newstringbytecodeloader creates a new objec .
loadstring takes a template string and compiles it into vm .
get returns the variable stored in slot x .
newop creates a new op .
argint returns the integer representation of the argumen .
argstring returns the string representatin of the argumen .
keys returns the list of keys in this map .
appendop creates and appends a new op to the current set of bytecod .
compile satisfies the compiler .
newv1 creates a new uuid with variant 1 as described in rfc 4122 .
newv5 creates a new uuid with variant 5 as described in rfc 4122 .
sort returns a sorted list of lexsymbols .
less returns true if the i - th element s priority is less than the j - th elemen .
swap swaps the elements at i and .
copy creates a new copy of the given lexsymbolse .
set creates and sets a new lexitem to name .
getsortedlist returns the lsit of lexsymbols in order that they should be searched for in the tempalt .
top returns the element at the top of the stack or an error if stack is empt .
resize changes the size of the underlying buffe .
extend changes the size of the underlying buffer .
grow automatically grows the underlying buffer so that it can hold at least min element .
get returns the element at position i .
set sets the element at position i to v .
push adds an element at the end of the stac .
pop removes and returns the item at the end of the stac .
string returns the textual representation of the stac .
gethostips returns a list of ip addresses of all host s interfaces .
getprivatehostips returns a list of host s private ip addresses .
isprivate determines whether a passed ip address is from one of private blocks or not .
identical to os .
flags that were not set via command - line arguments .
to be unix y .
call parse ( ) on the flagse .
newpolicy returns a default password policy which can be modifie .
createrandom returns a random byte string of given length from given byte strin .
shuffle the given byte strin .
generate a new password based on given polic .
returns same path as executable .
register is a sentinel option to register a server .
server is a sentinel option to add server funcs .
shutdown is a sentinel option to add shutdown listeners .
ignore is a sentinel option to add ignore error handlers .
sigs is a sentinel option to set the specified signals for shutdown .
logf is a sentinel option to set a logger .
errorf is a sentinel option to set a error logger .
new creates a new sentinel server group .
run starts the server group .
shutdown calls all registered shutdown funcs .
shutdownignore returns if any of the registered ignore funcs reported true .
register registers a server .
mux creates a new network connection muxer and registers its server .
ignoreerror returns a func that will return true when the passed errors match .
ignorenetoperror returns true when the passed error is a net .
convertandappendcontextfuncs converts and appends funcs in v to o .
runserver will set up get .
outputmetricsifrequired will send metrics to graphite if a non - empty graphitetcpaddress is passed in .
buildinfohandler - this is a stop gap and will be added to when we can define what we should display her .
if cookie secret is set to " " .
jsonencoder is an encoder that produces json - formatted responses .
/ * \ tto the land of middle - ware earth \ t \ tone func to rule them all .
json is middleware to deserialize a json payload from the request into the struct that is passed in .
validate is middleware to enforce required fields .
errorhandler simply counts the number of errors in the context and .
this sets the value in a struct of an indeterminate type to the matching value from the request ( via form middleware ) in the same type .
performs validation and combines errors from validation with errors from deserialization .
total errors is the sum of errors with the request overall and errors on individual fields .
converts options into cors headers .
converts options into cors headers for a preflight response .
looks up if the origin matches one of the patterns provided in options .
allows cors for requests those match the provided options .
renderer is a middleware that maps a render .
returns the parsed languages in a human readable fashion .
sessionuser will try to read a unique user id out of the session .
authenticatesession will mark the session and user object as authenticated .
logout will clear out the session and call the logout ( ) user function .
loginrequired verifies that the current user is authenticated .
updateuser updates the user object stored in the session .
getbyid will populate a user object from a database model with a matching id .
addresstoaccountid converts the provided address into a xdr .
mutate applies the provided mutators to this builder s payment or operation .
mutatechangetrust for asset sets the changetrustop s line fiel .
mutatechangetrust for limit sets the changetrustop s limit fiel .
trust is a helper that creates changetrustbuilde .
removetrust is a helper that creates changetrustbuilde .
mutate applies the provided mutators to this builder s payment or operation .
mutatepayment for asset sets the paymentop s asset fiel .
mutatepayment for destination sets the paymentop s destination fiel .
mutatepayment for nativeamount sets the paymentop s currency field to native and sets its amount to the provided intege .
mutatepayment for paywithpath sets the pathpaymentop s sendasset .
mutate applies the provided mutators to this builder s payment or operation .
mutateaccountmerge for destination sets the accountmergebuilder s destination fiel .
mustparse is the panicking version of pars .
parse parses the provided as a stellar " amount " .
string returns an " amount string " from the provided raw value v .
createoffer creates a new offe .
createpassiveoffer creates a new passive offe .
updateoffer updates an existing offe .
deleteoffer deletes an existing offe .
manageoffer groups the creation of a new manageofferbuilder with a call to mutate .
mutate applies the provided mutators to this builder s offer or operation .
mutatemanageoffer for amount sets the manageofferop s amount fiel .
mutatemanageoffer for offerid sets the manageofferop s offerid fiel .
mutatemanageoffer for rate sets the manageofferop s selling .
mutateoperation for sourceaccount sets the operation s sourceaccount to the pubilic key for the address provide .
string returns a string represenation of p .
transaction groups the creation of a new transactionbuilder with a call to mutate .
mutate applies the provided transactionmutators to this builder s transactio .
hash returns the hash of this builder s transaction .
hashhex returns the hex - encoded hash of this builder s transactio .
sign returns an new transactionenvelopebuilder using this builder s transaction as the basis and with signatures of that transaction from the provided signers .
mutatetransaction for allowtrustbuilder causes the underylying allowtrustop to be added to the operation list for the provided transactio .
mutatetransaction for autosequence loads the sequence and sets it on the tx .
mutatetransaction for changetrustbuilder causes the underylying createaccountop to be added to the operation list for the provided transactio .
mutatetransaction for createaccountbuilder causes the underylying createaccountop to be added to the operation list for the provided transactio .
mutatetransaction for defaults sets reasonable defaults on the transaction being buil .
mutatetransaction for inflationbuilder causes the underylying inflationop to be added to the operation list for the provided transactio .
mutatetransaction for managedatabuilder causes the underylying managedata to be added to the operation list for the provided transactio .
mutatetransaction for manageofferbuilder causes the underylying managedata to be added to the operation list for the provided transactio .
mutatetransaction for memohash sets the memo .
mutatetransaction for memoid sets the memo .
mutatetransaction for memoreturn sets the memo .
mutatetransaction for memotext sets the memo .
mutatetransaction for network sets the network id to use when signing this transactio .
mutatetransaction for paymentbuilder causes the underylying paymentop or pathpaymentop to be added to the operation list for the provided transactio .
mutatetransaction for setoptionsbuilder causes the underylying setoptionsop to be added to the operation list for the provided transactio .
mutatetransaction for sequence sets the seqnum on the transaction .
mutatetransaction for sourceaccount sets the transaction s sourceaccount to the pubilic key for the address provide .
scan reads from src into an int6 .
safebase64scan scans from src ( which should be either a [ ] byte or string ) into dest by using safeunmarshalbase64 .
ledgerkey implements the keyer interfac .
initialstate returns the initial state of the ledgerentry identified by key just prior to the application of the transaction the produced b .
changes returns any changes within the bundle that apply to the entry identified by key .
stateafter returns the state of entry key after the application of the operation at opidx .
changes returns any changes within the bundle that apply to the entry identified by key that occurred at or before maxop .
decode decodes the provided strkey into a raw value .
mustdecode is like decode .
encode encodes the provided data to a strkey .
mustencode is like encode .
checkvalidversionbyte returns an error if the provided value is not one of the defined valid version byte constants .
checksum returns the 2 - byte checksum for the provided dat .
validate returns an error if the provided checksum does not match the calculated checksum of the provided dat .
ledgerkey returns the key for the ledger entry that was changed in change .
aborts the attempt if a desired character is not a valid base32 digi .
address returns the strkey encoded form of this accountid .
equals returns true if other is equivalent to aid .
ledgerkey implements the keyer interfac .
setaddress modifies the receiver .
toxdrobject creates xdr .
through appends a new asset to the pat .
paywith is a helper to create paywithpath struc .
mutate applies the provided transactionenvelopemutators to this builder s envelop .
mutatetx runs mutate on the underlying transaction using the provided mutators .
bytes encodes the builder s underlying envelope to xd .
base64 returns a string which is the xdr - then - base64 - encoded form of the builder s underlying transaction envelop .
mutatetransactionenvelope for transactionbuilder causes the underylying transaction to be set as the provided envelope s tx fiel .
mutate applies the provided mutators to this builder s payment or operation .
mutatesetoptions for homedomain sets the setoptionsop s homedomain fiel .
mutatesetoptions for inflationdest sets the setoptionsop s inflationdest fiel .
mutatesetoptions for masterweight sets the setoptionsop s masterweight fiel .
mutatesetoptions for signer sets the setoptionsop s signer fiel .
setthresholds creates thresholds mutato .
mutatesetoptions for thresholds sets the setoptionsop s thresholds field .
mutatesetoptions for setflag sets the setoptionsop s setflags fiel .
mutatesetoptions for clearflag sets the setoptionsop s clearflags fiel .
mutate applies the provided mutators to this builder s payment or operation .
mutatecreateaccount for destination sets the createaccountop s destination fiel .
mutatecreateaccount for nativeamount sets the createaccountop s startingbalance fiel .
random creates a random full keypai .
master returns the master keypair for a given network passphras .
parse constructs a new kp from the provided string .
fromrawseed creates a new keypair from the provided raw ed25519 seed .
mustparse is the panic - on - fail version of pars .
cleardata removes a key / value pair associated with the source accoun .
setdata sets a key / value pair associated with the source account .
mutate applies the provided mutators to this builder s payment or operation .
mutate applies the provided mutators to this builder s payment or operation .
mutateallowtrust for authorize sets the allowtrustop s authorize fiel .
mutateallowtrust for asset sets the allowtrustop s asset fiel .
mutateallowtrust for trustor sets the allowtrustop s trustor fiel .
toasset converts a to a proper xdr .
this file contains helpers for working with xdr .
setnative overwrites a with the native asset typ .
string returns a display friendly form of the asse .
equals returns true if other is equivalent to a .
extract is a helper function to extract information from an xdr .
mustextract behaves as extract .
unmarshal reads an xdr element from r into v .
marshal writes an xdr element v into w .
validenum validates a proposed value for this enum .
string returns the name of e .
armforswitch returns which field name should be used for storing the value for an instance of publicke .
newpublickey creates a new publickey .
musted25519 retrieves the ed25519 value from the union .
geted25519 retrieves the ed25519 value from the union .
armforswitch returns which field name should be used for storing the value for an instance of publicke .
newnodeid creates a new nodeid .
geted25519 retrieves the ed25519 value from the union .
armforswitch returns which field name should be used for storing the value for an instance of publicke .
newaccountid creates a new accountid .
geted25519 retrieves the ed25519 value from the union .
validenum validates a proposed value for this enum .
string returns the name of e .
armforswitch returns which field name should be used for storing the value for an instance of asse .
newasset creates a new asset .
mustalphanum4 retrieves the alphanum4 value from the union .
getalphanum4 retrieves the alphanum4 value from the union .
mustalphanum12 retrieves the alphanum12 value from the union .
getalphanum12 retrieves the alphanum12 value from the union .
validenum validates a proposed value for this enum .
string returns the name of e .
validenum validates a proposed value for this enum .
string returns the name of e .
validenum validates a proposed value for this enum .
string returns the name of e .
newaccountentryext creates a new accountentryext .
validenum validates a proposed value for this enum .
string returns the name of e .
newtrustlineentryext creates a new trustlineentryext .
validenum validates a proposed value for this enum .
string returns the name of e .
newofferentryext creates a new offerentryext .
newdataentryext creates a new dataentryext .
newledgerentrydata creates a new ledgerentrydata .
mustaccount retrieves the account value from the union .
getaccount retrieves the account value from the union .
musttrustline retrieves the trustline value from the union .
gettrustline retrieves the trustline value from the union .
mustoffer retrieves the offer value from the union .
getoffer retrieves the offer value from the union .
mustdata retrieves the data value from the union .
getdata retrieves the data value from the union .
newledgerentryext creates a new ledgerentryext .
validenum validates a proposed value for this enum .
string returns the name of e .
validenum validates a proposed value for this enum .
string returns the name of e .
armforswitch returns which field name should be used for storing the value for an instance of allowtrustopasse .
newallowtrustopasset creates a new allowtrustopasset .
mustassetcode4 retrieves the assetcode4 value from the union .
getassetcode4 retrieves the assetcode4 value from the union .
mustassetcode12 retrieves the assetcode12 value from the union .
getassetcode12 retrieves the assetcode12 value from the union .
mustcreateaccountop retrieves the createaccountop value from the union .
getcreateaccountop retrieves the createaccountop value from the union .
mustpaymentop retrieves the paymentop value from the union .
getpaymentop retrieves the paymentop value from the union .
mustpathpaymentop retrieves the pathpaymentop value from the union .
getpathpaymentop retrieves the pathpaymentop value from the union .
mustmanageofferop retrieves the manageofferop value from the union .
getmanageofferop retrieves the manageofferop value from the union .
mustcreatepassiveofferop retrieves the createpassiveofferop value from the union .
getcreatepassiveofferop retrieves the createpassiveofferop value from the union .
mustsetoptionsop retrieves the setoptionsop value from the union .
getsetoptionsop retrieves the setoptionsop value from the union .
mustchangetrustop retrieves the changetrustop value from the union .
getchangetrustop retrieves the changetrustop value from the union .
mustallowtrustop retrieves the allowtrustop value from the union .
getallowtrustop retrieves the allowtrustop value from the union .
mustdestination retrieves the destination value from the union .
getdestination retrieves the destination value from the union .
mustmanagedataop retrieves the managedataop value from the union .
getmanagedataop retrieves the managedataop value from the union .
validenum validates a proposed value for this enum .
string returns the name of e .
armforswitch returns which field name should be used for storing the value for an instance of mem .
newmemo creates a new memo .
musttext retrieves the text value from the union .
gettext retrieves the text value from the union .
mustid retrieves the id value from the union .
getid retrieves the id value from the union .
musthash retrieves the hash value from the union .
gethash retrieves the hash value from the union .
mustrethash retrieves the rethash value from the union .
newtransactionext creates a new transactionext .
validenum validates a proposed value for this enum .
string returns the name of e .
armforswitch returns which field name should be used for storing the value for an instance of createaccountresul .
newcreateaccountresult creates a new createaccountresult .
validenum validates a proposed value for this enum .
string returns the name of e .
armforswitch returns which field name should be used for storing the value for an instance of paymentresul .
newpaymentresult creates a new paymentresult .
validenum validates a proposed value for this enum .
string returns the name of e .
armforswitch returns which field name should be used for storing the value for an instance of pathpaymentresul .
newpathpaymentresult creates a new pathpaymentresult .
mustsuccess retrieves the success value from the union .
getsuccess retrieves the success value from the union .
mustnoissuer retrieves the noissuer value from the union .
getnoissuer retrieves the noissuer value from the union .
validenum validates a proposed value for this enum .
string returns the name of e .
validenum validates a proposed value for this enum .
string returns the name of e .
armforswitch returns which field name should be used for storing the value for an instance of manageoffersuccessresultoffe .
newmanageoffersuccessresultoffer creates a new manageoffersuccessresultoffer .
mustoffer retrieves the offer value from the union .
getoffer retrieves the offer value from the union .
armforswitch returns which field name should be used for storing the value for an instance of manageofferresul .
newmanageofferresult creates a new manageofferresult .
mustsuccess retrieves the success value from the union .
getsuccess retrieves the success value from the union .
validenum validates a proposed value for this enum .
string returns the name of e .
armforswitch returns which field name should be used for storing the value for an instance of setoptionsresul .
newsetoptionsresult creates a new setoptionsresult .
validenum validates a proposed value for this enum .
string returns the name of e .
armforswitch returns which field name should be used for storing the value for an instance of changetrustresul .
newchangetrustresult creates a new changetrustresult .
validenum validates a proposed value for this enum .
string returns the name of e .
armforswitch returns which field name should be used for storing the value for an instance of allowtrustresul .
newallowtrustresult creates a new allowtrustresult .
validenum validates a proposed value for this enum .
string returns the name of e .
armforswitch returns which field name should be used for storing the value for an instance of accountmergeresul .
newaccountmergeresult creates a new accountmergeresult .
mustsourceaccountbalance retrieves the sourceaccountbalance value from the union .
getsourceaccountbalance retrieves the sourceaccountbalance value from the union .
validenum validates a proposed value for this enum .
string returns the name of e .
armforswitch returns which field name should be used for storing the value for an instance of inflationresul .
newinflationresult creates a new inflationresult .
mustpayouts retrieves the payouts value from the union .
getpayouts retrieves the payouts value from the union .
validenum validates a proposed value for this enum .
string returns the name of e .
armforswitch returns which field name should be used for storing the value for an instance of managedataresul .
newmanagedataresult creates a new managedataresult .
validenum validates a proposed value for this enum .
string returns the name of e .
armforswitch returns which field name should be used for storing the value for an instance of operationresultt .
mustcreateaccountresult retrieves the createaccountresult value from the union .
getcreateaccountresult retrieves the createaccountresult value from the union .
mustpaymentresult retrieves the paymentresult value from the union .
getpaymentresult retrieves the paymentresult value from the union .
mustpathpaymentresult retrieves the pathpaymentresult value from the union .
getpathpaymentresult retrieves the pathpaymentresult value from the union .
mustmanageofferresult retrieves the manageofferresult value from the union .
getmanageofferresult retrieves the manageofferresult value from the union .
mustcreatepassiveofferresult retrieves the createpassiveofferresult value from the union .
mustsetoptionsresult retrieves the setoptionsresult value from the union .
getsetoptionsresult retrieves the setoptionsresult value from the union .
mustchangetrustresult retrieves the changetrustresult value from the union .
getchangetrustresult retrieves the changetrustresult value from the union .
mustallowtrustresult retrieves the allowtrustresult value from the union .
getallowtrustresult retrieves the allowtrustresult value from the union .
mustaccountmergeresult retrieves the accountmergeresult value from the union .
getaccountmergeresult retrieves the accountmergeresult value from the union .
mustinflationresult retrieves the inflationresult value from the union .
getinflationresult retrieves the inflationresult value from the union .
mustmanagedataresult retrieves the managedataresult value from the union .
getmanagedataresult retrieves the managedataresult value from the union .
armforswitch returns which field name should be used for storing the value for an instance of operationresul .
newoperationresult creates a new operationresult .
musttr retrieves the tr value from the union .
gettr retrieves the tr value from the union .
validenum validates a proposed value for this enum .
string returns the name of e .
armforswitch returns which field name should be used for storing the value for an instance of transactionresultresul .
newtransactionresultresult creates a new transactionresultresult .
mustresults retrieves the results value from the union .
getresults retrieves the results value from the union .
newtransactionresultext creates a new transactionresultext .
newstellarvalueext creates a new stellarvalueext .
newledgerheaderext creates a new ledgerheaderext .
validenum validates a proposed value for this enum .
string returns the name of e .
armforswitch returns which field name should be used for storing the value for an instance of ledgerupgrad .
newledgerupgrade creates a new ledgerupgrade .
mustnewledgerversion retrieves the newledgerversion value from the union .
getnewledgerversion retrieves the newledgerversion value from the union .
mustnewbasefee retrieves the newbasefee value from the union .
getnewbasefee retrieves the newbasefee value from the union .
mustnewmaxtxsetsize retrieves the newmaxtxsetsize value from the union .
getnewmaxtxsetsize retrieves the newmaxtxsetsize value from the union .
armforswitch returns which field name should be used for storing the value for an instance of ledgerke .
newledgerkey creates a new ledgerkey .
mustaccount retrieves the account value from the union .
getaccount retrieves the account value from the union .
musttrustline retrieves the trustline value from the union .
gettrustline retrieves the trustline value from the union .
mustoffer retrieves the offer value from the union .
getoffer retrieves the offer value from the union .
mustdata retrieves the data value from the union .
getdata retrieves the data value from the union .
validenum validates a proposed value for this enum .
string returns the name of e .
armforswitch returns which field name should be used for storing the value for an instance of bucketentr .
newbucketentry creates a new bucketentry .
mustliveentry retrieves the liveentry value from the union .
getliveentry retrieves the liveentry value from the union .
mustdeadentry retrieves the deadentry value from the union .
getdeadentry retrieves the deadentry value from the union .
newtransactionhistoryentryext creates a new transactionhistoryentryext .
armforswitch returns which field name should be used for storing the value for an instance of transactionhistoryresultentryex .
newtransactionhistoryresultentryext creates a new transactionhistoryresultentryext .
newledgerheaderhistoryentryext creates a new ledgerheaderhistoryentryext .
newscphistoryentry creates a new scphistoryentry .
mustv0 retrieves the v0 value from the union .
getv0 retrieves the v0 value from the union .
validenum validates a proposed value for this enum .
string returns the name of e .
armforswitch returns which field name should be used for storing the value for an instance of ledgerentrychang .
newledgerentrychange creates a new ledgerentrychange .
mustcreated retrieves the created value from the union .
getcreated retrieves the created value from the union .
mustupdated retrieves the updated value from the union .
getupdated retrieves the updated value from the union .
mustremoved retrieves the removed value from the union .
getremoved retrieves the removed value from the union .
muststate retrieves the state value from the union .
getstate retrieves the state value from the union .
newtransactionmeta creates a new transactionmeta .
mustoperations retrieves the operations value from the union .
getoperations retrieves the operations value from the union .
validenum validates a proposed value for this enum .
string returns the name of e .
validenum validates a proposed value for this enum .
string returns the name of e .
armforswitch returns which field name should be used for storing the value for an instance of peeraddressi .
newpeeraddressip creates a new peeraddressip .
mustipv4 retrieves the ipv4 value from the union .
getipv4 retrieves the ipv4 value from the union .
mustipv6 retrieves the ipv6 value from the union .
getipv6 retrieves the ipv6 value from the union .
validenum validates a proposed value for this enum .
string returns the name of e .
armforswitch returns which field name should be used for storing the value for an instance of stellarmessag .
musterror retrieves the error value from the union .
geterror retrieves the error value from the union .
musthello retrieves the hello value from the union .
gethello retrieves the hello value from the union .
mustauth retrieves the auth value from the union .
getauth retrieves the auth value from the union .
mustdonthave retrieves the donthave value from the union .
getdonthave retrieves the donthave value from the union .
mustpeers retrieves the peers value from the union .
getpeers retrieves the peers value from the union .
musttxsethash retrieves the txsethash value from the union .
gettxsethash retrieves the txsethash value from the union .
musttxset retrieves the txset value from the union .
gettxset retrieves the txset value from the union .
musttransaction retrieves the transaction value from the union .
gettransaction retrieves the transaction value from the union .
mustqsethash retrieves the qsethash value from the union .
getqsethash retrieves the qsethash value from the union .
mustqset retrieves the qset value from the union .
getqset retrieves the qset value from the union .
mustenvelope retrieves the envelope value from the union .
getenvelope retrieves the envelope value from the union .
mustgetscpledgerseq retrieves the getscpledgerseq value from the union .
getgetscpledgerseq retrieves the getscpledgerseq value from the union .
armforswitch returns which field name should be used for storing the value for an instance of authenticatedmessag .
newauthenticatedmessage creates a new authenticatedmessage .
mustv0 retrieves the v0 value from the union .
getv0 retrieves the v0 value from the union .
validenum validates a proposed value for this enum .
string returns the name of e .
armforswitch returns which field name should be used for storing the value for an instance of scpstatementpledge .
newscpstatementpledges creates a new scpstatementpledges .
mustprepare retrieves the prepare value from the union .
getprepare retrieves the prepare value from the union .
mustconfirm retrieves the confirm value from the union .
getconfirm retrieves the confirm value from the union .
mustexternalize retrieves the externalize value from the union .
getexternalize retrieves the externalize value from the union .
mustnominate retrieves the nominate value from the union .
getnominate retrieves the nominate value from the union .
safeunmarshalbase64 first decodes the provided reader from base64 before decoding the xdr into the provided destination .
safeunmarshal decodes the provided reader into the destination and verifies that provided bytes are all consumed by the unmarshalling process .
sendamount returns the amount spent .
loadaccount loads the account state from horizon .
sequenceforaccount implements build .
submittransaction submits a transaction to the network .
equals returns true if other is equivalent to key .
setaccount mutates key such that it represents the identity of account .
setdata mutates key such that it represents the identity of the data entry owned by account and for name .
setoffer mutates key such that it represents the identity of the data entry owned by account and for offer id .
settrustline mutates key such that it represents the identity of the trustline owned by account and for asset .
/ * routine which helps us to create global attributelists definition dict .
/ * routine .
/ * func ( ipvs * ipvsclient ) modifyfwmdest ( method string .
/ * we can ran this as binary for unit tests ( for example build it on on one machine ( mac or win ) and run on other ( linux ) .
add a key and value to the hash table .
try to find a hash function that does not cause collisions with table .
hash index from key .
table hash from random value and key .
add a random value generated by generate ( ) .
despite returning a uint64 .
read a serialized chd .
mmap creates a new chd aliasing the chd structure over an existing byte region ( typically mmapped ) .
get an entry from the hash table .
iterate over entries in the hash table .
serialize the chd .
/ * \ topen - regexp .
registerdatasources adds path to the mapnik plugin search path .
registerdatasources adds path to the mapnik fonts search path .
new initializes a new map .
newsized initializes a new map with the given size .
load reads in a mapnik map xml .
resize changes the map size in pixel .
free deallocates the map .
srs returns the projection of the map .
setsrs sets the projection of the map as a proj4 string ( +init=epsg4326 .
zoomall zooms to the maximum extent .
zoomto zooms to the given bounding box .
selectlayers enables / disables single layers .
render returns the map as an encoded image .
renderimage returns the map as an unencoded image .
rendertofile writes the map as an encoded image to the file system .
setbuffersize sets the pixel buffer at the map image edges where mapnik should not render any labels .
search the network for ssdp devices using the given search string and duration to discover new devices .
write checkout the error returned from the origin write ( ) method .
create a new blocking pool .
get blocks for an available connection .
put puts the connection back to the pool .
monotostereof32 converts a mono stream into a stereo one by copying the mono signal to both channels in an interleaved signal .
monorms converts the buffer to mono and apply an rms treatment .
normalizemax sets the max value to 1 and normalize the rest of the data .
gain applies the multiplier to the passed buffer .
monodownmix converts the buffer to a mono buffer by downmixing the channels together .
quantize quantizes the audio signal to match the target bitdept .
pcmscale converts a buffer with audio content from - 1 to 1 into the pcm scale based on the passed bitdepth .
pcmscalef32 converts a buffer with audio content from - 1 to 1 ( float32 ) into the pcm scale based on the passed bitdepth .
stereopan changes the balance of the input buffer by " panning " more to the left or the right .
leader returns the current leader .
isleader returns true if the candidate is currently a leader .
newresponse returns a new oauth2respons .
getrequestid returns a request id from the given context if one is present .
replace responsewriter with a monitorable one .
sendmailssl envoie un email par ss .
send envoie un emai .
waitforit waits for a service or url to become onlin .
marshal serializes the sitemap urlset to xml .
read in config file and env variables if set .
writepluginresultstodatabase upserts plugin results into databas .
newauthcontroller constructs new authcontrolle .
authenticate controls authorization .
newoauth2controller constructs new authcontrolle .
marshalindex serializes the sitemap index to xml .
singlefile returns a handle .
newmongo creates a newinstance of mong .
disconnect a mongo clien .
new - creates a new table .
printtable - prints table .
printhorizontal - prints horizontal table from a map .
printrow - prints table with only one row .
addrow - adds row to the table .
print - prints table .
string - ouput table as a string .
gethead - returns table header containing fields names .
rowstring - creates a string row .
fieldstring - creates field value string .
stringtabledash - output table dash .
printdash - prints dash ( on top and header ) .
stringdash - output dash ( on top and header ) .
printmarkdowndash - prints dash in middle of table .
stringmarkdowndash - output dash in middle of table .
linelength - counts size of table line length ( with spaces etc .
hashpassword hash un mot de pass .
encodeoauth2code generate an oauth2 cod .
decodeoauth2code inverse of encodeoauth2cod .
newserver create a new instance of serve .
start the server .
stop the server .
newloggingservemux allocates and returns a new loggingservemu .
handler sastisfy interfac .
handle register handle .
handlefunc registers the handler function for the given pattern .
geturl with the following order of precedence - user input ( cli ) - user env - sane default .
init initalizes elasticsearch for use with malic .
waitforconnection waits for connection to elasticsearch to be read .
camelcase converts strings to their camel case equivalen .
getopt reads environment variables .
getopts reads from user input then environment variable and finally a sane default .
getsha256 calculates a file s sha256su .
runcommand runs cmd on fil .
removeduplicates removes duplicate items from a lis .
gethashtype returns the hash type ( md5 .
askforconfirmation prompts user for yes / no respons .
unzip unzips archive to target locatio .
slicecontainsstring returns if slice contains substrin .
newsmtp create new smt .
sendmail send an emai .
unmarshalyaml implements unmarshaler .
getenvironment returns a smtp server configuration for the specified environment in paramete .
getsmtp returns a smtp server configuration .
getconfig returns a server configuration .
unmarshalyaml implements unmarshaler .
getenvironment returns a mongo configuration for the specified environment in paramete .
getmongo returns a mongo configuration .
tokenhandler manage authorization .
connect connects to gcm ccs server denoted by host ( production or staging ccs endpoint uri ) along with relevant credentials .
receive waits to receive the next incoming messages from the ccs connection .
send sends a message to gcm ccs server and returns the number of bytes written and any error encountered .
allboshreleasenames returns a union of unique bosh release names across all contained bosh releases .
addedproperty adds a new " added " job property to the list of difference .
removedproperty adds a new " removed " job property to the list of difference .
adddeltajob adds a new delta for a specific jo .
concat adds the other result to this resul .
read downloads the specified release to the local cache dir and returns a reader to the underyling release package .
pull downloads the specified release to the local cache di .
buildjob - function to create a compiled version of the current jo .
loadboshrelease creates an initialized boshrelease instance from the specifed local or remote .
readboshrelease creates an initialized boshrelease instance from the specifed .
readboshrelease reads a bosh release out of the given reader into a new boshrelease struc .
readboshjob reads a bosh job manifest out of the given reader into a new jobmanifest struc .
newclient creates a new bosh client .
pushcloudconfig uploads a cloud config to bosh .
generate - used to generate a struct for a given jo .
createnewrecord - creates a record from a given period delimited property and enaml .
newshowcmd creates a new showcmd instance .
all writes out all the release data to writer .
getdefaulttaskimageresource - convenience helper to output default object for task image .
addrawjob helper to add a job to the pipeline manifes .
addgroup helper to add a group to the pipeline manifes .
setimagedefaults sette .
getresourcebyname convenience method to find and return a resource by nam .
addrawresource helper to add a resource to the pipeline manifes .
addresource helper to add a resource to the pipeline manifes .
addgithubresource github specific resource ad .
addboshioresource bosh io specific resource ad .
addboshdeploymentresource bosh deployment resource ad .
addgitresource git specific resource ad .
alljobnames returns a union of unique job names across both bosh release .
newdeploymentmanifestfromfile - will read any implementor of os .
newdeploymentmanifest - deployment manifest constructo .
addremoterelease - adds a remote release to the manifest .
addremotestemcell adds a remote stemcell to the manifest .
tag gets the tag value for a specified key .
removetag removes the tag with the specified key .
loadpivnetrelease creates an initialized pivnetrelease instance from the specified .
boshreleaseorempty returns the named bosh release from this pivnet release if it exists .
readpivnetrelease reads a pivnet release out of the given reader into a new pivnetrelease struc .
newcloudconfigmanifest - initialize a cloudconfigmanifest object with a [ ] byt .
containsazname - .
containsvmtype - .
containsdisktype - .
decodeyaml takes a reader to a yaml file and unmarshals it to the given struct .
newzipwalker creates a new walker instance that can read a .
newdiffcmd creates a new diffcmd instance .
all writes out all the differences between the specified release .
job writes out the job differences between the specified release .
new creates a differ instance for comparing two release .
structname - gets struct name for propert .
typename - returns valid type name for a give recor .
newtgzwalker creates a new walker instance that can read a .
newbackoff creates a new backoff using the specified backoffstrategy .
reset sets the backoff to its initial conditions ready to start over .
backoff causes the current thread / routine to sleep for nextduration .
newexponential creates a new backoff using the exponential backoff algorithm .
newexponentialfulljitter creates a new backoff using the exponential with full jitter backoff algorithm .
newlinear creates a new backoff using the linear backoff algorithm .
getlinesize returns the size of the sapin for a specified floor and line .
getmaxsize returns the size of the widest part of the sapin .
compute iterates over floors and lines to generate the output of the sapin .
readresponse reads a server response into the received o .
marshalbinary interface implementatio .
readresponse reads a server response into the received o .
withtimeout adds the timeout to the post apps param .
withcontext adds the context to the post apps param .
withbody adds the body to the post apps param .
readresponse reads a server response into the received o .
/ * polymorph taskallof1 completed at false * * polymorph taskallof1 created at false * * polymorph taskallof1 env vars false * * polymorph taskallof1 error false * * polymorph taskallof1 group name false * * polymorph taskallof1 reason false * * polymorph taskallof1 retry at false * * polymorph taskallof1 retry of false * * polymorph taskallof1 started at false * / validate validates this task all of .
marshalbinary interface implementatio .
withtimeout adds the timeout to the get apps app param .
withcontext adds the context to the get apps app param .
withapp adds the app to the get apps app param .
/ * polymorph app config false * * polymorph app name false * / validate validates this ap .
marshalbinary interface implementatio .
/ * polymorph routewrapper error false * * polymorph routewrapper message false * * polymorph routewrapper route false * / validate validates this route wrappe .
marshalbinary interface implementatio .
unmarshalbinary interface implementatio .
withtimeout adds the timeout to the get apps param .
withcontext adds the context to the get apps param .
withtimeout adds the timeout to the delete apps app param .
withcontext adds the context to the delete apps app param .
withapp adds the app to the delete apps app param .
withtimeout adds the timeout to the patch apps app routes route param .
withcontext adds the context to the patch apps app routes route param .
withapp adds the app to the patch apps app routes route param .
withbody adds the body to the patch apps app routes route param .
withroute adds the route to the patch apps app routes route param .
withtimeout adds the timeout to the post apps app routes param .
withcontext adds the context to the post apps app routes param .
withapp adds the app to the post apps app routes param .
withbody adds the body to the post apps app routes param .
withtimeout adds the timeout to the put apps app routes route param .
withcontext adds the context to the put apps app routes route param .
withapp adds the app to the put apps app routes route param .
withbody adds the body to the put apps app routes route param .
withroute adds the route to the put apps app routes route param .
readresponse reads a server response into the received o .
withtimeout adds the timeout to the get apps app routes param .
withcontext adds the context to the get apps app routes param .
withapp adds the app to the get apps app routes param .
/ * polymorph appwrapper app false * * polymorph appwrapper error false * / validate validates this app wrappe .
marshalbinary interface implementatio .
readresponse reads a server response into the received o .
withtimeout adds the timeout to the patch apps app param .
withcontext adds the context to the patch apps app param .
withapp adds the app to the patch apps app param .
withbody adds the body to the patch apps app param .
/ * gettasks gets next task gets the next task in the queue .
withtimeout adds the timeout to the put apps app param .
withcontext adds the context to the put apps app param .
withapp adds the app to the put apps app param .
withbody adds the body to the put apps app param .
readresponse reads a server response into the received o .
/ * polymorph appswrapper apps false * * polymorph appswrapper error false * / validate validates this apps wrappe .
marshalbinary interface implementatio .
readresponse reads a server response into the received o .
readresponse reads a server response into the received o .
unmarshaljson unmarshals this object from a json structur .
marshaljson marshals this object to a json structur .
validate validates this tas .
new create a new spf instance fully loaded with all the spf directives ( so no more dns lookups must be done after constructing the instance ) .
/ * rfc 7208 4 .
/ * rfc 7208 as described at the end of section 11 .
getranges composes the cidr ip ranges following rfc 4632 and rfc 4291 of the given ips .
/ * checkip checks if the given ip is a valid sender ( returns answers following section 2 .
readresponse reads a server response into the received o .
marshalbinary interface implementatio .
readresponse reads a server response into the received o .
readresponse reads a server response into the received o .
readresponse reads a server response into the received o .
withtimeout adds the timeout to the get apps app routes route param .
withcontext adds the context to the get apps app routes route param .
withapp adds the app to the get apps app routes route param .
withroute adds the route to the get apps app routes route param .
/ * deleteappsapproutesroute deletes the route deletes the route .
/ * getappsapproutes gets route list by app name this will list routes for a particular app .
/ * getappsapproutesroute gets route by name gets a route by name .
/ * patchappsapproutesroute updates a route update a route * / .
/ * postappsapproutes creates new route create a new route in an app .
/ * polymorph taskwrapper task false * / validate validates this task wrappe .
marshalbinary interface implementatio .
marshalbinary interface implementatio .
new creates a new functions clien .
settransport changes the transport on the client and all its subresource .
withtimeout adds the timeout to the delete apps app routes route param .
withcontext adds the context to the delete apps app routes route param .
withapp adds the app to the delete apps app routes route param .
withroute adds the route to the delete apps app routes route param .
readresponse reads a server response into the received o .
get the qualifier ( i .
get the mechanism ( i .
withtimeout adds the timeout to the get tasks param .
withcontext adds the context to the get tasks param .
/ * polymorph route config false * * polymorph route format false * * polymorph route headers false * * polymorph route idle timeout false * * polymorph route image false * * polymorph route jwt key false * * polymorph route max concurrency false * * polymorph route memory false * * polymorph route path false * * polymorph route timeout false * * polymorph route type false * / validate validates this rout .
marshalbinary interface implementatio .
/ * polymorph routeswrapper error false * * polymorph routeswrapper routes false * / validate validates this routes wrappe .
marshalbinary interface implementatio .
/ * deleteappsapp deletes an app delete an app .
/ * getapps gets all app names get a list of all the apps in the system .
/ * getappsapp gets information for a app this gives more details about a app .
/ * patchappsapp updates an app you can set app level settings here .
/ * postapps posts new app insert a new app * / .
new returns a instance of oort .
setbackend sets the current backen .
ring returns an instance of the current rin .
getlocalid returns the current local i .
getlistenaddr returns the current localnode .
startup is not required to use the replgroupstore ; it will automatically connect to backend stores as needed .
shutdownfinished closes the shutdowncomplete channel 10 miliseconds after being invoked ( to give a cmd ctrl client a chance to return .
stop the backend and shutdown all listeners .
exit the backend and shutdown all listeners .
selfupgrade deploys an updated binary to disk using cmdctrl .
softwareversion returns the version of the currently running instanc .
fetches a rant and its comments given a valid rant i .
fetches ranter s profile dat .
search for rants matching the search ter .
returns a random ran .
returns the rants tagged for weekly .
fetches the userid given a valid usernam .
shutdown will close all connections to backend stores and shutdown any running ring service connector .
fexists true if a file or dir exist .
todo need to remove the hack to add iad3 identifier -- what hack? not sure what this refers to .
listen for a shutdown signal or outbound messages .
parse incoming messag .
group creates a group type from a domain .
groups lists the groups of a domai .
getgroup retrieves a group from a domain with the given group nam .
reticence trucate the string in the space or on pontuation mark and put reticences in the resulting string .
check the user password .
cleanurl check the characteres in url and parser it with url .
a capacity of 2 seems to be a good guess for the number of aliases .
list through all tag - related ( i .
params store the mapping of paramname -> parameter for the given structure .
parse discovers the given parameters structure and associates the structure s field names with their values into the params structure .
email returns the forwarder email on the primary domai .
forwarder returns a forwarder type with the given from and des .
forwarders lists the forwarders of a domai .
getforwarder retreives a forwarder with the given nam .
new returns a new communigate pro clien .
escapecommaseparated escapes the args and make a comma separeted list with it .
alias creates an alias type from an accoun .
email returns the alias email on the primary domain nam .
aliases lists the aliases of an accoun .
realname return the real name of the account as registere .
email returns the primary email of the accoun .
account returns an account type with the given nam .
accounts lists the acounts of a domai .
exists returns true if the domai .
aliases returns a list of domain aliase .
domain creates a domain type with the given nam .
domains lists the domains on the serve .
new creates a new err with the given info and optional public messag .
wrap the given error in an errs .
usererror creates an errs .
format creates and wraps an error with the given error string .
iserr checks if err is an errs .
merge in the given info and public message parts into this erro .
get the string representation of the wrapper error .
helper to concatenate arguments into a string .
mailinglist creates a mailinglist type from a domain .
subscriber create a subscriber type from a malinglist .
subscribers returns a list of subscriber of a mailing list .
mailinglists lists the mailing lists of a domai .
newbytekeyitem creates a new item from byte .
comparebytes is a byte item comparato .
compareint is a helper integer item comparato .
malloc implements c like memory allocato .
free implements c like memory deallocato .
stats returns allocator statistics returns jemalloc stat .
freeosmemory forces jemalloc to scrub memory and release back to o .
size returns memory used by the nod .
the node struct holds a slice of noderef .
add an item into skiplist segmen .
newsegment creates a new skiplist segmen .
assemble multiple skiplist segments and form a parent skiplis .
comparenodetable implements comparator for nodetable instance .
new creates a nodetable instanc .
stats returns nodetable statistic .
memoryinuse returns memory used by nodetable instanc .
get returns node pointer for the lookup ke .
update inserts or replaces an existing entr .
close destroys the nodetabl .
memoryinuse returns total memory used by nodetables in a proces .
fill free blocks with a const this can help debugging of memory reclaimer bug .
seek to a specified key or the next bigger one if an item with key does not exist .
next moves iterator cursor to the next ite .
refresh is a helper api to call refresh accessor tokens manually this would enable smr to reclaim objects faster if an iterator is alive for a longer duration of time .
close executes destructor for iterato .
newiterator creates an iterator for a nitro snapsho .
seekfirst moves cursor to the first ite .
next moves cursor to the next ite .
seek moves cursor to the specified item .
keys returns all keys from the node lis .
remove a key from the node lis .
add a key into the node lis .
newwithconfig creates a config from given confi .
freenode deallocates the skiplist node memor .
makebuf creates an action buffe .
size returns the size of a nod .
newlevel returns a random level for the next nod .
insert adds an item into the skiplis .
insert2 is a more verbose version of inser .
delete an item from the skiplis .
deletenode an item from the skiplist by specifying its nod .
getrangesplititems returns nways split range pivots of the skiplist items explicit barrier and release should be used by the caller before and after this function cal .
encodeitem encodes in [ 2 byte len ] [ item bytes ] format .
decodeitem decodes encoded [ 2 byte len ] [ item bytes ] format .
bytes return item data byte .
itemsize returns total bytes consumed by item representatio .
kvtobytes encodes key - value pair to item bytes which can be passed to the put ( ) and delete ( ) methods .
kvfrombytes extracts key - value pair from item bytes returned by iterato .
comparekv is a comparator for kv ite .
emits an event from the eventcontroller .
registers handler with the eventcontroller .
unregisters handler from the eventcontroller .
returns bool on whether the handler is registered with this eventcontroller .
lazy load handlers slice / mutex for eventcontrolle .
comparenitro implements comparator for nitro instances based on its i .
defaultconfig - nitro configuratio .
put2 returns the skiplist node of the item if put ( ) succeed .
delete an item delete always succeed if an item exists .
delete2 is same as delete ( ) .
deletenode deletes an item by specifying its skiplist node .
getnode implements lookup of an item and return its skiplist node this api enables to lookup an item without using a snapshot handle .
setkeycomparator provides key comparator for the nitro item dat .
usememorymgmt provides custom memory allocator for nitro items storag .
newwithconfig creates a new nitro instance based on provided configuration .
memoryinuse returns total memory used by the nitro instance .
close shuts down the nitro instanc .
newwriter creates a nitro write .
snapshotsize returns the memory used by nitro snapshot metadat .
encode implements binary encoder for snapshot metadat .
decode implements binary decoder for snapshot metadat .
open implements reference couting and garbage collection for snapshots when snapshots are shared by multiple threads .
close is the snapshot descructor once a thread has finished using a snapshot .
comparesnapshot implements comparator for snapshots based on snapshot numbe .
newsnapshot creates a new nitro snapshot .
invariant each snapshot n is dependent on snapshot n - 1 .
gc implements manual garbage collection of nitro snapshots .
getsnapshots returns the list of current live snapshots this api is mainly for debugging purpos .
memoryinuse returns total memory used by all nitro instances in the current proces .
comparebs is a barrier session comparator based on seqn .
acquire marks enter of an accessor in the skiplis .
release marks leaving of an accessor in the skiplis .
flushsession closes the current barrier session and starts the new session .
size returns memory used by the nod .
apply updates the report with provided paritial stat .
addint64 provides atomic ad .
adduint64 provides atomic ad .
merge updates global stats with partial stats and resets partial stat .
getstats returns skiplist stat .
newiterator creates an iterator for skiplis .
seekfirst moves cursor to the star .
seekwithcmp moves iterator to a provided item by using custom comparato .
seek moves iterator to a provided ite .
valid returns true when iterator reaches the en .
delete removes the current item from the skiplis .
next moves iterator to the next ite .
isenabled -- check if this sku is enabled using cf en .
init - externally available init metho .
fromurl converts the given url to a folder nam .
tourl converts the given folder to an ur .
parseprotocolheader returns the number of bytes to read for the content length and the protocol version .
size returns the version 1 header size plus the size of all the offset .
newconfig function cnstructs a new config struct with filename .
read function reads configurations from the file defined in config .
get function returns the value of a key in the configuration .
set function updates the value of a key in the configuration .
add function adds a new key to the configuration .
del function deletes a key from the configuration .
writeto function writes the configuration to a new file .
to check this line is a section or not .
to check this line is a valid key - value pair or not .
to check this line is a whole line comment or not .
logger defines the logger to be used whenever detailed messages have to be printed out .
dateformat is used to format the timestamp .
access returns a handler that writes an access log message to the provided logger .
getavailableinventory - this should return available inventory and start a long task polle .
logger defines the logger to be used whenever detailed messages have to be printed out .
expiration sets the expiration time of the auth toke .
claimer is responsible for transforming a standard claims object into a custom one .
issuer sets the issuer in the standart claims object .
user sets the query key from which to obtain the user .
password sets the query key from which to obtain the password .
extractor extracts a token from a reques .
token returns the token string stored in the request context .
claims returns the claims stored in the reques .
used to print token .
newlexer creates a new scanner from the inpu .
run lexes the input by executing state functions until the state is ni .
emit passes an item pack to the clien .
skipwhitespace ignores all whitespace character .
next advances the lexer position and returns the next rune .
linenum returns the current line based on the data processed so fa .
offset determines the character offset from the beginning of the current lin .
errorf returns an error token and terminates the scan by passing back a nil pointer that will be the next state thus terminating the lexe .
lexes a comment lin .
new creates a new tupletype with the given namespace and type nam .
addversion adds a version to the tuple typ .
contains determines is a field exists in the tupletyp .
offset determines the numerical offset for the given fiel .
versions returns an array of versions contained in this typ .
setprivatemeta - set a private meta data recor .
setpublicmeta - set a public metadata recor .
getredactedversion - returns a redacted version of this task .
update -- safe way to update a tas .
read -- safe way to read from a tas .
protect -- add mutex and taskmanager protection to tas .
equal - define task equalit .
frombytes creates a new temporary file in the directory dir with a name beginning with prefix .
create a new temporary file in the directory dir with a name beginning with prefix .
putuint8 sets an 8 - bit unsigned value for the given string name .
putint8 sets an 8 - bit signed value for the given string name .
putuint16 sets a 16 - bit unsigned value for the given field name .
putint16 sets a 16 - bit signed value for the given field name .
putuint32 sets a 32 - bit unsigned value for the given field name .
putint32 sets a 32 - bit signed value for the given field name .
newpackagelist creates a new package registr .
putfloat32 writes a 32 - bit float for the given string field .
putfloat64 writes a 64 - bit float ( or double in some languages ) for the given string field .
classic creates a classic martini with some basic default middleware - martini .
languages provides the handler with supported languages .
session will be used to set the current language .
urlprefix is the prefix that may be used in the url .
data returns the language data stored in the request .
url prefixes a url string with the request language .
returns the terminal siz .
getrequestidfromtaskresponse - a function to get a request id from a taskresponse objec .
loaddirectory reads all the schema files from a directory .
loadfile reads a schema document from a file .
loadpackage parses a text string .
newdecoder creates a new decoder using a type registry and an io .
newdecodersize creates a new decoder using a type registry .
printdefaults prints .
parse parses flag definitions from the argument list .
panic returns a handler that invokes the passed handler h .
makefakesku --- .
polltaskurl -- fake a poll url cal .
deployvapp - fake out calling deploy vap .
undeployvapp - executes a fake undeploy on a fake clien .
auth - fake out making an auth cal .
querytemplate - fake querying for a templat .
fakenewcollectiondialer - .
createauthrequest - .
findandstalltaskforcaller -- .
newfakecollection === .
newencoder creates a new encoder with the given io .
getter allows the user to set the method by which a nonce is retrieved from the incoming request .
setter allows the user to set the method by which a nonce is stored in the outgoing response .
age sets the maximum time duration a nonce can be vali .
nonce returns a handler that will check each request for the existence of a nonce .
noncevaluefromrequest validates a nonce in the given request .
storenonce generates and stores a nonce in the outgoing response .
do - fake do metho .
newlease - create and return a new lease objec .
delete - handle a delete lease cal .
post - handle a post lease cal .
restock - this will reclaim resources for a given leas .
procurement - method to issue a procurement request for the given lease item .
is determines if a tuple is a certain type .
offset returns the byte offset for the given fiel .
writeto sends the binary representation of the tuple to the given io .
if cookie secret is set to " " .
writestring writes string data into the response object .
newagent -- creates a new initialized agent objec .
run - this begins the running of an agent s async proces .
newwaitgroup instantiates a new waitgroup with the given throttle .
add will block until the number of goroutines being throttled has fallen below the throttle .
wait until all of the throttled goroutines have signaled they are done .
gzip returns a handler that will use gzip compression on the response body of handler h .
new - create a new api clien .
call -- generic call to the inkeeper endpoin .
deprovisionhost - make a deprovision call to innkeeper for a given requesti .
provisionhost -- .
deprovisionhost - make a deprovision call to innkeeper for a given requesti .
renderer is a middleware that maps a render .
puttimestamp writes a 64 - bit signed integer ( using time .
newclient - constructor for a new dispenser clien .
gettask - wrapper to rest call to get task from dispense .
deletelease -- allows a client user to make a delete lease call to dispense .
postlease -- allows a client user to post a lease to dispense .
new -- return a new sku provide .
/ * @implements skurepo .
procurement -- use agent to run async tas .
restock -- this will grab a requestid from procurementmeta and call the innkeeper client to deprovision .
initinnkeeperclient -- initialize innkeeper client based on cf configuratio .
getinnkeeperclient -- get an innkeeper client and cache it in the objec .
