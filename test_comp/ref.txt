0	if local version of file exists .
1	walks list of new nodes .
2	give a hash of all oid revision for the given node .
3	give the blob of a specific revisio .
4	give a hash with the patch of a diff between 2 revision and the stats ( added and deleted lines ) .
5	tftp utilizes udp .
6	give a hash of all oid revision for the given node .
7	give the blob of a specific revisio .
8	give a hash with the patch of a diff between 2 revision and the stats ( added and deleted lines ) .
9	can t use flatten as it will flatten hashe .
10	the default formatting is nearly unreadable .
11	extract the query parameters and append them to the url look through the headers hash for a params option ( case - insensitive .
12	render a hash of key = > value pairs for cookies in the request .
13	the proxy uri for this request .
14	parse the @url string into a uri object and save it as @uri .
15	given a mime type or file extension .
16	a pair may be - a single element hash .
17	hash of cookies extracted from response headers .
18	cookie jar extracted from response headers .
19	return the default behavior corresponding to the response code for 20x status codes return the response itself for 30x status codes 301 .
20	follow a redirection @param new args [ hash ] start with this hash of arguments for the redirection request .
21	the logic for dispatching any additional actions that need to be taken .
22	responds to an options request .
23	performs the steps necessary to run the request phase of a strategy .
24	performs the steps necessary to run the callback phase of a strategy .
25	this is called in lieu of the normal request process in the event that omniauth has been configured to be in test mode .
26	the setup phase looks for the setup option to exist and .
27	determines whether or not user info should be retrieved .
28	retrieve correct soap header handler .
29	returns an instance of reportutils object with all utilities relevant to the reporting .
30	returns an instance of batchjobutils object with all utilities relevant to running batch jobs .
31	executes block with a temporary flag set to a given value .
32	create the list of credentials to be used by the auth handler for header generation .
33	generates string to use as user agent in headers .
34	validates that the right credentials are being used for the chosen environment .
35	instance initializer .
36	validates given arguments based on provided fields list .
37	special handling for choice types .
38	checks if no extra fields provided outside of known ones .
39	generates order of xml elements for soap request .
40	checks the provided data structure matches wsdl definition .
41	overrides non - standard name conversion .
42	overrides non - default namespace if requested .
43	validates single argument .
44	validates array argument .
45	validates hash argument .
46	validates time argument .
47	handles custom xsitype .
48	replaces an item in an array with a different one into the same position .
49	replaces an item in an array with a different one into the same position .
50	adds savon attribute for given node .
51	prefixes a key with a given namespace index or default namespace .
52	returns type signature with all inherited fields .
53	returns all inherited fields of superclasses for given type .
54	converts time to a hash for xml marshalling .
55	initialized the config object with either the contents of a provided file or a provided hash .
56	writes a new value to a property or category in memory ( creating it if necessary ) .
57	reads a configuration file into instance variable as a ruby structure with the complete set of keys and values .
58	auxiliary method to recurse through a hash and convert all the keys to symbols .
59	finds a value for string of format level1 .
60	initializes an upload url to get the actual url to which to upload operations .
61	puts the provided operations to the provided url .
62	downloads the results of a batch job from the specified url .
63	given a full soap xml string .
64	logs the request on debug level .
65	removes extraneous xml information from return hash .
66	determining whether another page exists when dealing with bid landscapes is different from other types of queries .
67	does the given version exist and contain the given service? returns boolean indicating whether the given version exists and contains the given servic .
68	get the endpoint for a service on a given api version .
69	perform the loading of the necessary source files for a version .
70	returns the full module name for a given service .
71	generates an array of wsdl urls based on defined services and version supplied .
72	expects an array of +args+ and returns a hash containing the soap input .
73	processes a given +block+ .
74	yields a number of objects to a given +block+ depending on how many arguments the block is expecting .
75	evaluates a given +block+ inside +instance+ .
76	removes all blank values from a given +hash+ .
77	get values as an array .
78	create an individual value object by inferring the xsi type .
79	return a list of validation errors .
80	create a statement object that can be sent in a ad manager api request .
81	when an unrecognized method is applied to admanagerdate .
82	convert admanagerdatetime into a hash representation which can be consumed by the ad manager api .
83	when an unrecognized method is applied to admanagerdatetime .
84	creates and sets up savon client .
85	generates and returns soap xml for the specified action and args .
86	executes soap action specified as a string with given arguments .
87	executes the soap request with original soap name .
88	checks for errors in response and raises appropriate exception .
89	finds an exception object for a given response .
90	yields to user - specified block with additional information such as headers .
91	log the request .
92	format headers .
93	format the fault message by capping length and removing newlines .
94	check whether or not to log request summaries based on log level .
95	check whether or not to log payloads based on log level .
96	downloads a report and saves it to a file .
97	downloads a report with awql and saves it to a file .
98	streams a report with awql as a string to the given block .
99	returns a helper object that can manage breaking the streamed report results into individual lines .
100	send post request for a report and returns response object .
101	send post request for a report with awql and returns response object .
102	makes request and adhoc service and returns response .
103	converts passed object to xml text .
104	prepares headers for report request .
105	saves raw data to a file .
106	logs the request on debug level .
107	checks downloaded data for error signature .
108	checks for an xml error in the response body and raises an exception if it was found .
109	renders a report definition hash into xml text .
110	checks if the report definition looks correct .
111	adds fields order hint to generator based on specification .
112	initializes a header handler .
113	initializes credentialhandler .
114	set the credentials hash to a new one .
115	adds a custom string to the user agent .
116	generates string for useragent to put into headers .
117	generates an array of extra user agents to include in the user agent string .
118	instance initializer .
119	extracts misc data from response header .
120	extracts misc data from soap fault .
121	normalizes all fields for the given data based on the fields list provided .
122	normalizes one field of a given data recursively .
123	normalizes every item of an array .
124	normalizes every item of a hash .
125	checks if all elements of the array or hash passed are hashes and have key and value keys only .
126	checks if the argument is hash and has exactly key and value keys .
127	converts an array containing hashes or a hash with key and value keys only into a key -> value hash .
128	determines an xsitype override for for the field .
129	determines a choice type override for for the field .
130	finds the choice option matching data provided .
131	finds an item in an array based on its name field .
132	converts one leaf item to a built - in type .
133	checks if the field signature allows an array and forces array structure even for a signle item .
134	handles attributes received from savon .
135	obtain an api service .
136	authorize with specified authentication method .
137	updates default configuration file to include oauth2 token information .
138	auxiliary method to test parameters correctness for the service request .
139	auxiliary method to create an authentication handler .
140	handle loading of a single service .
141	auxiliary method to create a default logger .
142	helper method to load the default configuration file or a given config .
143	initializes config with default values and converts existing if required .
144	converts value of a config key to uppercase symbol .
145	converts complete class path into class object .
146	create the list of credentials to be used by the auth handler for header generation .
147	generates string to use as user agent in headers .
148	validates that the right credentials are being used for the chosen environment .
149	renders the farm into json to show for the end - user in front .
150	starts a farm .
151	always returns an array with a single id of the pushed walle .
152	returns true if a file for this wallet is already in the queue .
153	check whether this tax payment already exists in the wallet .
154	returns the array of modified wallets ( ids ) .
155	this method is thread - saf .
156	creates an empty wallet with the specified id and public key .
157	returns current wallet balance .
158	add a payment transaction to the wallet .
159	add a transaction to the wallet .
160	returns true if the wallet contains a payment sent with the specified id .
161	returns true if the wallet contains a payment received with the specified id .
162	age of wallet in hours .
163	calculate the maximum transaction id visible currently in the wallet .
164	returns list of wallet ids which were affecte .
165	sends a payment and returns the transaction just created in the paying wallet .
166	returns an array of zoldscor .
167	returns a list of modifed wallets ( as zoldid ) .
168	kill them all immediately and close the poo .
169	returns a list of modifed wallets ( as zoldid ) .
170	returns a list of modifed wallets ( as zoldid ) .
171	add legacy transactions first .
172	returns true if the file was actually modifie .
173	returns a list of modifed wallets ( as zoldid ) .
174	returns a list of modifed wallets ( as zoldid ) .
175	returns the list of their ids ( as plain text ) .
176	sign the trasnsaction and return the signature .
177	the transaction is valid? returns true if it is .
178	create the body for transaction signature .
179	delete all copies that are older than the " max " age provided .
180	returns the name of the cop .
181	make a new object of this class ( you must read the white paper in order to understand this class ) .
182	sign the transaction and add rsa signature to it +pvt+ the private rsa key of the paying wallet +id+ paying wallet i .
183	returns a list of modifed wallets ( as zoldid ) .
184	always returns an array with a single id of the pushed walle .
185	go through the list of remotes and call a provided block for each of them .
186	marks all the posts from the given one as unread for the given user @param [ thredded .
187	find a record by id .
188	returns the users that have coalesce ( user messageboard preferences .
189	whether this is visible to the given user based on the moderation state .
190	set worklist protectio .
191	if no argument is given .
192	sets the default format of the column at idx .
193	formats all date .
194	insert a row at idx ( 0 - based ) containing cells .
195	replace the row at idx with the following arguments .
196	updates the row at idx with the following arguments .
197	renumbers all rows starting at idx and calls .
198	merges multiple cells into one .
199	returns a copy of self with nil - values appended for empty cells that have an associated format .
200	same as row .
201	set the text rotation valid values integers from - 90 to 90 .
202	change the rgb components of the elements in the colour palette .
203	the format at idx .
204	the worksheet at idx .
205	write this workbook to a file .
206	returns a new instance of the default writer class for this workbook ( can only be an excelwriterworkbook at this time ) .
207	traverses the resource looking for associations then descends into those associations and checks for applicable resources to side loa .
208	passes the method onto the attributes hash .
209	adds an item to this collection @option item [ zendeskapidata ] the resource to add @raise [ argumenterror ] if the resource doesnt belong in this collectio .
210	executes actual get from api and loads resources into proper class .
211	sends methods to underlying array of resources .
212	simplified associations .
213	options to pass in * class - required * parent - parent instance * path - optional path instead of resource name generate a path to the resource .
214	tries to place side loads onto given resources .
215	if this resource hasn t been deleted .
216	saves associations takes into account inlining .
217	creates multiple resources using the create many endpoint .
218	creates or updates resource using the create or update endpoint .
219	creates or updates multiple resources using the create or update many endpoint .
220	if this resource hasn t already been deleted .
221	destroys multiple resources using the destroy many endpoint .
222	updates multiple resources using the update many endpoint .
223	returns the update to a ticket that happens when a macro will be applied .
224	handles resources such as tickets .
225	yield to a builder block in which all defined apps will only respond for the given versio .
226	optional accronyms .
227	wrapper function which extracts time and options for each by star query .
228	takes playground ( need this to access redis ) .
229	parses arguments to track ! method and return array with timestamp .
230	given two arguments .
231	use an activerecord model to get metric data from database table .
232	render the named template .
233	prevent certain url helper methods from failing so we can run erb templates outside of rails for reports .
234	dumbed down from rails simple format .
235	-- participant information -- returns an array of all experiments this participant is involved in .
236	check to make sure we set a custome path .
237	use google analytics metric .
238	this method is dynamically called by benchmarkdriverjobparser .
239	build the soap envelope and yield this object so subelements can be built .
240	request all known time zones from serve .
241	build the calendarview elemen .
242	build the contactsview elemen .
243	a helper method to dispatch to an itemid .
244	a helper method to dispatch to a appendtoitemfield .
245	a helper to dispatch to a fielduri .
246	insert item .
247	move this item to a new folder @param [ string .
248	copy this item to a new folder @param [ string .
249	if you want to add to the body set .
250	get a specific item by its id .
251	build up the arguements for .
252	handles the createitem call for forward .
253	validate the createitem response .
254	fetch items since a give datetime @param [ datetime ] date time the time to fetch items since .
255	fetch items between a given time period @param [ datetime ] start date the time to start fetching items from @param [ datetime ] end date the time to stop fetching items fro .
256	search on the item subject @param [ string ] match str a simple string paramater to match against the subject .
257	subscribe this folder to events .
258	unsubscribe this folder from further exchange events .
259	checks a subscribed folder for events @return [ array ] an array of event item .
260	get a specific folder by its id .
261	build up the arguements for .
262	find the first element in a list of hashes or return nil example find in hash list ( [ foo = > bar .
263	request list of server known time zones @param full [ boolean ] request full time zone definition? returns only name and id if false .
264	creates a new appointment @param attributes [ hash ] parameters of the calendar item .
265	send the soap request to the endpoint and parse it .
266	private methods ( builders and parsers ) validate or set default values for options parameters .
267	some operations only exist for certain versions of exchange server .
268	build the common elements in the soap message and yield to any custom elements .
269	change a ruby cased string to camelcase .
270	coerces value to datetim .
271	gets a collection of entries which links to current entry @param [ contentfulclient ] client @param [ hash ] query @return [ contentfularray < contentfulentry > .
272	gets a specific entry @param [ string ] id @param [ hash ] query @return [ contentfulentry ] .
273	returns the x - contentful - user - agent os data @privat .
274	returns the x - contentful - user - agent @privat .
275	get a contentfulrequest object set second parameter to false to deactivate resource building and return response objects instead @privat .
276	runs request and parses response @privat .
277	runs resource builder @privat .
278	use this method together with the client s dynamic entries configuration .
279	if the query contains the select operator .
280	maximum include depth is 10 in the api .
281	queries contentful for the resource the link is refering to takes an optional query has .
282	returns all fields of the asset with locales nested by field @return [ hash ] fields for resource grouped by field nam .
283	issues the request that was made to fetch this response again .
284	simplifies pagination @return [ contentfularray .
285	field definition for fiel .
286	iterates over all pages of the current sync @note please keep in mind iterating fires a new request for each page @yield [ contentfulsyncpage ] .
287	coerces value to proper typ .
288	set the extension parameters for a specific vendor @param ext key [ string ] the identifier for the vendor - specific parameters @param ext params [ hash ] the parameters .
289	parse tool configuration data out of the common cartridge lti link xm .
290	generate xml from the current setting .
291	if define rails constant result = weixinauthorizeresulthandler .
292	has the same syntax as .
293	writes the necessary headers and footers .
294	initializes the pipeline with all the processing options .
295	determines the appropriate destination image format .
296	creates a new tempfile for the destination file .
297	in case of processing errors .
298	add multiple operations as a hash or an array .
299	assume that any unknown method names an operation supported by the processor .
300	call the defined processing and get the result .
301	creates a new builder object .
302	the cookie key -> value pairs returned with the response .
303	creates a new session cache .
304	sanitizes a url based on filtering options .
305	provides transparent access to the values in .
306	the charset included in the content - type .
307	determines if any of the content - types of the page include a given type .
308	add a cookie to the jar for a particular domain .
309	retrieve cookies for a domain from a page response header .
310	returns the pre - encoded cookie for a given host .
311	returns raw cookie value pairs for a given host .
312	creates a new auth store .
313	add an auth credential to the store for supplied base url .
314	start spidering until the queue becomes empty or the agent is paused .
315	enqueues a given url for visiting .
316	requests and creates a new page object from a given url .
317	posts supplied form data and creates a new page object from a given url .
318	visits a given url .
319	prepares request headers for the given url .
320	normalizes the request path and grabs a session to handle page get and post requests .
321	determines if a given url should be visited .
322	creates a new rules object .
323	enumerates over the meta - redirect links in the page .
324	enumerates over every mailto link in the page .
325	enumerates over every link in the page .
326	enumerates over every absolute url in the page .
327	normalizes and expands a given link into a proper uri .
328	create hypermedia links for this instance by invoking their blocks .
329	serializes the object .
330	gets +url+ with +format+ .
331	serializes the object .
332	add a new key / signer pair to the hsm signer .
333	sign a single transaction @param [ hash ] tx template \ ta single transaction template .
334	sign a batch of transactions @param [ array < hash > ] tx templates array of transaction templates .
335	set the client to use no authentication mechanism .
336	set the client to use bearer token authenticatio .
337	set the client to use openid connect oauth2 authentication client -- client id secret -- client secret authorize path -- absolute path of authorization endpoint token path -- absolute path of token endpoin .
338	extract the request payload in the specified format .
339	return a list of ip s between @address and the supplied ip ip = ipaddress ( " 172 .
340	splits a network into different subnets if the ip address is a network .
341	returns a new ipv4 object from the supernetting of the instance network .
342	this method implements the subnetting function similar to the one described in rfc3531 .
343	allocates a new ip from the current subnet .
344	returns the difference between two prefixes .
345	allocates a new ip from the current subnet .
346	pull the username from a tweet hash -- this is different depending on if we re doing a search .
347	do some simple variable substitution .
348	get / set the profile descriptio .
349	get / set the profile ur .
350	generate a bot object .
351	specify a bot - specific blocklist of users .
352	specify a bot - specific safelist of users .
353	specify list of strings we will check when deciding to respond to a tweet or not .
354	set the consumer secret @param s [ string ] the consumer secre .
355	set the consumer key @param k [ string ] the consumer ke .
356	set the secret @param s [ string ] the secre .
357	set the token @param s [ string ] the toke .
358	take a variable list of strings and possibly arrays and turn them into a single flat array of string .
359	simple wrapper for favoriting a message @param [ id ] id a tweet or the id of a tweet .
360	handle the bots timelin .
361	is this tweet from a user on our safelist .
362	simple wrapper for sending a messag .
363	check direct messages for the bo .
364	print out a message about getting a pin from twitter .
365	ask the user to get an api key from twitter .
366	given an array or object .
367	get any config from our global config file .
368	bot - specific config setting .
369	load in the config from the assortment of places it can be specified .
370	simple wrapper for retweeting a message @param [ id ] id a tweet or the id of a tweet .
371	run the bot with the rest ap .
372	handle replies for the bo .
373	based on the text of this tweet .
374	is this tweet from a user on our blocklist .
375	reset the since id for this bot to the highest since id we can get .
376	query twitter for the bots screen name .
377	handle oauth for this request .
378	this method empties out the container it should only be used for testing purpose .
379	converts a namespaced symbol or string to a proper class name with module .
380	closes the writer by finishing the compressed data and flushing it to the delegate .
381	allows resetting this object and the delegate object back to the beginning of the stream or reporting the current position in the stream .
382	allows resetting this object and the delegate object back to the beginning of the stream or reporting the current position in the stream .
383	returns a time instance which is equivalent to the time represented by this object .
384	iterates through each entry of a readable zip archive in turn yielding each one to the given block .
385	adds entry into a writable zip archive .
386	returns the file offset of the first record in the central directory .
387	writes all the entries of this archive to io .
388	once the view is assigned .
389	this will respond to both a get and a pos .
390	not every activerecord query will work when calling the simple .
391	writes a line dlimited string of all the existing and the new cookies .
392	registers a rendering extention .
393	attempts to render the requested file ( i .
394	renders the requested template ( should be a string .
395	sends a block of data .
396	subscribes to a pub / sub stream / channel or replaces an existing subscription to the same stream / channel ( raises an error unless an sse / websocket connection was established ) .
397	experimental takes a module to be used for websocket callbacks events .
398	@param nodes [ array < inventoryrefreshinventorycollection > ] list of inventory collection nodes returns graph in graphviz format .
399	builds a feedback edge set .
400	recursive method for traversing dependencies and finding a cycle @param traversed nodes [ array < inventoryrefreshinventorycollection > already traversed nodes @param starting node [ inventoryrefreshinventorycollection ] node we ve started the traversal on @param current node [ inventoryrefreshinventorycollection ] node we are currently on @param edges [ array < array > ] all graph edges @param dependencies [ array < inventoryrefreshinventorycollection > dependencies of the current node @param escalation [ symbol ] if exception .
401	returns hash of node = > name .
402	an iterator that can fetch batches of the ar objects based on a set of attribute indexes @param inventory collection [ inventoryrefreshinventorycollection ] inventory collection owning the iterator iterator that mimics find in batches of activerecordrelation .
403	given hash of attributes .
404	assigns value based on the version attributes .
405	assigns attribute representing version of the whole row @param full row version attr [ symbol ] attr name for full rows .
406	instead of loading the reference from the db .
407	finds an index that fits the list of columns ( keys ) the best @param keys [ array < symbol > ] @raise [ exception ] if the unique index for the columns was not found @return [ activerecordconnectionadaptersindexdefinition ] unique index fitting the key .
408	find candidates for unique key .
409	list attributes causing a dependency and filters them by attributes blacklist and attributes whitelist @return [ hashsymbol = > set ] attributes causing a dependency and filtered by blacklist and whitelis .
410	attributes that are needed to be able to save the record .
411	returns fixed dependencies .
412	returns what attributes are causing a dependencies to certain inventorycollection objects .
413	builds a multiselection conditions like ( table1 .
414	builds an activerecordrelation that can fetch all the references from the db @param references [ hashstring = > inventoryrefreshinventorycollectionreference ] passed references @return [ activerecordrelation ] relation that can fetch all the references from the d .
415	creates inventoryrefreshinventoryobject object from passed hash data @param hash [ hash ] object data @return [ inventoryrefreshinventoryobject ] instantiated inventoryrefreshinventoryobjec .
416	creates dynamically a subclass of inventoryrefreshinventoryobject .
417	returns array of records identities @param records [ array < applicationrecord > .
418	returns a hash with a simple record identity @param record [ applicationrecord .
419	declares settings function .
420	allows privileged access to the +either+ s inner value from within a block .
421	if it is a failure it will return a new failure with the provided value @return [ success .
422	type - return type of the method .
423	generate a range of inputs spaced by powers .
424	gather times for each input against an algorithm @param [ array [ numeric ] ] data the data to run measurements for @param [ integer ] repeat nubmer of times work is called to compute execution time @return [ array [ array .
425	find a line of best fit that approximates logarithmic function model form y = a * lnx + b @param [ array [ numeric ] ] xs the data points along x axis @param [ array [ numeric ] ] ys the data points along y axis @return [ numeric .
426	finds a line of best fit that approxmimates power function function form y = bx ^ a @return [ numeric .
427	find a line of best fit that approximates exponential function model form y = ab ^ x @return [ numeric .
428	fit the performance measurements to construct a model with slope and intercept parameters that minimize the error .
429	take a fit and estimate behaviour at input size n @example fit at ( power .
430	infer trend from the execution times fits the executiom times for each range to several fit models .
431	adds given symbols to the exported symbols array @param symbols [ array ] array of symbols @return [ void ] .
432	defers exporting of symbols for a namespace ( nested module ) .
433	exposes all private methods and private constants as public @return [ module ] sel .
434	add a file glob or array of file globs to monitor for changes .
435	records that each path in +files+ depends on +dependency+ .
436	record that a class is split into multiple files .
437	initializes hirefiremiddleware .
438	builds the response for the info path containing the configured queues and their sizes based on the hirefireresource configuration .
439	configures the @path prefix in order to handle apps mounted under rails relative url root .
440	we want to deliver the shortist valid javascript escaped string count the number of " vs if more .
441	create a twocaptcha api client .
442	upload a captcha to 2captcha .
443	retrieve information from an uploaded captcha .
444	load a captcha raw content encoded in base64 from options .
445	fail if the response has errors .
446	todo this can spin indefinitely if timeout > retry perio .
447	public - create a new group object based on a netldapentry .
448	public - search entries in the ldap server .
449	internal searches the host ldap server s root dse for capabilities and extensions .
450	internal - determine whether to use encryption or not .
451	internal - configure virtual attributes for this server .
452	internal configure the membership validation strategy .
453	internal set the user search strategy that will be used by domain .
454	internal configure the member search strategy .
455	this more of an internal method .
456	recursively gather groups containing a before ( all ) hook .
457	adds intendations and newlines to +xml+ to make it more readabl .
458	argument should be a valid kml geometry fragment ie .
459	@return [ hash ] a hash that consists of the remaining flags and options and their values .
460	@return [ string ] the first argument in the remaining parameters .
461	@return [ bool .
462	executes the logic that lies in .
463	acquire the lock ( called automatically by initialize ) .
464	acquire the lock this is a re - entrant lock .
465	release the lock returns a deferrabl .
466	forks the current process and starts a new mock redis server on port 6380 .
467	configure the redis connection to use in usual operation .
468	disconnect then reconnect the redis connection .
469	starts an inactivity checker which will ping redis if nothing has been heard on the connection for trigger secs seconds and forces a reconnect after a further response timeout seconds if we still dont hear anything .
470	subscribe to a pubsub channel if an optional proc / block is provided then it will be called when a message is received on this channel @return [ deferrable ] redis subscribe cal .
471	unsubscribe all callbacks for a given channel @return [ deferrable ] redis unsubscribe cal .
472	unsubscribe a given callback from a channel .
473	pattern subscribe to a pubsub channel if an optional proc / block is provided then it will be called ( with the channel name and message ) when a message is received on a matching channel @return [ deferrable ] redis psubscribe cal .
474	pattern unsubscribe all callbacks for a given pattern @return [ deferrable ] redis punsubscribe cal .
475	unsubscribe a given callback from a pattern .
476	send a command to redis without adding a deferrable for it .
477	method the symbolic name of the method to use .
478	take a hash of parameters for request .
479	take a hash of parameters for request .
480	transparently get all results across all pages .
481	public fetch or create a new gauge metric .
482	returns the boolean state of the flag as found in options [ answers ] .
483	updates options [ answers ] [ feature flags ] with any environment variables found based on flags .
484	fetches the tokens hash from the server and updates @token .
485	parse array index expressions .
486	rubocopdisable metrics / methodlengt .
487	just because a message was recieved via sqs .
488	guess the file format of dates .
489	returns a representation of the transaction as it would appear in a qif file .
490	tests that the document content has not been edite .
491	tests correctness of the signature ( and hence digests ) .
492	looks up node by id .
493	the verification process assumes that all signatures are enveloped .
494	required list of strings .
495	performs two conversions 1 .
496	this is trivial to define with named arguments .
497	main cases input params definition for a non - nested case [ " command1 " = > [ " arg1 " .
498	definitions processin .
499	this is a fast report based on sax parser @path path to the xml output of jacoco @report url url where html report hosted @delimiter git .
500	select modified and added files in this p .
501	it returns a specific class code coverage and an emoji status as wel .
502	it returns total of project code coverage and an emoji status as wel .
503	rubocopdisable style / signalexceptio .
504	rubocopenable style / signalexceptio .
505	start up an instance of jetty .
506	wraps the java inputstream for the level of rack compliance desired .
507	turns a servlet request into a rack request hash .
508	handle exceptions .
509	reloads the application if ( a ) we haven t reloaded in @interval seconds .
510	walk through the list of every file we ve loaded .
511	returns true if the file is loadable ; uses the wrapper functionality of kernel .
512	takes a relative or absolute +file+ name .
513	returns the modification time of file .
514	fetch a model from the server by its id .
515	return the profile of the user accessing the api .
516	try to persist the current object to the server by creating a new resource or updating an existing one .
517	update the attributes of this model .
518	generates methods to enter text into a text field .
519	generates methods to click on a button as well as get the value of the button text @example button ( close .
520	generates methods to get the value of a combo box .
521	generates methods to get / set the value of a checkbox as well as to get the text value of the control @example checkbox ( include .
522	generates methods to set a radio button as well as see if one is selected @example radio ( morning .
523	generates methods to get the value of a label control @example label ( login info .
524	generates methods to work with link controls @example link ( send info link .
525	generates methods to work with menu items @example menu item ( some menu item .
526	generates methods for working with table or list view controls @example table ( some table .
527	generates methods for working with tree view controls @example tree view ( tree .
528	generates methods for working with spinner controls @example spinner ( age .
529	generates methods for working with tab controls @example tabs ( tab .
530	displays the flash messages found in actiondispatch s +flash+ hash using foundation s +callout+ component .
531	rubocopdisable linelengt .
532	rubocopenable linelengt .
533	rubocopdisable linelengt .
534	rubocopenable linelengt .
535	rubocopdisable linelength .
536	rubocopenable linelength .
537	fetches all refunds of your charge using the pin api .
538	update a recipient using the pin api .
539	update a customer using the pin api .
540	list contents of a remote directory @param [ string ] mask the matching mask @param [ boolean ] raise if set .
541	upload a local file @param [ string ] from the source file path ( on local machine ) @param [ string ] to the destination file path @param [ boolean ] overwrite overwrite if exist on server? @param [ boolean ] raise raise error or just return +false+ @return [ boolean ] true on succes .
542	writes content to remote file @param [ string ] content the content to be written @param [ string ] to the destination file path @param [ boolean ] overwrite overwrite if exist on server? @param [ boolean ] raise raise error or just return +false+ @return [ boolean ] true on succes .
543	delete a remote file @param [ string ] path the remote file to be deleted @param [ boolean ] raise raise raise error or just return +false+ @return [ boolean ] true on succes .
544	receive a file from the smb server to local .
545	reads a remote file and return its content @param [ string ] from the file to be read from server @param [ boolean ] overwrite overwrite if exist locally? @param [ boolean ] raise raise error or just return +false+ @return [ string ] the content of the remote fil .
546	execute a smbclient command @param [ string ] cmd the command to be execute .
547	connect to the server using separate threads and pipe for communication .
548	rubocopdisable metrics / abcsize .
549	rubocopdisable metrics / abcsize .
550	remove title part components and abstrac .
551	convert isoyyyy reference to reference to most recent instance of reference .
552	verifies that the initialized dfa is valid .
553	runs the input on the machine and returns a hash describing the machine s final state after running .
554	@todo check that each state is connected .
555	determines the transition states .
556	get the last value for the given row / colum .
557	pass in no params to scan whole tabl .
558	mutations is a key / value pair to insert / update for the given row the keys are in the form " familycolumn " .
559	@todo check that each state is connected .
560	determines the transition states .
561	initialize a pda object .
562	determines the transition states .
563	determines whether or not any transition states exist given a beginning state and input symbol pair .
564	formats all attributes into a hash of parameters .
565	formats times and booleans as amazon desires them .
566	allows easy initialization for a model by assigning attributes from a hash .
567	converts the pipeline object into parameters and signs them .
568	this is how you verify ipns and pipeline responses .
569	this compiles an api request object into a url .
570	flattens a possibly - nested hash into a query string for amazon .
571	commit the current changes to the resource to the remote server .
572	try to destroy this resource @return [ boolean ] whether or not the destroy succeede .
573	todo purchase .
574	search the index for specific keyword ( s ) @param keyword [ string ] some keyword @param offset [ integer ] default 0 @param keyword [ integer ] default 10 @return [ array ] [ 1 .
575	search the index for specific keyword ( s ) and return output as array of objects @param keyword [ string ] some keyword @param offset [ integer ] default 0 @param keyword [ integer ] default 10 @return [ array ] [ " id " " gid / / application name / user / unique id " .
576	number of records found for keywords @param keyword [ hash ] keyword that gets passed to ft search @return [ integer ] number of results matching the searc .
577	index all records in specific model @return [ string ] .
578	index specific record @param record [ object ] object to index @return [ string ] .
579	index existing hash @param record [ string ] key of existing hash key in redis that will hold the fields the index needs .
580	delete all records in specific model @return [ string ] .
581	delete specific document from index @param record [ object ] object to delete @return [ string ] .
582	get info about specific index @return [ string ] .
583	add all values for a model attribute to autocomplete @param attribute [ string ] - name .
584	add string to autocomplete dictionary @param record [ object ] object @param attribute [ string ] - name .
585	query dictionary for suggestion @param attribute [ string ] - name .
586	delete all values for a model attribute to autocomplete @param attribute [ string ] - name .
587	size of dictionary @param attribute [ string ] @return [ integer ] - number of possible suggestion .
588	---- modified methods ---- .
589	run normalization process across directory .
590	evaluate block after changing directory to specified director .
591	internally .
592	class < < self ordering id name .
593	validates token .
594	validates token .
595	updates any aspect of a subscriber .
596	gets the historical record of this subscriber s trackable actions .
597	gets the active subscribers in this segment .
598	updates this email template .
599	refresh the current oauth token using the current refresh token .
600	gets the administrators for the account .
601	set the primary contect for the account .
602	creates a new custom field for this list .
603	updates a custom field belonging to this list .
604	updates the options of a multi - optioned custom field on this list .
605	gets the custom fields for this list .
606	gets the segments for this list .
607	gets the active subscribers for this list .
608	gets the webhooks for this list .
609	creates a new webhook for the specified events ( an array of strings ) .
610	updates the person details .
611	gets the sent campaigns belonging to this client .
612	gets the currently scheduled campaigns belonging to this client .
613	gets the draft campaigns belonging to this client .
614	gets the subscriber lists belonging to this client .
615	gets the lists across a client .
616	gets the people associated with this clien .
617	gets this client s suppression list .
618	adds email addresses to a client s suppression lis .
619	gets the templates belonging to this client .
620	sets the basic details for this client .
621	sets the payg billing settings for this client .
622	sets the monthly billing settings for this client .
623	transfer credits to or from this client .
624	sends a preview of this campaign .
625	gets the email clients that subscribers used to open the campaig .
626	retrieves the opens for this campaign .
627	retrieves the subscriber clicks for this campaign .
628	retrieves the unsubscribes for this campaign .
629	retrieves the spam complaints for this campaign .
630	retrieves the bounces for this campaign .
631	updates the administator details .
632	flush the buffer if async is false .
633	stringify symbolized hash keys @param [ hash ] hash a string / symbol keyed hash @return stringified has .
634	slice keys from hash @param [ hash ] hash a hash to slice key / value pairs from @param [ array ] * keys the keys to be sliced @return hash filtered by key .
635	login rest api @param [ string ] username username @param [ string ] password password @return [ session ] rocket .
636	rubocopdisable metrics / methodlength rubocopdisable metrics / abcsiz .
637	returns a mandrill api compatible attachment has .
638	mandrill uses a different hash for inlined image attachment .
639	mandrill expects send at in utc as yyyy - mm - dd hhmmss .
640	rubocopdisable metrics / abcsiz .
641	rubocopenable metrics / abcsize returns a mandrill api compatible email address has .
642	rubocopdisable metrics / abcsiz .
643	convert beaneaterjob to has .
644	return the stats data in a format for the bluff js ui chart .
645	pick a minimum peek range based on minumum ready jobs on all tube .
646	get all venues for a given page .
647	returns a list of managed pages .
648	search for users by tip @param [ hash ] options @option options string ll - latitude and longitude in format lat .
649	get all pending friend requests for the authenticated use .
650	get checkins for the authenticated user @param [ hash ] options @option options integer limit @option options integer offest - for paging through results @option options string sort - " newestfirst " or " oldestfirst " @option options integer aftertimestamp - get all checkins after this epoch time .
651	get all friends for a given user .
652	get all tips for a given user .
653	get all todos for a given user .
654	get the photos for the authenticated user .
655	get the venue history for the authenticated user .
656	get the mayorships for a given user .
657	get the lists for a given user .
658	request friendship with a user @param [ string ] user id - the user to request friendship with .
659	set pings for a friend @param [ string ] user id - the user to set pings for @param [ string ] value - the value of ping setting for this friend .
660	summary of venues visited by a user optional @param [ string ] user id - the user to get venue stats for .
661	retrieve information about a tip .
662	search for tips from a venue .
663	add a tip @param [ hash ] options @option options string venueid - required .
664	mark a tip todo for the authenticated user .
665	retrieve information about an event param [ string ] event id the id of the even .
666	retrieve information about a campaign param [ string ] campaign id the id of the venu .
667	sets up the connection to be used for all requests based on options passed during initialization .
668	helper method to return errors or desired response data as appropriate .
669	retrive information about a single checkin .
670	retrive a list of recent checkins from friends .
671	checkin on behalf of the user .
672	add a comment to a checkin .
673	retrieve information about a venuegroup param [ string ] group id the id of the venuegrou .
674	create a venue group .
675	updates a venue group .
676	list all venue groups owned by the user .
677	delete a venue group .
678	retrieve information about a special param [ string ] special id the id of the specia .
679	search for specials @param [ hash ] options @option options string ll - latitude and longitude in format lat .
680	retrieve information about a list .
681	search for trending venues @param [ string ] ll latitude and longitude in format lat .
682	search for venues by tip @param [ hash ] options @option options string ll - latitude and longitude in format lat .
683	retrieve information about all venue categories .
684	retrieve links for a venue .
685	add a venue @param [ hash ] options @option options string name - name of the venue ( required ) @option options string address @option options string crossstreet @option options string city @option options string state @option options string zip @option options string phone @option options string ll - latitude and longitude in format lat .
686	mark a venue as todo for the authenticated user @param [ string ] venue id - venue id to mark todo .
687	suggest venue completions .
688	retrieve menus for a venue .
689	get daily venue stats for a list of venues over a time range .
690	update a single setting for the authenticated user .
691	retrieve a photo @params [ string ] photo id - the id of the phot .
692	add a photo @param [ hash ] options @option options uploadio photo - the photo .
693	retrieve photos for a venue @params [ string ] venue id - the id of the venue @param [ hash ] options @option options string group - pass checkin for photos added by friends ( including on their recent checkins ) .
694	forward a method call to the delegate .
695	add items to the collection @param items [ array ] items to ad .
696	append items to the collectio .
697	submit the batch operation in chunks until they are all complete .
698	support for setting a hash of attributes on the object with a given dirty tracking value if dirty track is set to false ( default ) .
699	returns a hash of attributes for properties that have changed .
700	returns a formatted value based on the operation hash and data type of the property .
701	this method takes an input value and transforms it to the proper local format depending on the data type that was set for a particular property key .
702	you can get items within the collection relation filtered by a specific set of query constraints .
703	add parseobjects to the relation .
704	atomically add a set of parseobjects to this relation .
705	atomically add a set of parseobjects to this relation .
706	atomically remove a set of parseobjects to this relation .
707	the initializer can create a geopoint with a hash .
708	setting lat and lng for an geopoint can be done using a hash with the attributes set or with an array of two items where the first is the lat and the second is the lng ( ex .
709	calculate the distance in kilometers to another geopoint using haversine method .
710	returns a hash of all the changes that have been made to the object .
711	this method creates a new object of the same instance type with a copy of all the properties of the current instance .
712	add parseobjects to the collection .
713	removes parseobjects from the collection .
714	save the file by uploading it to parse and creating a file pointer .
715	apply a set of constraints .
716	this method takes all the parameters of the instance and creates a proper hash structure .
717	helper method to send a message @param message [ string ] the message to sen .
718	constructor method to create a query with constraints for a specific parse collection .
719	restrict the fields returned by the query .
720	add a sorting order for the query .
721	combine a list of parseconstraint objects @param list [ array < parseconstraint > ] an array of parseconstraint subclasses .
722	add a constraint to the query .
723	formats the current set of parseconstraint instances in the where clause as an expression hash .
724	add additional query constraints to the where clause .
725	combine two where clauses into an or constraint .
726	queries can be made using distinct .
727	perform a count query .
728	max results is used to iterate through as many api requests as possible using skip and limit paramter .
729	performs the fetch request for the query .
730	executes the query and builds the result set of parseobjects that matched .
731	similar to .
732	builds objects based on the set of parse json hashes in an array .
733	complies the query and runs all prepare callbacks .
734	send a delete request .
735	send a parserequest object .
736	removes a permission for an objectid or user .
737	apply a new permission with a given objectid .
738	apply a parserole to this acl .
739	grants read permission on all existing users and roles attached to this object .
740	grants write permission on all existing users and roles attached to this object .
741	denies read permission on all existing users and roles attached to this object .
742	denies write permission on all existing users and roles attached to this object .
743	if it is a batch respnose .
744	this method takes the result hash and determines if it is a regular parse query result .
745	adds the third - party authentication data to for a given service .
746	you may set a password for this user when you are creating them .
747	login and get a session token for this user .
748	invalid the current session token for this logged in user .
749	if the current session token for this instance is nil .
750	this method is a general implementation that gets overriden by parseobject subclass .
751	supporting the first or create class method to be used in scope chaining with queries .
752	supporting the save all method to be used in scope chaining with queries .
753	this method adds a font to a fonttable instance .
754	this method generates the rtf text for a fonttable object .
755	constructor for the node class .
756	this method retrieves a node objects next peer node .
757	this method inserts a string into the existing text within a textnode object .
758	this method generates the rtf equivalent for a textnode object .
759	this is the constructor for the containernode class .
760	this is the constructor for the commandnode class .
761	this method generates the rtf text for a commandnode object .
762	this method provides a short cut means of creating a paragraph command node .
763	this method provides a short cut means of creating a new ordered or unordered list .
764	this method inserts a footnote at the current position in a node .
765	this method provides a short cut means for applying multiple styles via single command node .
766	this method provides a short cut means of creating a bold command node .
767	this method provides a short cut means of creating an italic command node .
768	this method provides a short cut means of creating an underline command node .
769	this method provides a short cut means of creating a subscript command node .
770	this method provides a short cut means of creating a superscript command node .
771	this method provides a short cut means of creating a strike command node .
772	this method provides a short cut means of creating a font command node .
773	this method provides a short cut means of creating a foreground colour command node .
774	this method provides a short cut menas of creating a colour node that deals with foreground and background colours .
775	this method creates a new table node and returns it .
776	creates a new +listlevelnode+ to implement nested list .
777	this method assigns a shading colour to a specified column within a tablenode object .
778	this method provides a means of assigning a shading colour to a selection of cells within a table .
779	this method generates the rtf document text for a tablecellnode object .
780	this method overloads the store method inherited from the containernode class to forbid addition of further nodes .
781	this method assigns a width .
782	this method assigns a border width to the top side of a table cell .
783	this method assigns a border width to the right side of a table cell .
784	this method assigns a border width to the bottom side of a table cell .
785	this method assigns a border width to the left side of a table cell .
786	this method retrieves an array with the cell border width settings .
787	this method generates the rtf document text for a tablecellnode object .
788	this method attempts to determine the image type associated with a file .
789	this method generates the rtf for an imagenode object .
790	this method converts an array to an integer .
791	this method loads the data for an image from its source .
792	this method fetches details of the dimensions associated with an image .
793	this method assigns a new header to a document .
794	this method assigns a new footer to a document .
795	this method fetches a header from a document object .
796	this method fetches a footer from a document object .
797	this method generates the rtf text for a document object .
798	this method adds a new colour to a colourtable object .
799	this method generates a textual description for a colourtable object .
800	this is the constructor for the information class .
801	this method creates a textual description for an information object .
802	this method generates the rtf text for an information object .
803	this method generates a string containing the prefix associated with a style object .
804	this method generates a string containing the prefix associated with a style object .
805	this method generates a string containing the prefix associated with a style object .
806	the server processes requests her .
807	this is an unhandled error on the libuv event loo .
808	load gazelles and make the required binding .
809	creates a new engine .
810	gets the first device with the specified vendor id .
811	opens the first device with the specified vendor id .
812	gets the device with the specified path .
813	opens the device with the specified path .
814	gets the usb code for the current locale .
815	closes the device ( if open ) .
816	attempts to read from the device .
817	sends a feature report to the device .
818	gets a feature report from the device .
819	reads a string descriptor from the usb device .
820	computes the differences of the change logs between two audits .
821	render the change log for the given audited mode .
822	get the file path to output the html based on the file being built .
823	generate a file name based on the provided file path .
824	friendly helper method to fetch a vapp by name - organization object - organization vdc name - vapp nam .
825	create a vapp starting from a template params - vdc the associated vdc - vapp name name of the target vapp - vapp description description of the target vapp - vapp templateid id of the vapp templat .
826	create a new virtual machine from a template in an existing vapp .
827	clone a vapp in a given vdc to a new vap .
828	fetch details about a given vapp template - name - description - children vms -- i .
829	force a guest customizatio .
830	set vapp network config retrieve the existing network config section and edit it to ensure settings are not los .
831	add an existing network ( from org ) to vap .
832	add an existing network ( from org ) to vap .
833	set vapp port forwarding rules - vappid id of the vapp to be modified - network name name of the vapp network to be modified - config hash with network configuration specifications .
834	get vapp port forwarding rules - vappid id of the vap .
835	get vapp edge public ip from the vapp id only works when - vapp needs to be poweredon - fencemode is set to " natrouted " - nattype " is set to " portforwarding this will be required to know how to connect to vms behind the edge device .
836	merge the configuration section of a new network and add specific configuratio .
837	add a new network to a vap .
838	create a fake configuration node for internal networkin .
839	create a networkconfigsection for a new internal or external networ .
840	authenticate against the specified serve .
841	fetch information for a given tas .
842	poll a given task until completio .
843	sends a synchronous request to the vcloud api and returns the response as parsed xml + headers .
844	generic method to send power actions to vapp / vm i .
845	discard suspended state of a vapp / v .
846	create a new vapp / vm snapshot ( overwrites any existing ) .
847	upload a large file in configurable chunks .
848	fetch details about a given catalo .
849	friendly helper method to fetch an catalog id by name - organization hash ( from get organization / get organization by name ) - catalog nam .
850	friendly helper method to fetch an catalog by name - organization hash ( from get organization / get organization by name ) - catalog nam .
851	fetch details about a given catalog item - description - vapp template .
852	friendly helper method to fetch an catalogitem by name - catalogid ( use get catalog name ( org .
853	retrieve information ( i .
854	retrieve information about disk .
855	set information about disks disks can be added .
856	edit vm network config retrieve the existing network config section and edit it to ensure settings are not los .
857	add a new network to a v .
858	remove an existing networ .
859	set vm guest customization confi .
860	force a guest customizatio .
861	fetch details about a given v .
862	friendly helper method to fetch a vapp by name - organization object - organization vdc name - vapp name - vm nam .
863	retrieve a screen ticket that you can use with the vmrc browser plug - in to gain access to the console of a running vm .
864	fetch details about a given org vdc networ .
865	friendly helper method to fetch an network id by name - organization hash ( from get organization / get organization by name ) - network nam .
866	friendly helper method to fetch an network by name - organization hash ( from get organization / get organization by name ) - network nam .
867	fetch existing organizations and their id .
868	friendly helper method to fetch an organization id by name - name ( this isn t case sensitive ) .
869	friendly helper method to fetch an organization by name - name ( this isn t case sensitive ) .
870	fetch details about an organization - catalogs - vdcs - networks - task list .
871	fetch details about a given vdc - description - vapps - templates - disks - network .
872	friendly helper method to fetch a organization vdc id by name - organization object - organization vdc nam .
873	friendly helper method to fetch a organization vdc by name - organization object - organization vdc nam .
874	( see convertergenerator .
875	" adding existing containers " - related methods adds all the providers defined in the given module to this clas .
876	adds all the providers defined in the given module to this class .
877	returns the requested provider as a provider objec .
878	@param class name [ string ] full name of the converter class to generate ( e .
879	thread safe version using shallow copy of en .
880	either aws - sdk and / or aws - sdk - v1 must be required before calling omnivaultabstractvault .
881	downloads a remote file .
882	replaces files at a relative path with template files from the same relative path .
883	runs a block in the background and displays a spinner until it completes .
884	given a two - dimensional array of strings representing a table of data .
885	starts the callable in a background thread and waits for it to complete .
886	performs the rescuetime query and returns an array or csv response .
887	sets the report format to a valid type @param [ .
888	parses a response from the string response body to the desired format .
889	returns the formatter with the specified name or .
890	adds terms to the rescuetime collection query @param [ hash ] terms a set of terms to add to the query @return [ rescuetimecollection ] .
891	returns true if the provided api key is valid .
892	requires all formatter files .
893	initialize the parser with a document parse the document and save values returned by selector .
894	dump the extracted data into a hash with symbolized key .
895	delegate is optional .
896	open web pages with utf - 8 encodin .
897	initialize a new mms2rmedia comprised of a mail .
898	return the subject for this message .
899	convenience method that returns a string including all the text of the default text / plain file found .
900	helper for process template method to determine if media contained in a part should be ignored .
901	helper for process template method to decode the part based on its type and write its content to a temporary file .
902	helper to decide if a part should be kept or ignore .
903	helper for process media template method to transform text .
904	helper for process media template method to transform text .
905	helper for process template method to name a temporary filepath based on information in the part .
906	helper to add a file to the media hash .
907	helper to temp file to create a unique temporary directory that is a child of tmp dir this version is based on the message id of the mail .
908	returns a filename declared for a part .
909	best guess of the mobile device type .
910	guess content type from filenam .
911	helper to fold all the parts of multipart mail down into a flat array .
912	holy moly batman ! all this to tell as400 " yes i am sure " .
913	creates an instance for the transfer type and return it type - the transfer type like sftp .
914	check if the first file matches service < service - name > and try to determine the files based on the service .
915	isalphanum -- return true if the character is a letter .
916	get -- return the next character from stdin .
917	get the next character without getting it .
918	mynext -- get the next character .
919	action -- do something ! what you do is determined by the argument 1 output a .
920	jsmin -- copy the input to the output .
921	todo deal with string values better ( urls .
922	def queue items queue items = [ queue item ] .
923	launches the netflix oauth page .
924	ios 11+ avcapturephotocapturedelegate metho .
925	ios 10 avcapturephotocapturedelegate metho .
926	input data -- a vector of numbers .
927	todo this is a mutable method not a good solution .
928	useful for adding additional information into your middleware stack definition @param [ object ] name the name of a given middleware .
929	adds middleware to the current stack definition @param [ class ] middleware the middleware class to use in the stack @param [ hash ] opts an options hash that is passed through to the middleware when it is instantiated @yield the block is provided to the middlewares .
930	converts @form to attributes assigned to output objec .
931	extracts the attribute definition for a given associatio .
932	maps an association to the attribute its data will be tie .
933	adds the given association to an array of associations for the given attribut .
934	stores all association data on the object at the given attribute .
935	converts @source to an ingest for .
936	sets up translation state instance to hold various attributes that need to be passed around .
937	mounts an application in the router as a sub application in the url space .
938	include? will evaluate @tp .
939	to initialize the logger you create a new object .
940	push a named path and optional glob onto the list of paths associated with < name > @param [ symbol ] name the name to associate with the given path and glob @param [ string .
941	provides the directories or raw paths that are associated with a given name .
942	provides the list of paths ( directories ) and the associated globs for a given name .
943	provides an expanded .
944	provides an expanded .
945	builds a single association with the given dat .
946	to improve performance .
947	todo value should defined by user? either is string or reg .
948	returns zero based index of cluster which a value belongs to value must be in data arra .
949	returns inclusive interval limit .
950	get bounds array for n number of classe .
951	compute the matrices required for jenks breaks .
952	fetchs a movie with a given title set tomatoes to true if you want to get the rotten tomatoes ranking set plot to full if you want to have the full .
953	fetches a movie by imdb id set tomatoes to true if you want to get the rotten tomatoes ranking set plot to full if you want to have the full .
954	create a hash of configuration options and their values .
955	create a user from the options @param [ hash ] options @option options [ string ] email the new user s email address @option options [ string ] password the new user s password @option options [ string ] password confirmation the new user s password confirmation string @return [ g5authenticationclientuser ] .
956	update an existing user @param [ hash ] options @option options [ string ] email the new user s email address @option options [ string ] password the new user s password @option options [ string ] password confirmation the new user s password confirmation string @return [ g5authenticationclientuser ] .
957	find a user by email @param [ string ] email address @return [ g5authenticationclientuser ] .
958	return the url for signing out of the auth server .
959	return all users from the remote service @return [ array < g5authenticationclientuser > ] .
960	return all user roles from the remote service @return [ array < g5authenticationclientrole > ] .
961	create one or more new bookmark drops .
962	change the name of the drop .
963	modify a drop with a private url to have a public url or vice versa .
964	sets the attributes for object .
965	check if a file system directory exists and has the correct access .
966	private sets the environment ( rack env ) based on some env variables .
967	loads an environment specific config if available .
968	dsl routes are located in the api folde .
969	create a new filter to run a status check .
970	create a new handler .
971	add a status check to the handler .
972	lookup a status check filter from the name and argument .
973	output the plain text response from calling all the filters .
974	check if a host is reachable and accepting connections on a specified port .
975	self responds to bootstrap admin config methods via method missing ! .
976	check if all the memcached servers in a cluster are responding .
977	sets up an around filter to assign the controller s < tt > current user < / tt > to the given model names that are already set as instance variables in a prior < tt > before filter < / tt > .
978	enables auditing of all changes to an activerecord model .
979	opens the first device with a given vendor and product ids .
980	opens the first device with a given vendor and product ids .
981	opens the index - th device with a given vendor and product ids .
982	sets the chip baud rate .
983	set ( rs232 ) line characteristics .
984	set ( rs232 ) line characteristics .
985	gets write buffer chunk size .
986	gets read buffer chunk size .
987	reads data in chunks from the chip .
988	directly read pin state .
989	returns a new gmarker at the centroid of the geometry .
990	returns a new gpolyline .
991	returns a new gpolygon .
992	spits the geometry out into wkt .
993	spits out a bounding box the way flickr likes it .
994	spits out a hash containing the cardinal points that describe the geometry s bbox .
995	returns the point s coordinates as an array in the following format [ x .
996	build some xmlmarkup for kml .
997	build some xmlmarkup for georss .
998	returns a hash suitable for converting to json .
999	public will output any given address for the country defined in the format .
1000	criteria is of form [ [ users .
1001	returns a new marker at the centroid of the geometry .
1002	returns a new polyline .
1003	returns a ruby array of polygons for each geometry in the collection .
1004	behaves the same as to g polygon api3 with the single option set .
1005	build some xmlmarkup for kml .
1006	build some xmlmarkup for georss gml .
1007	returns a hash suitable for converting to json .
1008	special process of prices because of locales and different decimal separator characters .
1009	public allows fields on a class to be composed / decomposed to pinpointaddresses .
1010	match? was added in ruby 2 .
1011	build some xmlmarkup for xml .
1012	returns a hash suitable for converting to json .
1013	options * interior rings - whether to include any interior rings in the output .
1014	dumps points similarly to the postgis st dumppoints function .
1015	limited to 64 character .
1016	public creates a url which can be used to locate the mapable on a map using one of the supported services * google maps * yahoo maps * mapquest options - a hash of options which will apply to the map url via - a symbol representing the service to use to create the map url .
1017	send the request to url and return the json response @return [ hash ] json response of the exchange rates " d " = > [ " type " = > " linkdev .
1018	validate ipv4 using the standard " ipaddr " ruby module .
1019	validate that the given string value describes a well - formed ipv6 network address using the standard " ipaddr " ruby module .
1020	create an internal model with a reference to a public model .
1021	whether the key doesnt need to be lazily loaded .
1022	delete an attribute @param key name [ symbol ] the name of the key @return [ void ] .
1023	verify that all the keys marked as required are present .
1024	load the key and apply transformations to it .
1025	load the key and apply transformations to it .
1026	apply a transformation to a value .
1027	send the request to the url and retrun raw data of the response @return [ array < array > ] containing image url ( currency ) and exchange rates [ [ " / media / 246206 / usd .
1028	extract the currencies from the image components src attribute @return [ array < string > ] containing the url to image of the currenc .
1029	extract the text descriping the exchange rates from content nodes @return [ array < array > ] text description for buy / sell rate .
1030	@ ! method string ( name .
1031	add a keymetadata to the store .
1032	send the request to the url and retrun raw data of the response @return [ enumeratorlazy ] with the table row in html that evaluates to [ [ " " .
1033	validate all the constraints listed in +options+ to the given +value+ .
1034	call +validate type+ with the given +object+ .
1035	send the request to the url and retrun raw data of the response @return [ enumeratorlazy ] with the table row in html that evaluates to [ [ " qar " .
1036	render a partial .
1037	set the given +schema+ for the given property +name+ .
1038	send the request to the url and retrun raw data of the response @return [ array < ogaxmlattribute > ] [ attribute ( name " usdbbuy " value " 17 .
1039	shortcut to say a schema +key+ must be equal to a given +value+ .
1040	create an okaytemplates object .
1041	perform a virtual dispatch on a single object .
1042	overloaded methods ( see schema .
1043	whether arg is holiday @param arg [ .
1044	automatically called in after save .
1045	turns trailing command line arguments into an array for an arrayed valu .
1046	returns option converted to an array .
1047	returns option converted to a hash .
1048	parse options from argument lis .
1049	load configuration from fil .
1050	pass message as string like " header " .
1051	returns top keywords from input string .
1052	extracts processor name from given class instance .
1053	generate a temp filenam .
1054	xml files shouldn t contain low ascii control chars .
1055	creates a new extractor .
1056	iterate over all the products in an onix fil .
1057	retrieve the current titl .
1058	set a new contributor to this product str should be the contributors name inverted ( healy .
1059	return an array of bic subjects for this title could be version 1 or version 2 .
1060	set a new sales restriction typ .
1061	retrieve the number on orde .
1062	retrieve the discount code that describes the rrp in this fil .
1063	set the discount code that describes the rrp in this fil .
1064	add a new subject to this product str should be the subject code type should be the code for the subject scheme you re using .
1065	set the value of a particular i .
1066	set the value of a particular measuremen .
1067	set the value of a particular i .
1068	retrieve the value of a particular pric .
1069	set the value of a particular pric .
1070	set the value of a particular i .
1071	set the value of a particular other text valu .
1072	set the value of a particular websit .
1073	adds a friend to an instance s friend s list @param [ object ] new friend a popular model that the instance is not already friends with @example user = user .
1074	adds a friend to an instance s friend s list similar to .
1075	removes a friend from an instance s friend s list @param [ object ] friend a popular model in this instance s friends list @example user = user .
1076	to be used as an around filte .
1077	+method text+ is in the form of " ago ( activesupporttimewithzone ) " .
1078	+entries+ is an array of hashes .
1079	primarily for removing leading whitespace in < pre > tag .
1080	collects non empty directories and names the metric by the folder name parent? or dirname? or basename .
1081	def escape ( str ) cgi .
1082	set given pixel identified by +index+ to +color+ see +set+ for a method that takes individual +r+ .
1083	set given pixel identified by +index+ to +r+ .
1084	return +color+ of led located at given index indexed from 0 upto < tt > .
1085	returns the given real path s location relative to the server root .
1086	print the given server path .
1087	reports whether this pattern could match children of < tt > path < / tt > .
1088	returns the immediate child of a path that would be matched if this filepattern was applied .
1089	if this pattern represents an exact path .
1090	returns < tt > true+ if this pattern matches the path .
1091	set given pixel identified by +x+ .
1092	set given pixel identified by +x+ .
1093	set rotation of the unicorn hat to +val+ permissible values for rotation are [ 0 .
1094	pushes all pixels from buffer to the lower level ( physical device ) this is internally used when changing rotation but it can be useful when you set several pixels to the same color instance and then manipulate those pixels color all at once .
1095	verify supplied coords +x+ and +y+ raises argumenterror if the supplied coords are invalid ( doesnt address configured pixel ) .
1096	@param [ hash ] properties the object s properties returns the value of a property .
1097	validates the object against the schema .
1098	returns the object as a hash .
1099	export this map to the given filename in the appropriate format .
1100	export this map as a string in the appropriate format .
1101	dumps scraped objects to disk .
1102	saves scraped objects to a database .
1103	dumps an scraped object to disk .
1104	loads scraped objects from disk .
1105	loads a scraped object from its properties .
1106	removes all duplicate objects and re - assigns any foreign keys .
1107	for each object .
1108	if any objects have unresolved foreign objects .
1109	builds a dependency graph .
1110	resolves an object s foreign keys from object ids to database ids .
1111	resolves an object s foreign objects to database ids .
1112	todo replace this with clip .
1113	@return [ array < rpmdependency > ] dependencies for +klass+ @example dependencies ( rpmprovide .
1114	access a header entry @param [ number ] tag tag to return @return [ ] value of the entry @example pkg = > .
1115	todo signature @return [ version ] version for this packag .
1116	adds a list of artifacts to the danger comment @return [ void ] .
1117	add a delete operation to the transaction @param [ string .
1118	performs the transaction .
1119	allows finding by type or a specfied hash of parameters @example find all objects that have the type ground objects .
1120	fibonacci linear feedback shift register with x ^ 25 + x ^ 24 + x ^ 23 + x ^ 22 + 1 pol .
1121	rubocopdisable metrics / methodlengt .
1122	rubocopenable metrics / methodlength rubocopdisable metrics / methodlengt .
1123	rubocopdisable metrics / abcsize rubocopdisable metrics / methodlength split the chain on this item and insert the latter part into the chain with head as its first item .
1124	rubocopenable metrics / abcsize rubocopenable metrics / methodlength rubocopdisable metrics / methodlength tod .
1125	creates a new instance of the command and sets up optionparser .
1126	returns the value of a given option .
1127	delgate api call to reques .
1128	check if this object is in a chain .
1129	iterates over each item before this .
1130	iterates over each item after this .
1131	rubocopdisable metrics / abcsize rubocopdisable metrics / cyclomaticcomplexity rubocopdisable metrics / methodlength rubocopdisable metrics / perceivedcomplexity take n items and put them into a sorted array .
1132	wether or not this payment result can be considered valid .
1133	runs one ore more commands remotely via ss .
1134	find out which schedule to ru .
1135	sets defaults for the configuration .
1136	creates a new instance of the option class .
1137	insert an item at the end of the list .
1138	insert an item at the beginning of the list .
1139	shift the first item off the list .
1140	overrides the default inspect method to provide a more useful view of the list .
1141	include thenotificationlocalizederrors @post .
1142	reset all configuration options to default .
1143	this method simplify results structure .
1144	retrieves the stats for the pet with the specified id .
1145	retrieves the realm status for the region .
1146	convert latitude .
1147	convert tile coordinates pair to latitude .
1148	get tile with given latitude .
1149	get tile with given x .
1150	iterates over each item in the list if a block is not given an enumerator is returned .
1151	iterates over each item in the list in reverse order .
1152	access the first n item ( s ) in the list .
1153	access the first n item ( s ) in the list .
1154	register an extension with a target class when given a block .
1155	remove extensions for a given class or list of classe .
1156	initalize a request * +attributes+ +hash+ make the request .
1157	inversion of control method required by the auditorap .
1158	find objects that match given query .
1159	creates a migration builder for the given database .
1160	generates the change block of the migration .
1161	generates any create table statements for new tables .
1162	generates any alter table statements for current tables .
1163	generates an individual alter table statement .
1164	generates an individual create table statement .
1165	grab object from @servers hash or check if it exists @param method name the method name called @param arguments the arguments to the call @param block an optional block for the cal .
1166	@param [ array ] issues an array of issue numbers @param [ array ] contributors an array of contributors github ids @return [ string ] a list of link definition .
1167	creates a watir browser session and returns the browser object @example saucelabs .
1168	creates a selenium driver session and returns the driver object @example saucelabs .
1169	returns the target and options including the capabilities @param [ string ] the browser string passed into the method @param [ hash ] the optional hash to specify browser options @return [ symbol .
1170	extracts browser .
1171	extracts browser from browser string @example extract browser ( safari5 | linux | iphone ) will extract browser = safari @param [ string ] the browser string passed into the method @return [ string ] the browser valu .
1172	extracts version from browser string @example extract version ( safari5 | linux | iphone ) will extract browser = safari @param [ string ] the browser string passed into the method @return [ string ] the version valu .
1173	extracts platform from browser string @example extract platform ( safari5 | linux | iphone ) will extract browser = safari @param [ string ] the browser string passed into the method @return [ string ] the platform valu .
1174	extracts device from browser string @example extract device ( safari5 | linux | iphone ) will extract browser = safari @param [ string ] the browser string passed into the method @return [ string ] the device valu .
1175	todo smarter task filterin .
1176	extract the most likely looking number from the string .
1177	extract the most likely looking numbers from the string .
1178	given any string .
1179	rebuilds the left & rights if unset or invalid .
1180	warning very expensive ! do not use unless you know what you are doing .
1181	warning very expensive ! do not use unless you know what you are doing .
1182	wrapper for each root valid? that can deal with scope warning very expensive ! do not use unless you know what you are doing .
1183	returns a faradayconnection objec .
1184	create a hash of options and their value .
1185	reset all configuration options to default .
1186	on creation .
1187	update cached level attribute for self and descendant .
1188	prunes a branch off of the tree .
1189	configuration options are * +parent field+ - field name to use for keeping the parent id ( default parent id ) * +left field+ - field name for left boundary data .
1190	adds word and its category to stats .
1191	generates a wrapper around form for with builder set to formulaformbuilder .
1192	generates a wrapper around fields for with builder set to formulaformbuilder .
1193	generate a form button .
1194	basic container generator for use with blocks .
1195	generate a suitable form association for a given method by performing introspection on the type .
1196	introspection on the column to determine how to render a method .
1197	introspection on an association to determine if a method is a file .
1198	create an array from a string .
1199	type checks a given object .
1200	( see type .
1201	toggle the status of an outlet example > > netbooter .
1202	follow apple s recommendation not to encode missing values .
1203	specifies how to sort .
1204	performs a " like " query .
1205	performs a set - inclusion test .
1206	performs strict equality comparison .
1207	relation support task .
1208	pushes an object onto an association .
1209	< tt > to formotion < / tt > maps a motionmodel into a hash suitable for creating a formotion form .
1210	< tt > new to formotion < / tt > maps a motionmodel into a hash in a user - definable manner .
1211	< tt > from formotion < / tt > takes the information rendered from a formotion form and stuffs it back into a motionmodel .
1212	def count ( dataset 0 .
1213	array of messages for a given field .
1214	validates an arbitrary string against a specific field s validators .
1215	validates that something has been endntered in a field .
1216	validates that the length is in a given range of characters .
1217	validates contents of field against a given regexp .
1218	set created at and updated at field .
1219	destroys the current object .
1220	associate the owner but without rebuilding the inverse assignmen .
1221	determine if the belongs to relationship is synchronized .
1222	todo clean up existing reference .
1223	authenticates using some credentials .
1224	creates a stellar client scoped to an assignment .
1225	client for accessing public information .
1226	fetches a page from the stellar site .
1227	+field at+ retrieves the field at a given index .
1228	+bind+ fetches all mapped fields from any subview of the current +uiview+ and transfers the contents to the corresponding fields of the model specified by the +model+ method .
1229	keyboard show / hide handlers do this * reset the table insets so that the uitableview knows how large its real visible area .
1230	undo all the rejiggering when the keyboard slides down .
1231	convenient method for status only response .
1232	initialisation of the middleware @param [ rackapp ] app rack app to stack middleware into ( passed automatically ) @param [ symbol ] modify a flag which tells what to modify with this middleware ( response or env ) anything other than response would mean env ( default nil ) @param [ integer ] percent fraction of the requests that should be affected by this middleware ( default 0 ) @param [ proc ] block the block of code with business logic which modifies response / env implementation of the middleware automatically called by rack @param [ hash ] env rack app env automatically passed to the middleware @return [ rackresponse ] response after either calling original app and modifying response or calling the app with modified environment and returning its respons .
1233	creates a new rackmuster middleware instance @param app [ string ] rack application @param strategy [ musterstrategiesrack ] muster query string parsing strategy to run @param options [ hash ] options to pass to the specified strategy @example middleware = musterrack .
1234	returns the raw data with all of the filters applied if no filters were added .
1235	filters and returns the raw data values for the specifid key and options @param key [ string .
1236	rubocopdisable lint / nestedmethoddefinition .
1237	before generating syntax .
1238	before generating syntax .
1239	make sure that integer gets specified as integer and not integer ( 11 ) .
1240	- native sql to type - active? - reconnect ! - disconnect ! - exec query - exec insert - exec delete - exec update + do exec - execut .
1241	- select rows - insert sql = extract schema and table ( extra .
1242	- begin db transaction - commit db transaction - rollback db transaction - begin isolated db transaction - supports transaction isolation? - write large object - pk and sequence for - primary key - primary key .
1243	- to sql connectionadaptersabstractschemastatements - table exists? - index exists? - column .
1244	+ change column this only works in a very limited fashion .
1245	helper methods for values and their labels .
1246	update the ttl ==== attributes * +new ttl < i > fixnum < / i > + - the new expire amount .
1247	hack to comply with the api spec .
1248	get policy version s rule .
1249	create a policy versio .
1250	activate a policy versio .
1251	update policy version .
1252	all the path rules from one file will be added under same match .
1253	all the path rules from one file will be added under same match .
1254	list cloudlet origins @type this is origin type .
1255	newunit name of the new unit to be added newrate reason between new unit and base unit ( example kilometer it s 1000x greater than meter .
1256	wrap the string of into num lines lines .
1257	consuming yahoo finances api and transform in hash for rub .
1258	new metodo for convert currenc .
1259	surrogate ajax reques .
1260	execute javascript within the context of a view .
1261	calculate the largest pointsize for text that will be in a width x height box .
1262	subscrible of metod convert in adapte .
1263	for esearch .
1264	ncbi does not allow more than 3 requests per second .
1265	opens connections .
1266	subscribe to a queue which will invoke the supplied block when a message is received .
1267	creates a schema attribute sibling of any formparameter attribute found .
1268	creates json schema - as a string - based on obj [ body ] [ application / x - www - form - urlencoded ] [ formparameters ] .
1269	create an amqpconnection with auto - reconnect and error handling .
1270	open an amqpchannel with auto - recovery and error handling .
1271	declare an exchange on the specified channel .
1272	declare and bind a queue to the specified exchange via the supplied routing key .
1273	close all channels and then disconnect all the connections .
1274	parses a string containing multiple paths .
1275	returns array of weekday selected e .
1276	returns comma separated and capitalized in sun - sat order e .
1277	7 bits encoded in decimal number 0th bit = sunday .
1278	publish a payload to the specified exchange / key pair .
1279	do something once within this tracked period will only consider job done when opts [ job done ] is true action name = > name to track job done when = > block to call .
1280	method option ruleset .
1281	< mask id= " pill - base " x= " 0 " y= " 0 " width= " 60 " height= " 20 " style= " fill .
1282	adds a schema hash attribute to bodies with schema .
1283	todo this is very inefficient .
1284	add a weekdays attribute by default it will use attribute bit array as db field .
1285	returns the audit list for the specified column @param [ symbol ] param symbol to query @return [ array of change objects ] .
1286	chooses a set of dates from a date range .
1287	creates a new analyzer analyzes the file and returns the resul .
1288	sets the galena example defaults attributes to new objects .
1289	creates a new scriptlist .
1290	retrieve the methods including comments if availabl .
1291	creates a new client for communicating with turntable .
1292	closes the current connection to turntable if one was previously opened .
1293	runs the given api command .
1294	registers a handler to invoke when an event occurs in turntable .
1295	gets the user with the given dj name .
1296	get all avatars availble on turntable .
1297	finds songs that match the given query .
1298	triggers callback handlers for the given turntable command .
1299	resets the keepalive timer to run at the given interval .
1300	callback when session authentication is missing from the connection .
1301	callback when the session has ended .
1302	runs a given block and retries that block after a certain period of time if any of the specified exceptions are raised .
1303	pauses the current fiber until it is resumed with response data .
1304	build page tree from specified root depth .
1305	build page breadcrumbs from specified root depth .
1306	returns whether each of the given attribute values either equals the respective other attribute value or one of the values is nil or not specified .
1307	parses raw xml feed and creates feed and article objects to be rendered .
1308	takes raw xml and parses it into a feedjirafeed object @return [ feedjirafeed ] .
1309	creates new makofeed object from the parsed feedjirafeed object @param [ feedjirafeed ] @return [ makofeed ] .
1310	creates new makoarticle objects from the parsed feedjirafeed object if the source article was published within the last day .
1311	some feeds use summary for the full article body .
1312	looks up a scope name from the registered recognizers and then from the converters .
1313	call render meta tag content description if method exists controller protected def render meta tag content description ( meta tag ) if ! params [ page ] .
1314	gets the playlist represented by the given attributes .
1315	set the views center coordinates with a given zoom level * * args * - +center coordinate+ -> a mkmappoint - +zoom level+ -> zoom level as int - +animated+ -> boo .
1316	set the views latitude and longitude with a given zoom level * * args * - +latitude+ -> float - +longitude+ -> float - +zoom level+ -> zoom level as int - +animated+ -> boo .
1317	get the current zoom level * * returns * - zoom level as a floa .
1318	sets the from location .
1319	sets the to location .
1320	create a clioptions object @example using clioptions opts = clioptions .
1321	returns the absolute path of the output directory specified by the cli .
1322	solves apr [ a ( 1 + a ) ^ n ] / [ ( 1 + a ) ^ n - 1 ] - p / c = 0 where a = apr / 1200 .
1323	create a hash of options and their value .
1324	returns the match history of a summoner @param [ summoner .
1325	disables an enabled use .
1326	enables a disabled use .
1327	unlocks a user @return true on success ( or if user is already unlocked ) @return false when the account is disabled ( unlocking not permitted ) .
1328	returns a transfereventparameters which serves as a proxy for saving this specimenposition .
1329	generates ruby code from the input .
1330	reset configuration options to their default .
1331	merge files based on common header columns call - seq sycsvpromerger .
1332	create a filter for the columns that match the header filte .
1333	returns true if this consenttierstatus consenttier is nil .
1334	augments +jinxmigratable .
1335	augments +jinxmigratable .
1336	augments +jinxmigratable .
1337	augments +jinxmigratable .
1338	augments +jinxmigratable .
1339	================= = guard methods = ================= call once when guard start .
1340	processes the filter and returns the values that respect the filte .
1341	adds the given storable to this container .
1342	finds the container with the given name .
1343	overrides container .
1344	adds the given storable to a container within this storagecontainer s hierarchy .
1345	creates a subcontainer which holds the given storable .
1346	returns a storagetype array of descendant storagetypes which can hold the given storable .
1347	attempts to set attributes on the object only if they ve been explicitly defined by the class .
1348	determines whether this avatar is available to the current user .
1349	updates the current user s avatar to this one .
1350	@quirk catissue in catissue 1 .
1351	clears the migration protocol cpr and scg references .
1352	call to get champions @param optional [ hash ] optional arguments region = > replaces default region .
1353	save meta tags records into one has .
1354	creates new mapper call - seq sycsvpromapper .
1355	initializes the mappings .
1356	initialize the col filter that contains columns to be considered for mapping .
1357	filters +carubypropertied .
1358	declares an annotation scoped by this class .
1359	loads this class s annotations .
1360	builds a new annotation module for the given module name and options .
1361	makes an attribute whose name is the demodulized underscored given module name .
1362	used by the add viewable lin .
1363	used by [ data - js - cms - sortable ] element to modify the viewable position within the lis .
1364	returns @header cols without pattern .
1365	@api private uses the configured chat host or attempts to look it up based on the room id @return [ string ] @raise [ turntablererror ] if the host lookup fail .
1366	loads the attributes for this room .
1367	sets the current attributes for this room .
1368	enters the current room .
1369	gets the user represented by the given attributes .
1370	sets the sticker placements for each d .
1371	triggers the heart animation for the song .
1372	adds the song to one of the user s playlists .
1373	move a song from one location in the playlist to another .
1374	adds the given subtype to the list of subtypes which this storagetype can hold .
1375	copies the other child types into this container s child types .
1376	generate ruby code for steam languag .
1377	load the grammars @return [ bool ] returns true unless an exception is throw .
1378	an array of hashes containing the imports found in the parsed steam language file .
1379	returns an array of classes parsed from the io stream .
1380	returns an array of eneums parsed from the io stream .
1381	pull events until the start of an element of tag name +name+ is reached .
1382	pull all text nodes until the next +end element+ event .
1383	todo this shouldn t necessarily return a currency representation .
1384	returns comparator .
1385	returns the i18n translation for comparison .
1386	returns the i18n translation for comparison .
1387	interpolate variables like +$user .
1388	processes the filter and returns the filtered column .
1389	display a log message .
1390	sets the role id to the given value .
1391	return feed of current page infomation .
1392	internal builds the absolute path for the factories location .
1393	internal if the path is a directory .
1394	internal returns the root path of the project todo extract rails and sinatra integration .
1395	creates a sorter and takes as options infile .
1396	== parameters [ loan amount ] loan amount .
1397	creates a new controlledvaluefinder for the given attribute .
1398	creates a new box of type galenaseed .
1399	returns the .
1400	a hash of the default configuration option .
1401	construct a base config using the following order of precedence * environment variables * yaml file * default .
1402	appends the new subscriptions to the subscription list and writes the results out to the file .
1403	returns the rendered string for the correct file type .
1404	append feeds to current subscription list and return xml document @return [ string ] .
1405	creates a new calculator .
1406	executes the calculator and writes the result to the outfile .
1407	given a csv file with a ; b ; c code is in the form of 1 * 2 .
1408	casts a string to a dat .
1409	recursively determine group memberships of a grou .
1410	add a user to the grou .
1411	provides a hash of member users and groups rubocopdisable metrics / abcsize .
1412	initializes a new annotator for the given database .
1413	returns this person s name as a name structure .
1414	sets this person s name to the name string or name object .
1415	returns the cv with the given public id or alias and value .
1416	creates a new controlled value record in the database from the given controlledvalue cv .
1417	deletes the given controlledvalue record in the database .
1418	returns a new controlledvalue with attributes set by the given attribute = > value hash .
1419	internal sets up the integration with the framework being used .
1420	internal attaches journeyman to the rspec context .
1421	yield with the hash temporary merged into the context variables .
1422	yield with a temporary host list @macro quietabl .
1423	yield with a temporary username override @macro quietabl .
1424	find and execute a task .
1425	execute a shell command on each host @macro onable @macro asable @macro quietable @macro onceabl .
1426	copy a file or readable to the host filesystems .
1427	reads a remote file from each host .
1428	writes a string to a file on the host filesystems .
1429	renders and installs files from erb templates .
1430	ping each host by trying to connect to port 22 @macro onable @macro quietabl .
1431	execute a block only once per host .
1432	get a summary of stats for a summoner @param [ summoner .
1433	get a summary of stats for a summoner @param [ summoner .
1434	logs the user in using the associated e - mail address / password .
1435	updates this user s profile information .
1436	loads the list of users that are connected to the current user through a social network like facebook or twitter .
1437	loads the list of users that the current user is a fan of .
1438	loads the list of users that are a fan of the current user .
1439	gets the stickers that have been purchased by this user .
1440	gets the users that have been blocked by this user .
1441	updates the user s profile informatio .
1442	updates the laptop currently being use .
1443	sets the user s current statu .
1444	public defines a new factory for journeyman .
1445	prepares selectors and weights storage analyze input and add appropriate part determines if input is word .
1446	analyze word adds weights for first .
1447	generate word @return [ string ] .
1448	analyze sentence splits sentence with whitespace delimiter .
1449	generate sentence @return [ string ] .
1450	analyze passage splits passage with sentence - ending punctuation .
1451	add weight used for adding weights for counters .
1452	generate weighted - random value type is count .
1453	builds a new handler bound to the given event .
1454	determines whether the conditions configured for this handler match the event dat .
1455	moves this storable from its current position .
1456	@return [ boolean ] true if this container or a subcontainer in the hierarchy can hold the given storable @see .
1457	moves the given storable from its current position .
1458	copies this container s containertype capacity .
1459	loads the user s current turntable preferences .
1460	sets this location to the next slot in this location s .
1461	creates a new extractor executes the extracto .
1462	call to receive all teams for a summoner @param [ summoner .
1463	get the document type from the yaml file next to the document .
1464	creates a new allocator .
1465	find the span between two vectors * * args * - +spanner+ -> vector * * returns * - vecto .
1466	gets list of feed urls .
1467	prints configuration file .
1468	provides build time logging information and writes it to stdout .
1469	a spread sheet builder is doing arithmetic operations and can be called like this spreadsheetbuilder .
1470	executes the operation and writes the result to the outfile .
1471	creates the spread sheet operands for the arithmetic operatio .
1472	builds a new connection for sending / receiving data via the given url .
1473	publishes the given params to the underlying web socket .
1474	publishes the given params to the web socke .
1475	callback when a message has been received from the remote server on the open socket .
1476	override default +jinxresource .
1477	adds an empty capacity and default dimension labels .
1478	attempt to connect to port 22 on the host .
1479	copy files or directories to the host .
1480	write a string to a host file .
1481	execute a command on the host and return its output .
1482	erstellt a - segment ( header ) der dtaus - datei -- aufbau des segments nr .
1483	protected convert keys to a more rubyesque style ( underscroce .
1484	protected unlike its parent mash .
1485	returns the tissue site which adds the nos suffix to a value without one or removes nos from a value with the suffix .
1486	returns the tissue site which adds the nos suffix to a value without one or removes nos from a value with the suffix .
1487	opts added to cache key for will be suffixed to the rest of the cache key .
1488	the rails helper method cache ( name .
1489	returns true if storable is a specimen and supported by this specimenarraytype .
1490	process the aggregation of the key values .
1491	writes the aggration result .
1492	initializes the sum row title an positions as well as the sum column title and positio .
1493	defines casting rules @example attributes do string first name string last name integer age .
1494	resolve a set of dependencies +dep hashes+ from repositories +repos+ .
1495	board shouldn t care about game rule .
1496	parses opml .
1497	internal returns a hash with a link to the parent of the collection .
1498	parse given arguments @param [ array ] arg .
1499	clone of an existing bug example .
1500	create a new transpose sycsvprotranspose ( infile " infile .
1501	provides league information of a summoner @param [ summoner .
1502	get all entries for the given summoner @param [ summoner .
1503	sets the current user s stickers .
1504	from an array of supplied uris .
1505	make requests for each uri passed in and return an array of hashes with either just the uri ( in the case that the uri passed in was already a feed uri ) .
1506	sets the collection status for this scg .
1507	merges the other object into this specimencollectiongroup .
1508	adds defaults as follows * the default collection event is the first event in the protocol registered with this scg .
1509	makes a consent status for each registration consent .
1510	returns the first event in the protocol registered with this scg .
1511	returns the collection protocol coordinator .
1512	internal constructs the links section of the response .
1513	overrides +carubymergable .
1514	withdraws consent for this specimen as follows * if a consent tier is provided .
1515	validates that the following conditions hold * a top - level specimen does not have a sgc * the available quantity exceeds the initial quantity * the availability flag is set and the available quantity is zero @quirk catissue bug .
1516	adds this specimen s defaults .
1517	the default cep user is .
1518	delegate to abstractspecimen .
1519	decrements this parent s available quantity by the given child s initial quantity .
1520	calling markdownize ! attribute ( where attribute can be any database attribute with type text ) will treat this field as markdown .
1521	internal builds a new instance .
1522	internal create a new instance .
1523	internal merges the default attributes to the specified attributes hash .
1524	rubocopdisable style / predicatenam .
1525	@quirk catissue the database connection properties cannot be inferred from the catissue +hibernateutil+ class .
1526	returns whether the given specimens are compatible .
1527	this method patches up fetched sources to correct the following anomaly @quirk cacore fetched references are not reconciled within an existing query result .
1528	@quirk catissue bug .
1529	updates the given dependent .
1530	updates the given user address .
1531	returns whether operation is the second update described in .
1532	adds the specimen position to its save template .
1533	overrides +carubydatabasewriter .
1534	ensures that a primary annotation hook exists .
1535	removes the unsaved collectibleeventparameters from the given template to work around the catissue bug described in .
1536	the annotation proxy is not copied because the attribute redirects to the hook rather than the proxy .
1537	augment +carubydatabasewriter .
1538	overrides +carubydatabase .
1539	creates the given specimen by working around the following bug @quirk catissue bug .
1540	augments +carubydatabasepersistifier .
1541	@quirk catissue bug .
1542	queries on the given object attribute using the annotationintegrationservice .
1543	queries on the given proxy using the annotationintegrationservice .
1544	@quirk cacore override +carubydatabasereader .
1545	write table to outfile .
1546	creates a table row based on the column pattern examples of column patterns * value+n1 adds content of column 1 to value column * value+n1 .
1547	casts a string to an integer or float depending whether the value has a decimal poin .
1548	evaluate a formula example invokation evaluate ( " n1+n2 " .
1549	initializes sum row pos .
1550	adds a value in the specified column to the sum ro .
1551	creates the sum row when the file has been completely processe .
1552	used to wrap results from various enumerable methods that are defined to return an arra .
1553	add a new node .
1554	recurse through node edge .
1555	@api private creates a new room with the given name and configuration .
1556	gets the list of available rooms .
1557	gets the rooms where the current user s friends are currently listening .
1558	finds rooms that match the given query string .
1559	internal constructs the links section of the response .
1560	loads the attributes for this playlist .
1561	updates this playlist s information .
1562	whether this is the currently active playlist @return [ boolean ] @raise [ turntablererror ] if the command fails @example playlist .
1563	creates a script file if it doesnt exist and adds an empty method with the provided method name .
1564	initializes the attribute from given arguments and returns new immutable collection with the attribute @param ( see attribute .
1565	adds specimens to this protocol .
1566	returns the default protocol site .
1567	sets the defaults as follows * the start date is set to now .
1568	returns a summoner object @param name or id [ integer .
1569	returns an array of summoner objects @param names or ids [ array < integer .
1570	returns the names for the ids @param ids [ array < numeric > ] ids @param optional [ hash < symbol .
1571	returns the runebook of a summoner @param summoner [ summoner .
1572	returns the runebook for multiple summoners @param summoners [ array < ( summoner .
1573	initialize with the json config .
1574	true if +fileentry+ isn t included into +ignore entries+ array params +file entry name+ name of the entry +file entry type+ type of the entry +ignore entries+ array of entries for which should be excluded ( false returned ) .
1575	creates +fileentry+ for file or array of entries for directory and subdirectories params +directory or file+ path to directory or file +entry path+ path with which the entry should be put into zi .
1576	collects all files from directory recursively params +dir+ start directory +entry path+ path with which file should be placed into zip +replace path+ part of path which is being replaced by +entry path .
1577	creates zip file in memory from passed +fileentry+ array .
1578	creates from json array of entries params +entries+ input entries to compress +ignore entries+ entries which should be ignore .
1579	augments +jinxresource .
1580	collects and receives this collectible with the given options .
1581	creates a new filter creates the filters based on the given pattern .
1582	checks whether the values match the boolean filte .
1583	yields the column value and whether the filter matches the colum .
1584	creates a filter based on the provided rows and columns select criteri .
1585	adds a single value to the filte .
1586	adds a single value and an associated type to the filte .
1587	adds a range to the filte .
1588	adds a range and the associated types to the filte .
1589	adds a comparisson filte .
1590	adds a date range filte .
1591	adds a number range filte .
1592	creates a new annotation object in the catissue database .
1593	joins items in an array together in a grammatically correct manner .
1594	format a string for awesome print display .
1595	ensure meta always will be saved as json instead of json strin .
1596	creates a new collector execute the collecto .
1597	initializes the collectio .
1598	creates a new unique sycsvprounique .
1599	initialize with default stdout output and verbose false gets the logging objec .
1600	experimental require aether method for use in irb or just for convenience .
1601	nodoc returns a presenter for a comparator for +m+ and +n+ .
1602	creates a join which can be invoked as follows call - seq sycsvprojoin .
1603	creates a lookup table from the source file values .
1604	initializes the column positions where the source file columns have to be inserted .
1605	initializes joiners based on joins .
1606	sets the defaults if necessary .
1607	returns a subset of the spread sheet and returns a new spread sheet with the result and the corresponding row and column label .
1608	collects the operation on each column and returns the result in an arra .
1609	renames the row and column labels sheet .
1610	writes spread sheet to a file separated with ; .
1611	prints the spread sheet in a matrix with column labels and row labels .
1612	creates rows from provided array or file .
1613	if rows are of different column size the rows are equalized in column size by filling missing columns with n .
1614	checks whether the rows are valid .
1615	checks whether all rows have the same column size .
1616	coerces a number or an array to a spread shee .
1617	conducts the calculation of this spread sheet with the provided value based on the operator .
1618	processes the counting on the in fil .
1619	writes the count result .
1620	initializes the sum row title an positions as well as the sum column titl .
1621	initialize the key columns and header .
1622	arrange heading in the original sequence regarding conditional column filter .
1623	todo simplify by adding a reference param on link to edit client - sid .
1624	wrapper for sasscengine .
1625	processes the filter on the given ro .
1626	gets the private conversation history with this user .
1627	gets the location of the user .
1628	boots the user for the specified reason .
1629	reports abuse by a user .
1630	public allows to ignore certain attributes .
1631	internal prepares the default arguments for the builder .
1632	internal splits static from dynamic arguments for runtime performance .
1633	internal infers a model class .
1634	sets the specimen type to the specified value .
1635	derives a new specimen from this specimen .
1636	returns the class from the given params hash .
1637	creates a derived specimen .
1638	returns characteristics to use for a derived specimen .
1639	set the maps region * * args * region = coordinateregion .
1640	creates an inserter and takes options infile .
1641	overrides +carubymergable .
1642	returns the collection site for which this participant has a mrn .
1643	returns the specimenrequirement in others which matches this specimenrequirement in the scope of an owner collectionprotocolevent .
1644	returns whether this specimenrequirement characteristics matches the other specimenrequirement characteristics on the tissue site and tissue side .
1645	returns the first scg cp coordinator .
1646	export translations to javascript .
1647	convert translations to json string and save file .
1648	initialize and return translation .
1649	loads the catissue classpath and connection properties .
1650	the default application properties file is determined as follows * + .
1651	parse the vatsim data file and store output as necessar .
1652	initialize the system by downloading status and vatsim data file .
1653	download a url to a file pat .
1654	return random vatsim data url from status fil .
1655	register the given method name supporting the given parameters .
1656	= > cache <= = > cache return of a functio .
1657	= > file i / o <= = > define json parse .
1658	= > define json write .
1659	= > check if a string is an existing file .
1660	= > return common elements of an arra .
1661	initialize a new eventlistener daemon instance @param [ hash ] options daemon options @option options [ integer ] error limit ( 10 ) maximum number of errors that are allowed to occur within error interval before the process terminates @option options [ integer ] error interval ( 3600 ) time interval .
1662	register the observer class watche .
1663	register an observer instance .
1664	unregister an observer instance .
1665	create or return the observer queue which listens for modelwatcher event .
1666	return hash of data to be serialized to json @option options [ boolean ] omit parameters when set .
1667	action is a string .
1668	action is a string .
1669	pass a string .
1670	resolves relative links to markdown files .
1671	call each of the exception handlers declared by .
1672	= > add an entitity to an existing alert polic .
1673	= > delete an entitity from an existing alert polic .
1674	= > get a server based on i .
1675	= > get a server based on nam .
1676	= > list the servers with a labe .
1677	set planned depairport / planned destairport latitude and longitud .
1678	create or attach to a queue on the specified exchange .
1679	initialize a new bunnyclient instance .
1680	find or create a named queue and bind it to the specified exchange @param [ string ] queue name name of the queue @param [ string ] exchange name name of the amqp exchange .
1681	subscribe to messages on the bunny queue .
1682	open a new .
1683	generate a timestamped pos .
1684	generate a non - timestamped draf .
1685	todo make this take a path instead? @param draftpath [ string ] path to the draft .
1686	0000002 thanks google for all of thi .
1687	had to convert these from c .
1688	fetches and returns the target lambda based on the given class .
1689	override functionality from cancan to allow objects to masquerade as other object .
1690	= > daemonization for periodic managemen .
1691	= > run the applicatio .
1692	check for a posts directory in current directory .
1693	get a layout as a string .
1694	print a usage message and exi .
1695	= > primary notification message controlle .
1696	= > os x cocoa message .
1697	analyses a string +string+ .
1698	generates a string +string+ .
1699	filters the project files keeping those that make use of spectro .
1700	init the current folder as an spectro project .
1701	parse the specs on the given file path and return those that have not been fulfilled or need to be updated .
1702	= > alerts <= = > manage alert .
1703	= > find matching alert ( name or id ) .
1704	= > servers <= = > servers with the oldest last reported at will be at the to .
1705	= > remove non - reporting server .
1706	= > find servers which should be excluded from managemen .
1707	= > find servers matching a label = > example find labeled ( [ roleapi .
1708	rubocopdisable linelength .
1709	rubocopenable linelengt .
1710	sends an sms validation request through the gatewa .
1711	begins a phone call to the user where they ll need to type their confirmation cod .
1712	compares user - provided code with the stored confirmation code .
1713	compares user - provided code with the stored confirmation code .
1714	sends one or more txt messages to the contactable record s mobile number ( if the number has been confirmed ) .
1715	alt - anything = > \ \ e * key * ( same as esc .
1716	validate data against provided forma .
1717	initiates a new session @see xftpvalidatorsetting .
1718	performs a search for geo - attributes .
1719	adjuster builders apply adjuster when passed condition .
1720	sequencial apply all adjusters .
1721	accept any parser when that resopond to parse method .
1722	return the class match by nam .
1723	it is assumed that every api call will not use an api key / email .
1724	make a lazy connection .
1725	creates a new safesleeper concurrency tool .
1726	put this thread to sleep and wait for it to be woken .
1727	calculate the desired time to wake up .
1728	display crud icons or links .
1729	display crud icons or links .
1730	create a link that is opaque to search engine spiders .
1731	wraps the given html in rails default style to highlight validation errors .
1732	use on index pages to create dropdown list of filtering criteria .
1733	returns a link to tag with sorting parameters that can be used with activerecord .
1734	create a set of tags for displaying a field label with inline help .
1735	wrapper of keyboard operation .
1736	standard open file dialo .
1737	todo save as file dialog helper try the operation up to specified timeout ( in seconds ) .
1738	creates a new reentrantmutex concurrency tool .
1739	return a structure describing the options .
1740	attr accessor name .
1741	add new path to the gitattributes fil .
1742	can be customized in your per - environment config like this config .
1743	deletes the file on disk if and only if no other instances of echouploadfile reference it .
1744	nodoc simple captcha is a very simplified captcha .
1745	takes an echouploadsfile .
1746	retrieves a named bucket * * args * - +name+ -> the name of the bucket to be retrieved * * returns * - the bucket matching the name if found .
1747	saves a bucket into the storage * * args * - +bucket+ -> the bucket to set .
1748	updates the key fields that need updating into the storage this is often cheaper for certain types of storage than using set ( ) * * args * - +bucket+ -> the bucket to update .
1749	retrieves a named bucket * * args * - +name+ -> the name of the bucket to be retrieved * * returns * - the bucket matching the name if found .
1750	used primarily to preallocate buckets that need an alternate configuration from the default so that they aren t automatically created with default configurations < tt > name < / tt > the name of the item to track < tt > config name < / tt > the name of the config to use as a template for creating the bucket the new bucket will be saved into the storage for this instance of ratelimite .
1751	returns < i > true < / i > if the item < tt > name < / tt > has enough credits .
1752	list parents .
1753	search all of the fields text and create an array of all found simplecembeddedimages .
1754	set this instance as the .
1755	extract text out of html or plain strings .
1756	build query attribute hash .
1757	get the websocket api uri @return [ string ] ur .
1758	parse the configuration fil .
1759	do additional sanity checking on a hook scrip .
1760	get all the host ids and fqdns and populate the host tabl .
1761	initialize an empty databas .
1762	update the database based on the foreman hoo .
1763	transform and read a list attribut .
1764	transform and read a hash attribut .
1765	transform and write a standard attribute valu .
1766	transform and write a list valu .
1767	transform and write a hash attribut .
1768	update fields without hitting the callback .
1769	get / api / lol / region / v2 .
1770	internal search the snippets for a specific text match .
1771	" a b c d " = > [ " a " .
1772	controller helper method to verify call method on policy .
1773	controller helper method to filter out non - authorized objects from the passed in array @param method [ symbol ] method to be called on each policy @param objects [ array ] array of objects to filter @param user [ user ] the current user object to pass @return ( array ) @visibility publi .
1774	helper method available in controllers and views that returns the value of the policy method @param ( see .
1775	returns the address balance ( received - sent ) raise error if address is invali .
1776	find the first saved record @note last uses a sorted set as an index of ids and finds the highest id .
1777	find a record by id @param ids [ integer .
1778	iterate over all records in batches @param options [ hash ] accepts options start to offset from the beginning of index .
1779	fixme a lot of duplication with reset passwor .
1780	returns the deserialized mapped key when provided with the former key .
1781	( a different syntax to the above ) .
1782	number of processors seen by the os and used for process scheduling .
1783	number of physical processor cores on the current system .
1784	warning this method takes half the sunrise time to execut .
1785	reload the events from the event file .
1786	see if this model is followee of some model example > > @ruby .
1787	see model s followed history example > > @ruby .
1788	puts this thread to sleep until another thread resumes it .
1789	validates that an object behaves like a +mutex+ must be able to lock and unlock +mutex+ .
1790	validates a timeout value @api private @param timeout [ nil .
1791	todo split in 2 methods for consistenc .
1792	depends on yaml files dont use elsewher .
1793	parse color code ( " 00 " .
1794	todo move / fix this ( mapping should expose some clean way to inspect relationships ) ! .
1795	def initialize ( allowed extensions = [ ] .
1796	subject can be set in your i18n file at config / locales / en .
1797	render the template including the handler as a loca .
1798	this call initiates a race resistant attempt to make sure that there is only 1 clear winner among n potential agents attempting to run the same goal on the same spreadsheet agent s cel .
1799	you have the option of picking from many cards .
1800	this method is called on your brain when you are the target of a card that has a bang action ( a missable attack ) .
1801	this method is called if your hand is over the hand limit .
1802	this is the method that is called on your turn .
1803	creates a new mutex concurrency tool .
1804	releases the lock and puts this thread to sleep .
1805	temporarily unlocks it while a block is run .
1806	calculate time elapsed when running block .
1807	stalls test until ^ c is hit useful for inspecting page state via firebu .
1808	makes a call to a block that accepts optional argument .
1809	extracts the rdoc of a given ruby file source .
1810	carves up a mime - type and returns an array of the [ type .
1811	carves up a media range and returns an array of the [ type .
1812	find the best match for a given mime - type against a list of media ranges that have already been parsed by .
1813	returns the quality " q " of a mime type when compared against the media - ranges in ranges .
1814	takes a list of supported mime - types and finds the best match for all the media - ranges listed in header .
1815	on a failed attempt to save ( typically due to validation errors ) .
1816	allow self - changing methods where ! .
1817	extend map to accept key argument .
1818	extend the sort api to allow stuff like sort ( kind .
1819	add select method to select the fields to retur .
1820	sets the pagination inf .
1821	pass in a hash that s been encoded as json and then base64 .
1822	see if this model is follower of some model example > > @jim .
1823	see user s follow history example > > @jim .
1824	retrieves an item from it .
1825	this is for internal use by spreadsheetagent classes that extend spreadsheetagentd .
1826	announce a specific service key available on specific port passed block is called when the announce is sent @param key [ string ] service identifier @param port [ int ] service port number @block callbac .
1827	condition builders a innner method for some condition builders .
1828	takes in the path to the png file and the width ( in pixels - equivalent to two spaces ) calls create color string to get an array of colors & split it into rows then iterates over that array .
1829	finds height of the image relative to provided widt .
1830	iterates over each pixel of resized image to find closest colo .
1831	iterates over the palette to find the most similar colo .
1832	takes in a string of colors and puts them out as background colored spaces for example .
1833	converts a command name to a module name .
1834	converts a module name to a command name .
1835	build a depth first tre .
1836	creates a new sleeper concurrency tool .
1837	validates a timeout value .
1838	initialize passing configuration send a message to grap .
1839	initialize an empty openstruct to hold configuration options to set a config option call the corresponding method with an argument .
1840	@ ! attribute embeddable type @return [ string .
1841	constructor return hijri date with month and day name .
1842	add days - weeks - months - year .
1843	comparison operator return hijri date plus n day .
1844	convert arabic numbers to hindi number .
1845	transform the ruby obj -> to a has .
1846	sets the site for the class in which this module is extende .
1847	def all attributes set? site && user && password end routes to active resource fin .
1848	creates an active resource class dynamically .
1849	create a new spreadsheetagentrunner .
1850	provide a proc desinged to intelligently determine pages to process .
1851	processes configured pages .
1852	load agent load the agent from $bixby home .
1853	run the agent app ! this is the main method .
1854	if running as root .
1855	validate argv if empty .
1856	ensure that the var dir exists and is writable @raise [ systemexit ] on erro .
